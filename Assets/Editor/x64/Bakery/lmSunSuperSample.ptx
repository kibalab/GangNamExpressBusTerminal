//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_Dir[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<160>;
	.reg .b16 	%rs<76>;
	.reg .f32 	%f<1140>;
	.reg .b32 	%r<460>;
	.reg .b64 	%rd<224>;


	mov.u64 	%rd223, __local_depot0;
	cvta.local.u64 	%SP, %rd223;
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	cvt.u64.u32	%rd26, %r106;
	cvt.u64.u32	%rd27, %r107;
	mov.u64 	%rd30, uvnormal;
	cvta.global.u64 	%rd25, %rd30;
	mov.u32 	%r104, 2;
	mov.u32 	%r105, 4;
	mov.u64 	%rd29, 0;
	// inline asm
	call (%rd24), _rt_buffer_get_64, (%rd25, %r104, %r105, %rd26, %rd27, %rd29, %rd29);
	// inline asm
	ld.u32 	%r1, [%rd24];
	shr.u32 	%r110, %r1, 16;
	cvt.u16.u32	%rs1, %r110;
	and.b16  	%rs4, %rs1, 255;
	cvt.u16.u32	%rs5, %r1;
	or.b16  	%rs6, %rs5, %rs4;
	setp.eq.s16	%p5, %rs6, 0;
	mov.f32 	%f1088, 0f00000000;
	mov.f32 	%f1089, %f1088;
	mov.f32 	%f1090, %f1088;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs7, [%rd24+1];
	and.b16  	%rs9, %rs5, 255;
	cvt.rn.f32.u16	%f262, %rs9;
	div.rn.f32 	%f263, %f262, 0f437F0000;
	fma.rn.f32 	%f264, %f263, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f265, %rs7;
	div.rn.f32 	%f266, %f265, 0f437F0000;
	fma.rn.f32 	%f267, %f266, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f268, %rs4;
	div.rn.f32 	%f269, %f268, 0f437F0000;
	fma.rn.f32 	%f270, %f269, 0f40000000, 0fBF800000;
	mul.f32 	%f271, %f267, %f267;
	fma.rn.f32 	%f272, %f264, %f264, %f271;
	fma.rn.f32 	%f273, %f270, %f270, %f272;
	sqrt.rn.f32 	%f274, %f273;
	rcp.rn.f32 	%f275, %f274;
	mul.f32 	%f1088, %f264, %f275;
	mul.f32 	%f1089, %f267, %f275;
	mul.f32 	%f1090, %f270, %f275;

BB0_2:
	ld.global.v2.u32 	{%r111, %r112}, [pixelID];
	ld.global.v2.u32 	{%r114, %r115}, [tileInfo];
	add.s32 	%r2, %r111, %r114;
	add.s32 	%r3, %r112, %r115;
	setp.eq.f32	%p6, %f1089, 0f00000000;
	setp.eq.f32	%p7, %f1088, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f1090, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_139;
	bra.uni 	BB0_3;

BB0_139:
	ld.global.u32 	%r459, [imageEnabled];
	and.b32  	%r393, %r459, 1;
	setp.eq.b32	%p154, %r393, 1;
	@!%p154 bra 	BB0_141;
	bra.uni 	BB0_140;

BB0_140:
	cvt.u64.u32	%rd177, %r2;
	cvt.u64.u32	%rd178, %r3;
	mov.u64 	%rd181, image;
	cvta.global.u64 	%rd176, %rd181;
	mov.u64 	%rd180, 0;
	// inline asm
	call (%rd175), _rt_buffer_get_64, (%rd176, %r104, %r105, %rd177, %rd178, %rd180, %rd180);
	// inline asm
	mov.u16 	%rs57, 0;
	st.v4.u8 	[%rd175], {%rs57, %rs57, %rs57, %rs57};
	ld.global.u32 	%r459, [imageEnabled];

BB0_141:
	and.b32  	%r396, %r459, 8;
	setp.eq.s32	%p155, %r396, 0;
	@%p155 bra 	BB0_143;

	cvt.u64.u32	%rd184, %r2;
	cvt.u64.u32	%rd185, %r3;
	mov.u64 	%rd188, image_Mask;
	cvta.global.u64 	%rd183, %rd188;
	mov.u64 	%rd187, 0;
	// inline asm
	call (%rd182), _rt_buffer_get_64, (%rd183, %r104, %r104, %rd184, %rd185, %rd187, %rd187);
	// inline asm
	mov.f32 	%f1074, 0f00000000;
	cvt.rzi.u32.f32	%r399, %f1074;
	cvt.u16.u32	%rs58, %r399;
	mov.u16 	%rs59, 0;
	st.v2.u8 	[%rd182], {%rs58, %rs59};
	ld.global.u32 	%r459, [imageEnabled];

BB0_143:
	and.b32  	%r400, %r459, 4;
	setp.eq.s32	%p156, %r400, 0;
	@%p156 bra 	BB0_147;

	ld.global.u32 	%r401, [additive];
	setp.eq.s32	%p157, %r401, 0;
	cvt.u64.u32	%rd22, %r2;
	cvt.u64.u32	%rd23, %r3;
	@%p157 bra 	BB0_146;

	mov.u64 	%rd201, image_HDR;
	cvta.global.u64 	%rd190, %rd201;
	mov.u32 	%r405, 8;
	mov.u64 	%rd200, 0;
	// inline asm
	call (%rd189), _rt_buffer_get_64, (%rd190, %r104, %r405, %rd22, %rd23, %rd200, %rd200);
	// inline asm
	ld.v4.u16 	{%rs66, %rs67, %rs68, %rs69}, [%rd189];
	// inline asm
	{  cvt.f32.f16 %f1075, %rs66;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1076, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1077, %rs68;}

	// inline asm
	// inline asm
	call (%rd195), _rt_buffer_get_64, (%rd190, %r104, %r405, %rd22, %rd23, %rd200, %rd200);
	// inline asm
	add.f32 	%f1078, %f1075, 0f00000000;
	add.f32 	%f1079, %f1076, 0f00000000;
	add.f32 	%f1080, %f1077, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1080;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1079;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs63, %f1078;}

	// inline asm
	mov.u16 	%rs70, 0;
	st.v4.u16 	[%rd195], {%rs63, %rs64, %rs65, %rs70};
	bra.uni 	BB0_147;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f276, %f1088, %f7;
	mul.f32 	%f277, %f1089, %f8;
	neg.f32 	%f278, %f277;
	sub.f32 	%f279, %f278, %f276;
	mul.f32 	%f280, %f1090, %f9;
	sub.f32 	%f10, %f279, %f280;
	ld.global.u32 	%r119, [ignoreNormal];
	setp.eq.s32	%p11, %r119, 0;
	setp.le.f32	%p12, %f10, 0f00000000;
	and.pred  	%p13, %p11, %p12;
	ld.global.u32 	%r457, [imageEnabled];
	and.b32  	%r120, %r457, 32;
	setp.eq.s32	%p14, %r120, 0;
	and.pred  	%p15, %p13, %p14;
	@%p15 bra 	BB0_129;
	bra.uni 	BB0_4;

BB0_129:
	and.b32  	%r376, %r457, 1;
	setp.eq.b32	%p149, %r376, 1;
	@!%p149 bra 	BB0_131;
	bra.uni 	BB0_130;

BB0_130:
	cvt.u64.u32	%rd136, %r2;
	cvt.u64.u32	%rd137, %r3;
	mov.u64 	%rd140, image;
	cvta.global.u64 	%rd135, %rd140;
	mov.u64 	%rd139, 0;
	// inline asm
	call (%rd134), _rt_buffer_get_64, (%rd135, %r104, %r105, %rd136, %rd137, %rd139, %rd139);
	// inline asm
	mov.u16 	%rs37, 255;
	mov.u16 	%rs38, 0;
	st.v4.u8 	[%rd134], {%rs38, %rs38, %rs38, %rs37};
	ld.global.u32 	%r457, [imageEnabled];

BB0_131:
	and.b32  	%r379, %r457, 8;
	setp.eq.s32	%p150, %r379, 0;
	@%p150 bra 	BB0_133;

	cvt.u64.u32	%rd143, %r2;
	cvt.u64.u32	%rd144, %r3;
	mov.u64 	%rd147, image_Mask;
	cvta.global.u64 	%rd142, %rd147;
	mov.u64 	%rd146, 0;
	// inline asm
	call (%rd141), _rt_buffer_get_64, (%rd142, %r104, %r104, %rd143, %rd144, %rd146, %rd146);
	// inline asm
	mov.f32 	%f1063, 0f00000000;
	cvt.rzi.u32.f32	%r382, %f1063;
	cvt.u16.u32	%rs39, %r382;
	mov.u16 	%rs40, 255;
	st.v2.u8 	[%rd141], {%rs39, %rs40};
	ld.global.u32 	%r457, [imageEnabled];

BB0_133:
	and.b32  	%r383, %r457, 4;
	setp.eq.s32	%p151, %r383, 0;
	@%p151 bra 	BB0_137;

	ld.global.u32 	%r384, [additive];
	setp.eq.s32	%p152, %r384, 0;
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	mov.f32 	%f1064, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs41, %f1064;}

	// inline asm
	@%p152 bra 	BB0_136;

	mov.u64 	%rd160, image_HDR;
	cvta.global.u64 	%rd149, %rd160;
	mov.u32 	%r388, 8;
	mov.u64 	%rd159, 0;
	// inline asm
	call (%rd148), _rt_buffer_get_64, (%rd149, %r104, %r388, %rd20, %rd21, %rd159, %rd159);
	// inline asm
	ld.v4.u16 	{%rs48, %rs49, %rs50, %rs51}, [%rd148];
	// inline asm
	{  cvt.f32.f16 %f1065, %rs48;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1066, %rs49;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1067, %rs50;}

	// inline asm
	// inline asm
	call (%rd154), _rt_buffer_get_64, (%rd149, %r104, %r388, %rd20, %rd21, %rd159, %rd159);
	// inline asm
	add.f32 	%f1068, %f1065, 0f00000000;
	add.f32 	%f1069, %f1066, 0f00000000;
	add.f32 	%f1070, %f1067, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f1070;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f1069;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f1068;}

	// inline asm
	st.v4.u16 	[%rd154], {%rs45, %rs46, %rs47, %rs41};
	bra.uni 	BB0_137;

BB0_4:
	ld.global.v2.u32 	{%r129, %r130}, [pixelID];
	cvt.u64.u32	%rd33, %r129;
	cvt.u64.u32	%rd34, %r130;
	mov.u64 	%rd55, uvpos;
	cvta.global.u64 	%rd32, %rd55;
	mov.u32 	%r126, 12;
	// inline asm
	call (%rd31), _rt_buffer_get_64, (%rd32, %r104, %r126, %rd33, %rd34, %rd29, %rd29);
	// inline asm
	ld.f32 	%f283, [%rd31+8];
	ld.f32 	%f284, [%rd31+4];
	ld.f32 	%f285, [%rd31];
	mul.f32 	%f286, %f285, 0f3456BF95;
	mul.f32 	%f287, %f284, 0f3456BF95;
	mul.f32 	%f288, %f283, 0f3456BF95;
	abs.f32 	%f289, %f1088;
	div.rn.f32 	%f290, %f286, %f289;
	abs.f32 	%f291, %f1089;
	div.rn.f32 	%f292, %f287, %f291;
	abs.f32 	%f293, %f1090;
	div.rn.f32 	%f294, %f288, %f293;
	abs.f32 	%f295, %f290;
	abs.f32 	%f296, %f292;
	abs.f32 	%f297, %f294;
	mov.f32 	%f298, 0f38D1B717;
	max.f32 	%f299, %f295, %f298;
	max.f32 	%f300, %f296, %f298;
	max.f32 	%f301, %f297, %f298;
	fma.rn.f32 	%f11, %f1088, %f299, %f285;
	fma.rn.f32 	%f12, %f1089, %f300, %f284;
	fma.rn.f32 	%f13, %f1090, %f301, %f283;
	setp.gt.f32	%p16, %f289, %f293;
	neg.f32 	%f302, %f1089;
	selp.f32	%f303, %f302, 0f00000000, %p16;
	neg.f32 	%f304, %f1090;
	selp.f32	%f305, %f1088, %f304, %p16;
	selp.f32	%f306, 0f00000000, %f1089, %p16;
	mul.f32 	%f307, %f305, %f305;
	fma.rn.f32 	%f308, %f303, %f303, %f307;
	fma.rn.f32 	%f309, %f306, %f306, %f308;
	sqrt.rn.f32 	%f310, %f309;
	rcp.rn.f32 	%f311, %f310;
	mul.f32 	%f14, %f303, %f311;
	mul.f32 	%f15, %f305, %f311;
	mul.f32 	%f16, %f306, %f311;
	mul.f32 	%f312, %f1090, %f15;
	mul.f32 	%f313, %f1089, %f16;
	sub.f32 	%f17, %f312, %f313;
	mul.f32 	%f314, %f1088, %f16;
	mul.f32 	%f315, %f1090, %f14;
	sub.f32 	%f18, %f314, %f315;
	mul.f32 	%f316, %f1089, %f14;
	mul.f32 	%f317, %f1088, %f15;
	sub.f32 	%f19, %f316, %f317;
	ld.global.v2.u32 	{%r133, %r134}, [pixelID];
	cvt.u64.u32	%rd40, %r134;
	add.s32 	%r137, %r133, 1;
	ld.global.u32 	%r138, [resolution];
	add.s32 	%r139, %r138, -1;
	min.u32 	%r140, %r137, %r139;
	cvt.u64.u32	%rd39, %r140;
	// inline asm
	call (%rd37), _rt_buffer_get_64, (%rd32, %r104, %r126, %rd39, %rd40, %rd29, %rd29);
	// inline asm
	ld.f32 	%f318, [%rd37+8];
	ld.f32 	%f319, [%rd37+4];
	ld.f32 	%f320, [%rd37];
	setp.eq.f32	%p17, %f320, 0f00000000;
	setp.eq.f32	%p18, %f319, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.f32	%p20, %f318, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	selp.f32	%f321, %f285, %f320, %p21;
	selp.f32	%f322, %f284, %f319, %p21;
	selp.f32	%f323, %f283, %f318, %p21;
	ld.global.v2.u32 	{%r141, %r142}, [pixelID];
	add.s32 	%r145, %r142, 1;
	ld.global.u32 	%r146, [resolution+4];
	add.s32 	%r147, %r146, -1;
	min.u32 	%r148, %r145, %r147;
	cvt.u64.u32	%rd45, %r141;
	cvt.u64.u32	%rd46, %r148;
	// inline asm
	call (%rd43), _rt_buffer_get_64, (%rd32, %r104, %r126, %rd45, %rd46, %rd29, %rd29);
	// inline asm
	ld.f32 	%f324, [%rd43+8];
	ld.f32 	%f325, [%rd43+4];
	ld.f32 	%f326, [%rd43];
	setp.eq.f32	%p22, %f326, 0f00000000;
	setp.eq.f32	%p23, %f325, 0f00000000;
	and.pred  	%p24, %p22, %p23;
	setp.eq.f32	%p25, %f324, 0f00000000;
	and.pred  	%p26, %p24, %p25;
	selp.f32	%f327, %f285, %f326, %p26;
	selp.f32	%f328, %f284, %f325, %p26;
	selp.f32	%f329, %f283, %f324, %p26;
	sub.f32 	%f330, %f321, %f285;
	sub.f32 	%f331, %f322, %f284;
	sub.f32 	%f332, %f323, %f283;
	sub.f32 	%f333, %f327, %f285;
	sub.f32 	%f334, %f328, %f284;
	sub.f32 	%f335, %f329, %f283;
	abs.f32 	%f336, %f330;
	abs.f32 	%f337, %f333;
	max.f32 	%f338, %f336, %f337;
	abs.f32 	%f339, %f331;
	abs.f32 	%f340, %f334;
	max.f32 	%f341, %f339, %f340;
	abs.f32 	%f342, %f332;
	abs.f32 	%f343, %f335;
	max.f32 	%f344, %f342, %f343;
	max.f32 	%f345, %f338, %f341;
	max.f32 	%f346, %f345, %f344;
	setp.neu.f32	%p27, %f330, 0f00000000;
	setp.neu.f32	%p28, %f331, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	setp.neu.f32	%p30, %f332, 0f00000000;
	setp.neu.f32	%p31, %f333, 0f00000000;
	setp.neu.f32	%p32, %f334, 0f00000000;
	or.pred  	%p33, %p31, %p32;
	setp.neu.f32	%p34, %f335, 0f00000000;
	or.pred  	%p35, %p33, %p34;
	or.pred  	%p36, %p29, %p30;
	and.pred  	%p37, %p36, %p35;
	selp.f32	%f20, %f346, 0f00000000, %p37;
	abs.f32 	%f347, %f9;
	abs.f32 	%f348, %f7;
	setp.gt.f32	%p38, %f348, %f347;
	neg.f32 	%f349, %f8;
	selp.f32	%f350, %f349, 0f00000000, %p38;
	neg.f32 	%f351, %f9;
	selp.f32	%f352, %f7, %f351, %p38;
	selp.f32	%f353, 0f00000000, %f8, %p38;
	mul.f32 	%f354, %f352, %f352;
	fma.rn.f32 	%f355, %f350, %f350, %f354;
	fma.rn.f32 	%f356, %f353, %f353, %f355;
	sqrt.rn.f32 	%f357, %f356;
	rcp.rn.f32 	%f358, %f357;
	mul.f32 	%f21, %f350, %f358;
	mul.f32 	%f22, %f352, %f358;
	mul.f32 	%f23, %f353, %f358;
	ld.global.v2.u32 	{%r149, %r150}, [pixelID];
	cvt.u64.u32	%rd51, %r149;
	cvt.u64.u32	%rd52, %r150;
	mov.u64 	%rd56, rnd_seeds;
	cvta.global.u64 	%rd50, %rd56;
	// inline asm
	call (%rd49), _rt_buffer_get_64, (%rd50, %r104, %r105, %rd51, %rd52, %rd29, %rd29);
	// inline asm
	ld.global.u32 	%r426, [samples];
	mov.f32 	%f1093, 0f00000000;
	setp.lt.s32	%p39, %r426, 1;
	@%p39 bra 	BB0_5;

	cvt.rn.f32.s32	%f361, %r426;
	rcp.rn.f32 	%f24, %f361;
	ld.u32 	%r452, [%rd49];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f362, %f17, 0f3E24A490;
	mul.f32 	%f363, %f18, 0f3E24A490;
	mul.f32 	%f364, %f19, 0f3E24A490;
	fma.rn.f32 	%f365, %f20, %f362, %f11;
	fma.rn.f32 	%f366, %f20, %f363, %f12;
	fma.rn.f32 	%f367, %f20, %f364, %f13;
	mul.f32 	%f368, %f14, 0fBECECEDE;
	mul.f32 	%f369, %f15, 0fBECECEDE;
	mul.f32 	%f370, %f16, 0fBECECEDE;
	fma.rn.f32 	%f28, %f20, %f368, %f365;
	fma.rn.f32 	%f29, %f20, %f369, %f366;
	fma.rn.f32 	%f30, %f20, %f370, %f367;
	sub.f32 	%f31, %f28, %f11;
	sub.f32 	%f32, %f29, %f12;
	sub.f32 	%f33, %f30, %f13;
	mul.f32 	%f371, %f32, %f32;
	fma.rn.f32 	%f372, %f31, %f31, %f371;
	fma.rn.f32 	%f34, %f33, %f33, %f372;
	mul.f32 	%f373, %f17, 0fBE24A490;
	mul.f32 	%f374, %f18, 0fBE24A490;
	mul.f32 	%f375, %f19, 0fBE24A490;
	fma.rn.f32 	%f376, %f20, %f373, %f11;
	fma.rn.f32 	%f377, %f20, %f374, %f12;
	fma.rn.f32 	%f378, %f20, %f375, %f13;
	mul.f32 	%f379, %f14, 0f3ECACABC;
	mul.f32 	%f380, %f15, 0f3ECACABC;
	mul.f32 	%f381, %f16, 0f3ECACABC;
	fma.rn.f32 	%f35, %f20, %f379, %f376;
	fma.rn.f32 	%f36, %f20, %f380, %f377;
	fma.rn.f32 	%f37, %f20, %f381, %f378;
	sub.f32 	%f38, %f35, %f11;
	sub.f32 	%f39, %f36, %f12;
	sub.f32 	%f40, %f37, %f13;
	mul.f32 	%f382, %f39, %f39;
	fma.rn.f32 	%f383, %f38, %f38, %f382;
	fma.rn.f32 	%f41, %f40, %f40, %f383;
	mul.f32 	%f384, %f17, 0f3F23A3A8;
	mul.f32 	%f385, %f18, 0f3F23A3A8;
	mul.f32 	%f386, %f19, 0f3F23A3A8;
	fma.rn.f32 	%f387, %f20, %f384, %f11;
	fma.rn.f32 	%f388, %f20, %f385, %f12;
	fma.rn.f32 	%f389, %f20, %f386, %f13;
	mul.f32 	%f390, %f14, 0f3E24A490;
	mul.f32 	%f391, %f15, 0f3E24A490;
	mul.f32 	%f392, %f16, 0f3E24A490;
	fma.rn.f32 	%f42, %f20, %f390, %f387;
	fma.rn.f32 	%f43, %f20, %f391, %f388;
	fma.rn.f32 	%f44, %f20, %f392, %f389;
	sub.f32 	%f45, %f42, %f11;
	sub.f32 	%f46, %f43, %f12;
	sub.f32 	%f47, %f44, %f13;
	mul.f32 	%f393, %f46, %f46;
	fma.rn.f32 	%f394, %f45, %f45, %f393;
	fma.rn.f32 	%f48, %f47, %f47, %f394;
	mul.f32 	%f395, %f17, 0fBECECEDE;
	mul.f32 	%f396, %f18, 0fBECECEDE;
	mul.f32 	%f397, %f19, 0fBECECEDE;
	fma.rn.f32 	%f398, %f20, %f395, %f11;
	fma.rn.f32 	%f399, %f20, %f396, %f12;
	fma.rn.f32 	%f400, %f20, %f397, %f13;
	mul.f32 	%f401, %f14, 0fBF23A3A9;
	mul.f32 	%f402, %f15, 0fBF23A3A9;
	mul.f32 	%f403, %f16, 0fBF23A3A9;
	fma.rn.f32 	%f49, %f20, %f401, %f398;
	fma.rn.f32 	%f50, %f20, %f402, %f399;
	fma.rn.f32 	%f51, %f20, %f403, %f400;
	sub.f32 	%f52, %f49, %f11;
	sub.f32 	%f53, %f50, %f12;
	sub.f32 	%f54, %f51, %f13;
	mul.f32 	%f404, %f53, %f53;
	fma.rn.f32 	%f405, %f52, %f52, %f404;
	fma.rn.f32 	%f55, %f54, %f54, %f405;
	mul.f32 	%f406, %f17, 0fBF23A3A9;
	mul.f32 	%f407, %f18, 0fBF23A3A9;
	mul.f32 	%f408, %f19, 0fBF23A3A9;
	fma.rn.f32 	%f409, %f20, %f406, %f11;
	fma.rn.f32 	%f410, %f20, %f407, %f12;
	fma.rn.f32 	%f411, %f20, %f408, %f13;
	mul.f32 	%f412, %f14, 0f3F23A3A8;
	mul.f32 	%f413, %f15, 0f3F23A3A8;
	mul.f32 	%f414, %f16, 0f3F23A3A8;
	fma.rn.f32 	%f56, %f20, %f412, %f409;
	fma.rn.f32 	%f57, %f20, %f413, %f410;
	fma.rn.f32 	%f58, %f20, %f414, %f411;
	sub.f32 	%f59, %f56, %f11;
	sub.f32 	%f60, %f57, %f12;
	sub.f32 	%f61, %f58, %f13;
	mul.f32 	%f415, %f60, %f60;
	fma.rn.f32 	%f416, %f59, %f59, %f415;
	fma.rn.f32 	%f62, %f61, %f61, %f416;
	mul.f32 	%f417, %f17, 0fBF61E1E3;
	mul.f32 	%f418, %f18, 0fBF61E1E3;
	mul.f32 	%f419, %f19, 0fBF61E1E3;
	fma.rn.f32 	%f420, %f20, %f417, %f11;
	fma.rn.f32 	%f421, %f20, %f418, %f12;
	fma.rn.f32 	%f422, %f20, %f419, %f13;
	mul.f32 	%f423, %f14, 0fBE24A490;
	mul.f32 	%f424, %f15, 0fBE24A490;
	mul.f32 	%f425, %f16, 0fBE24A490;
	fma.rn.f32 	%f63, %f20, %f423, %f420;
	fma.rn.f32 	%f64, %f20, %f424, %f421;
	fma.rn.f32 	%f65, %f20, %f425, %f422;
	sub.f32 	%f66, %f63, %f11;
	sub.f32 	%f67, %f64, %f12;
	sub.f32 	%f68, %f65, %f13;
	mul.f32 	%f426, %f67, %f67;
	fma.rn.f32 	%f427, %f66, %f66, %f426;
	fma.rn.f32 	%f69, %f68, %f68, %f427;
	mul.f32 	%f428, %f17, 0f3ECACABC;
	mul.f32 	%f429, %f18, 0f3ECACABC;
	mul.f32 	%f430, %f19, 0f3ECACABC;
	fma.rn.f32 	%f431, %f20, %f428, %f11;
	fma.rn.f32 	%f432, %f20, %f429, %f12;
	fma.rn.f32 	%f433, %f20, %f430, %f13;
	mul.f32 	%f434, %f14, 0f3F61E1D2;
	mul.f32 	%f435, %f15, 0f3F61E1D2;
	mul.f32 	%f436, %f16, 0f3F61E1D2;
	fma.rn.f32 	%f70, %f20, %f434, %f431;
	fma.rn.f32 	%f71, %f20, %f435, %f432;
	fma.rn.f32 	%f72, %f20, %f436, %f433;
	sub.f32 	%f73, %f70, %f11;
	sub.f32 	%f74, %f71, %f12;
	sub.f32 	%f75, %f72, %f13;
	mul.f32 	%f437, %f74, %f74;
	fma.rn.f32 	%f438, %f73, %f73, %f437;
	fma.rn.f32 	%f76, %f75, %f75, %f438;
	mul.f32 	%f439, %f17, 0f3F61E1D2;
	mul.f32 	%f440, %f18, 0f3F61E1D2;
	mul.f32 	%f441, %f19, 0f3F61E1D2;
	fma.rn.f32 	%f442, %f20, %f439, %f11;
	fma.rn.f32 	%f443, %f20, %f440, %f12;
	fma.rn.f32 	%f444, %f20, %f441, %f13;
	mul.f32 	%f445, %f14, 0fBF61E1E3;
	mul.f32 	%f446, %f15, 0fBF61E1E3;
	mul.f32 	%f447, %f16, 0fBF61E1E3;
	fma.rn.f32 	%f77, %f20, %f445, %f442;
	fma.rn.f32 	%f78, %f20, %f446, %f443;
	fma.rn.f32 	%f79, %f20, %f447, %f444;
	sub.f32 	%f80, %f77, %f11;
	sub.f32 	%f81, %f78, %f12;
	sub.f32 	%f82, %f79, %f13;
	mul.f32 	%f448, %f81, %f81;
	fma.rn.f32 	%f449, %f80, %f80, %f448;
	fma.rn.f32 	%f83, %f82, %f82, %f449;
	mul.f32 	%f450, %f7, %f22;
	mul.f32 	%f451, %f8, %f21;
	sub.f32 	%f84, %f451, %f450;
	mul.f32 	%f452, %f9, %f21;
	mul.f32 	%f453, %f7, %f23;
	sub.f32 	%f85, %f453, %f452;
	mul.f32 	%f454, %f8, %f23;
	mul.f32 	%f455, %f9, %f22;
	sub.f32 	%f86, %f455, %f454;
	mov.f32 	%f1093, 0f00000000;
	mov.u32 	%r427, 0;
	abs.f32 	%f456, %f26;
	abs.f32 	%f457, %f25;
	max.f32 	%f458, %f457, %f456;
	abs.f32 	%f459, %f27;
	max.f32 	%f460, %f458, %f459;
	sqrt.rn.f32 	%f91, %f34;
	sqrt.rn.f32 	%f95, %f41;
	sqrt.rn.f32 	%f99, %f48;
	sqrt.rn.f32 	%f103, %f55;
	sqrt.rn.f32 	%f107, %f62;
	sqrt.rn.f32 	%f111, %f69;
	sqrt.rn.f32 	%f115, %f76;
	sqrt.rn.f32 	%f119, %f83;
	mov.f32 	%f1094, %f1093;

BB0_7:
	setp.lt.s32	%p40, %r426, 1;
	@%p40 bra 	BB0_72;

	rcp.rn.f32 	%f462, %f91;
	mul.f32 	%f92, %f462, %f31;
	mul.f32 	%f93, %f462, %f32;
	mul.f32 	%f94, %f462, %f33;
	rcp.rn.f32 	%f463, %f95;
	mul.f32 	%f96, %f463, %f38;
	mul.f32 	%f97, %f463, %f39;
	mul.f32 	%f98, %f463, %f40;
	rcp.rn.f32 	%f464, %f99;
	mul.f32 	%f100, %f464, %f45;
	mul.f32 	%f101, %f464, %f46;
	mul.f32 	%f102, %f464, %f47;
	rcp.rn.f32 	%f465, %f103;
	mul.f32 	%f104, %f465, %f52;
	mul.f32 	%f105, %f465, %f53;
	mul.f32 	%f106, %f465, %f54;
	rcp.rn.f32 	%f466, %f107;
	mul.f32 	%f108, %f466, %f59;
	mul.f32 	%f109, %f466, %f60;
	mul.f32 	%f110, %f466, %f61;
	rcp.rn.f32 	%f467, %f111;
	mul.f32 	%f112, %f467, %f66;
	mul.f32 	%f113, %f467, %f67;
	mul.f32 	%f114, %f467, %f68;
	rcp.rn.f32 	%f468, %f115;
	mul.f32 	%f116, %f468, %f73;
	mul.f32 	%f117, %f468, %f74;
	mul.f32 	%f118, %f468, %f75;
	rcp.rn.f32 	%f469, %f119;
	mul.f32 	%f120, %f469, %f80;
	mul.f32 	%f121, %f469, %f81;
	mul.f32 	%f122, %f469, %f82;
	mov.u32 	%r429, 0;

BB0_9:
	cvt.rn.f32.s32	%f1082, %r427;
	mad.lo.s32 	%r155, %r452, 1664525, 1013904223;
	and.b32  	%r156, %r155, 16777215;
	cvt.rn.f32.u32	%f470, %r156;
	fma.rn.f32 	%f471, %f470, 0f33800000, %f1082;
	mul.f32 	%f472, %f24, %f471;
	mad.lo.s32 	%r12, %r155, 1664525, 1013904223;
	and.b32  	%r157, %r12, 16777215;
	cvt.rn.f32.u32	%f473, %r157;
	cvt.rn.f32.s32	%f474, %r429;
	fma.rn.f32 	%f475, %f473, 0f33800000, %f474;
	mul.f32 	%f476, %f24, %f475;
	sqrt.rn.f32 	%f125, %f472;
	mul.f32 	%f1101, %f476, 0f40C90FDB;
	abs.f32 	%f127, %f1101;
	setp.neu.f32	%p41, %f127, 0f7F800000;
	mov.f32 	%f1095, %f1101;
	@%p41 bra 	BB0_11;

	mov.f32 	%f477, 0f00000000;
	mul.rn.f32 	%f1095, %f1101, %f477;

BB0_11:
	mul.f32 	%f478, %f1095, 0f3F22F983;
	cvt.rni.s32.f32	%r440, %f478;
	cvt.rn.f32.s32	%f479, %r440;
	neg.f32 	%f480, %f479;
	mov.f32 	%f481, 0f3FC90FDA;
	fma.rn.f32 	%f482, %f480, %f481, %f1095;
	mov.f32 	%f483, 0f33A22168;
	fma.rn.f32 	%f484, %f480, %f483, %f482;
	mov.f32 	%f485, 0f27C234C5;
	fma.rn.f32 	%f1096, %f480, %f485, %f484;
	abs.f32 	%f486, %f1095;
	setp.leu.f32	%p42, %f486, 0f47CE4780;
	@%p42 bra 	BB0_22;

	add.u64 	%rd58, %SP, 0;
	cvta.to.local.u64 	%rd219, %rd58;
	mov.b32 	 %r14, %f1095;
	shl.b32 	%r160, %r14, 8;
	or.b32  	%r16, %r160, -2147483648;
	mov.u32 	%r431, 0;
	mov.u64 	%rd220, 0;
	mov.u32 	%r432, %r431;

BB0_13:
	.pragma "nounroll";
	add.u64 	%rd217, %SP, 0;
	cvta.to.local.u64 	%rd216, %rd217;
	shl.b64 	%rd59, %rd220, 2;
	mov.u64 	%rd60, __cudart_i2opi_f;
	add.s64 	%rd61, %rd60, %rd59;
	ld.const.u32 	%r163, [%rd61];
	// inline asm
	{
	mad.lo.cc.u32   %r161, %r163, %r16, %r432;
	madc.hi.u32     %r432, %r163, %r16,  0;
	}
	// inline asm
	st.local.u32 	[%rd219], %r161;
	add.s32 	%r431, %r431, 1;
	cvt.s64.s32	%rd220, %r431;
	mul.wide.s32 	%rd64, %r431, 4;
	add.s64 	%rd219, %rd216, %rd64;
	setp.ne.s32	%p43, %r431, 6;
	@%p43 bra 	BB0_13;

	mov.b32 	 %r418, %f1095;
	shr.u32 	%r417, %r418, 23;
	add.u64 	%rd218, %SP, 0;
	and.b32  	%r166, %r417, 255;
	add.s32 	%r167, %r166, -128;
	shr.u32 	%r168, %r167, 5;
	cvta.to.local.u64 	%rd66, %rd218;
	st.local.u32 	[%rd66+24], %r432;
	mov.u32 	%r169, 6;
	sub.s32 	%r170, %r169, %r168;
	mul.wide.s32 	%rd67, %r170, 4;
	add.s64 	%rd8, %rd66, %rd67;
	ld.local.u32 	%r433, [%rd8];
	ld.local.u32 	%r434, [%rd8+-4];
	and.b32  	%r24, %r417, 31;
	setp.eq.s32	%p44, %r24, 0;
	@%p44 bra 	BB0_16;

	mov.u32 	%r171, 32;
	sub.s32 	%r172, %r171, %r24;
	shr.u32 	%r173, %r434, %r172;
	shl.b32 	%r174, %r433, %r24;
	add.s32 	%r433, %r173, %r174;
	ld.local.u32 	%r175, [%rd8+-8];
	shr.u32 	%r176, %r175, %r172;
	shl.b32 	%r177, %r434, %r24;
	add.s32 	%r434, %r176, %r177;

BB0_16:
	mov.b32 	 %r421, %f1095;
	and.b32  	%r436, %r421, -2147483648;
	shr.u32 	%r178, %r434, 30;
	shl.b32 	%r179, %r433, 2;
	add.s32 	%r435, %r178, %r179;
	shl.b32 	%r30, %r434, 2;
	shr.u32 	%r180, %r435, 31;
	shr.u32 	%r181, %r433, 30;
	add.s32 	%r31, %r180, %r181;
	setp.eq.s32	%p45, %r180, 0;
	@%p45 bra 	BB0_17;
	bra.uni 	BB0_18;

BB0_17:
	mov.u32 	%r437, %r30;
	bra.uni 	BB0_19;

BB0_18:
	mov.b32 	 %r423, %f1095;
	and.b32  	%r422, %r423, -2147483648;
	not.b32 	%r182, %r435;
	neg.s32 	%r437, %r30;
	setp.eq.s32	%p46, %r30, 0;
	selp.u32	%r183, 1, 0, %p46;
	add.s32 	%r435, %r183, %r182;
	xor.b32  	%r436, %r422, -2147483648;

BB0_19:
	mov.b32 	 %r425, %f1095;
	and.b32  	%r424, %r425, -2147483648;
	clz.b32 	%r439, %r435;
	setp.eq.s32	%p47, %r439, 0;
	shl.b32 	%r184, %r435, %r439;
	mov.u32 	%r185, 32;
	sub.s32 	%r186, %r185, %r439;
	shr.u32 	%r187, %r437, %r186;
	add.s32 	%r188, %r187, %r184;
	selp.b32	%r39, %r435, %r188, %p47;
	mov.u32 	%r189, -921707870;
	mul.hi.u32 	%r438, %r39, %r189;
	setp.eq.s32	%p48, %r424, 0;
	neg.s32 	%r190, %r31;
	selp.b32	%r440, %r31, %r190, %p48;
	setp.lt.s32	%p49, %r438, 1;
	@%p49 bra 	BB0_21;

	mul.lo.s32 	%r191, %r39, -921707870;
	shr.u32 	%r192, %r191, 31;
	shl.b32 	%r193, %r438, 1;
	add.s32 	%r438, %r192, %r193;
	add.s32 	%r439, %r439, 1;

BB0_21:
	mov.u32 	%r194, 126;
	sub.s32 	%r195, %r194, %r439;
	shl.b32 	%r196, %r195, 23;
	add.s32 	%r197, %r438, 1;
	shr.u32 	%r198, %r197, 7;
	add.s32 	%r199, %r198, 1;
	shr.u32 	%r200, %r199, 1;
	add.s32 	%r201, %r200, %r196;
	or.b32  	%r202, %r201, %r436;
	mov.b32 	 %f1096, %r202;

BB0_22:
	mul.rn.f32 	%f133, %f1096, %f1096;
	add.s32 	%r47, %r440, 1;
	and.b32  	%r48, %r47, 1;
	setp.eq.s32	%p50, %r48, 0;
	@%p50 bra 	BB0_24;
	bra.uni 	BB0_23;

BB0_24:
	mov.f32 	%f489, 0f3C08839E;
	mov.f32 	%f490, 0fB94CA1F9;
	fma.rn.f32 	%f1097, %f490, %f133, %f489;
	bra.uni 	BB0_25;

BB0_23:
	mov.f32 	%f487, 0fBAB6061A;
	mov.f32 	%f488, 0f37CCF5CE;
	fma.rn.f32 	%f1097, %f488, %f133, %f487;

BB0_25:
	@%p50 bra 	BB0_27;
	bra.uni 	BB0_26;

BB0_27:
	mov.f32 	%f494, 0fBE2AAAA3;
	fma.rn.f32 	%f495, %f1097, %f133, %f494;
	mov.f32 	%f496, 0f00000000;
	fma.rn.f32 	%f1098, %f495, %f133, %f496;
	bra.uni 	BB0_28;

BB0_26:
	mov.f32 	%f491, 0f3D2AAAA5;
	fma.rn.f32 	%f492, %f1097, %f133, %f491;
	mov.f32 	%f493, 0fBF000000;
	fma.rn.f32 	%f1098, %f492, %f133, %f493;

BB0_28:
	fma.rn.f32 	%f1099, %f1098, %f1096, %f1096;
	@%p50 bra 	BB0_30;

	mov.f32 	%f497, 0f3F800000;
	fma.rn.f32 	%f1099, %f1098, %f133, %f497;

BB0_30:
	and.b32  	%r203, %r47, 2;
	setp.eq.s32	%p53, %r203, 0;
	@%p53 bra 	BB0_32;

	mov.f32 	%f498, 0f00000000;
	mov.f32 	%f499, 0fBF800000;
	fma.rn.f32 	%f1099, %f1099, %f499, %f498;

BB0_32:
	abs.f32 	%f1084, %f1101;
	setp.neu.f32	%p159, %f1084, 0f7F800000;
	@%p159 bra 	BB0_34;

	mov.f32 	%f500, 0f00000000;
	mul.rn.f32 	%f1101, %f1101, %f500;

BB0_34:
	mov.f32 	%f1087, 0f27C234C5;
	mov.f32 	%f1086, 0f33A22168;
	mov.f32 	%f1085, 0f3FC90FDA;
	mul.f32 	%f501, %f1101, 0f3F22F983;
	cvt.rni.s32.f32	%r450, %f501;
	cvt.rn.f32.s32	%f502, %r450;
	neg.f32 	%f503, %f502;
	fma.rn.f32 	%f505, %f503, %f1085, %f1101;
	fma.rn.f32 	%f507, %f503, %f1086, %f505;
	fma.rn.f32 	%f1102, %f503, %f1087, %f507;
	abs.f32 	%f509, %f1101;
	setp.leu.f32	%p55, %f509, 0f47CE4780;
	@%p55 bra 	BB0_45;

	add.u64 	%rd69, %SP, 0;
	cvta.to.local.u64 	%rd9, %rd69;
	mov.b32 	 %r50, %f1101;
	shr.u32 	%r51, %r50, 23;
	shl.b32 	%r206, %r50, 8;
	or.b32  	%r52, %r206, -2147483648;
	mov.u32 	%r441, 0;
	mov.u64 	%rd221, %rd9;
	mov.u64 	%rd222, %rd29;
	mov.u32 	%r442, %r441;

BB0_36:
	.pragma "nounroll";
	shl.b64 	%rd70, %rd222, 2;
	mov.u64 	%rd71, __cudart_i2opi_f;
	add.s64 	%rd72, %rd71, %rd70;
	ld.const.u32 	%r209, [%rd72];
	// inline asm
	{
	mad.lo.cc.u32   %r207, %r209, %r52, %r442;
	madc.hi.u32     %r442, %r209, %r52,  0;
	}
	// inline asm
	st.local.u32 	[%rd221], %r207;
	add.s32 	%r441, %r441, 1;
	cvt.s64.s32	%rd222, %r441;
	mul.wide.s32 	%rd73, %r441, 4;
	add.s64 	%rd221, %rd9, %rd73;
	setp.ne.s32	%p56, %r441, 6;
	@%p56 bra 	BB0_36;

	and.b32  	%r212, %r51, 255;
	add.s32 	%r213, %r212, -128;
	shr.u32 	%r214, %r213, 5;
	and.b32  	%r57, %r50, -2147483648;
	cvta.to.local.u64 	%rd75, %rd69;
	st.local.u32 	[%rd75+24], %r442;
	mov.u32 	%r215, 6;
	sub.s32 	%r216, %r215, %r214;
	mul.wide.s32 	%rd76, %r216, 4;
	add.s64 	%rd15, %rd75, %rd76;
	ld.local.u32 	%r443, [%rd15];
	ld.local.u32 	%r444, [%rd15+-4];
	and.b32  	%r60, %r51, 31;
	setp.eq.s32	%p57, %r60, 0;
	@%p57 bra 	BB0_39;

	mov.u32 	%r217, 32;
	sub.s32 	%r218, %r217, %r60;
	shr.u32 	%r219, %r444, %r218;
	shl.b32 	%r220, %r443, %r60;
	add.s32 	%r443, %r219, %r220;
	ld.local.u32 	%r221, [%rd15+-8];
	shr.u32 	%r222, %r221, %r218;
	shl.b32 	%r223, %r444, %r60;
	add.s32 	%r444, %r222, %r223;

BB0_39:
	shr.u32 	%r224, %r444, 30;
	shl.b32 	%r225, %r443, 2;
	add.s32 	%r445, %r224, %r225;
	shl.b32 	%r66, %r444, 2;
	shr.u32 	%r226, %r445, 31;
	shr.u32 	%r227, %r443, 30;
	add.s32 	%r67, %r226, %r227;
	setp.eq.s32	%p58, %r226, 0;
	@%p58 bra 	BB0_40;
	bra.uni 	BB0_41;

BB0_40:
	mov.u32 	%r446, %r57;
	mov.u32 	%r447, %r66;
	bra.uni 	BB0_42;

BB0_41:
	not.b32 	%r228, %r445;
	neg.s32 	%r447, %r66;
	setp.eq.s32	%p59, %r66, 0;
	selp.u32	%r229, 1, 0, %p59;
	add.s32 	%r445, %r229, %r228;
	xor.b32  	%r446, %r57, -2147483648;

BB0_42:
	clz.b32 	%r449, %r445;
	setp.eq.s32	%p60, %r449, 0;
	shl.b32 	%r230, %r445, %r449;
	mov.u32 	%r231, 32;
	sub.s32 	%r232, %r231, %r449;
	shr.u32 	%r233, %r447, %r232;
	add.s32 	%r234, %r233, %r230;
	selp.b32	%r75, %r445, %r234, %p60;
	mov.u32 	%r235, -921707870;
	mul.hi.u32 	%r448, %r75, %r235;
	setp.eq.s32	%p61, %r57, 0;
	neg.s32 	%r236, %r67;
	selp.b32	%r450, %r67, %r236, %p61;
	setp.lt.s32	%p62, %r448, 1;
	@%p62 bra 	BB0_44;

	mul.lo.s32 	%r237, %r75, -921707870;
	shr.u32 	%r238, %r237, 31;
	shl.b32 	%r239, %r448, 1;
	add.s32 	%r448, %r238, %r239;
	add.s32 	%r449, %r449, 1;

BB0_44:
	mov.u32 	%r240, 126;
	sub.s32 	%r241, %r240, %r449;
	shl.b32 	%r242, %r241, 23;
	add.s32 	%r243, %r448, 1;
	shr.u32 	%r244, %r243, 7;
	add.s32 	%r245, %r244, 1;
	shr.u32 	%r246, %r245, 1;
	add.s32 	%r247, %r246, %r242;
	or.b32  	%r248, %r247, %r446;
	mov.b32 	 %f1102, %r248;

BB0_45:
	mul.rn.f32 	%f150, %f1102, %f1102;
	and.b32  	%r83, %r450, 1;
	setp.eq.s32	%p63, %r83, 0;
	@%p63 bra 	BB0_47;
	bra.uni 	BB0_46;

BB0_47:
	mov.f32 	%f512, 0f3C08839E;
	mov.f32 	%f513, 0fB94CA1F9;
	fma.rn.f32 	%f1103, %f513, %f150, %f512;
	bra.uni 	BB0_48;

BB0_46:
	mov.f32 	%f510, 0fBAB6061A;
	mov.f32 	%f511, 0f37CCF5CE;
	fma.rn.f32 	%f1103, %f511, %f150, %f510;

BB0_48:
	@%p63 bra 	BB0_50;
	bra.uni 	BB0_49;

BB0_50:
	mov.f32 	%f517, 0fBE2AAAA3;
	fma.rn.f32 	%f518, %f1103, %f150, %f517;
	mov.f32 	%f519, 0f00000000;
	fma.rn.f32 	%f1104, %f518, %f150, %f519;
	bra.uni 	BB0_51;

BB0_49:
	mov.f32 	%f514, 0f3D2AAAA5;
	fma.rn.f32 	%f515, %f1103, %f150, %f514;
	mov.f32 	%f516, 0fBF000000;
	fma.rn.f32 	%f1104, %f515, %f150, %f516;

BB0_51:
	fma.rn.f32 	%f1105, %f1104, %f1102, %f1102;
	@%p63 bra 	BB0_53;

	mov.f32 	%f520, 0f3F800000;
	fma.rn.f32 	%f1105, %f1104, %f150, %f520;

BB0_53:
	and.b32  	%r249, %r450, 2;
	setp.eq.s32	%p66, %r249, 0;
	@%p66 bra 	BB0_55;

	mov.f32 	%f521, 0f00000000;
	mov.f32 	%f522, 0fBF800000;
	fma.rn.f32 	%f1105, %f1105, %f522, %f521;

BB0_55:
	max.f32 	%f1083, %f460, %f298;
	mul.f32 	%f531, %f125, %f1099;
	add.u64 	%rd77, %SP, 28;
	cvta.to.local.u64 	%rd16, %rd77;
	mul.f32 	%f532, %f531, %f531;
	mov.f32 	%f533, 0f3F800000;
	sub.f32 	%f534, %f533, %f532;
	mul.f32 	%f535, %f125, %f1105;
	mul.f32 	%f536, %f535, %f535;
	sub.f32 	%f537, %f534, %f536;
	mov.f32 	%f538, 0f00000000;
	max.f32 	%f539, %f538, %f537;
	sqrt.rn.f32 	%f540, %f539;
	mul.f32 	%f541, %f21, %f535;
	mul.f32 	%f542, %f22, %f535;
	mul.f32 	%f543, %f23, %f535;
	fma.rn.f32 	%f544, %f86, %f531, %f541;
	fma.rn.f32 	%f545, %f85, %f531, %f542;
	fma.rn.f32 	%f546, %f84, %f531, %f543;
	fma.rn.f32 	%f547, %f7, %f540, %f544;
	fma.rn.f32 	%f548, %f8, %f540, %f545;
	fma.rn.f32 	%f549, %f9, %f540, %f546;
	add.f32 	%f550, %f7, %f547;
	add.f32 	%f551, %f8, %f548;
	add.f32 	%f552, %f9, %f549;
	ld.global.f32 	%f553, [shadowSpread];
	mul.f32 	%f554, %f553, %f550;
	mul.f32 	%f555, %f553, %f551;
	mul.f32 	%f556, %f553, %f552;
	sub.f32 	%f557, %f554, %f7;
	sub.f32 	%f558, %f555, %f8;
	sub.f32 	%f559, %f556, %f9;
	mul.f32 	%f560, %f558, %f558;
	fma.rn.f32 	%f561, %f557, %f557, %f560;
	fma.rn.f32 	%f562, %f559, %f559, %f561;
	sqrt.rn.f32 	%f563, %f562;
	rcp.rn.f32 	%f564, %f563;
	mul.f32 	%f162, %f564, %f557;
	mul.f32 	%f163, %f564, %f558;
	mul.f32 	%f164, %f564, %f559;
	ld.global.u32 	%r253, [imageEnabled];
	and.b32  	%r254, %r253, 32;
	setp.eq.s32	%p67, %r254, 0;
	selp.f32	%f565, 0f3F800000, 0f41200000, %p67;
	mul.f32 	%f529, %f565, %f1083;
	mov.u32 	%r255, 1065353216;
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r250, [root];
	mov.u32 	%r251, 1;
	// inline asm
	call _rt_trace_64, (%r250, %f11, %f12, %f13, %f92, %f93, %f94, %r251, %f529, %f91, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f566, [%rd16];
	setp.neu.f32	%p68, %f566, 0f3F800000;
	@%p68 bra 	BB0_57;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r256, [root];
	mov.f32 	%f574, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r256, %f28, %f29, %f30, %f162, %f163, %f164, %r251, %f529, %f574, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f575, [%rd16];
	add.f32 	%f1094, %f1094, %f575;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_57:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r260, [root];
	// inline asm
	call _rt_trace_64, (%r260, %f11, %f12, %f13, %f96, %f97, %f98, %r251, %f529, %f95, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f584, [%rd16];
	setp.neu.f32	%p69, %f584, 0f3F800000;
	@%p69 bra 	BB0_59;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r264, [root];
	mov.f32 	%f592, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r264, %f35, %f36, %f37, %f162, %f163, %f164, %r251, %f529, %f592, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f593, [%rd16];
	add.f32 	%f1094, %f1094, %f593;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_59:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r268, [root];
	// inline asm
	call _rt_trace_64, (%r268, %f11, %f12, %f13, %f100, %f101, %f102, %r251, %f529, %f99, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f602, [%rd16];
	setp.neu.f32	%p70, %f602, 0f3F800000;
	@%p70 bra 	BB0_61;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r272, [root];
	mov.f32 	%f610, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r272, %f42, %f43, %f44, %f162, %f163, %f164, %r251, %f529, %f610, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f611, [%rd16];
	add.f32 	%f1094, %f1094, %f611;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_61:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r276, [root];
	// inline asm
	call _rt_trace_64, (%r276, %f11, %f12, %f13, %f104, %f105, %f106, %r251, %f529, %f103, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f620, [%rd16];
	setp.neu.f32	%p71, %f620, 0f3F800000;
	@%p71 bra 	BB0_63;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r280, [root];
	mov.f32 	%f628, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r280, %f49, %f50, %f51, %f162, %f163, %f164, %r251, %f529, %f628, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f629, [%rd16];
	add.f32 	%f1094, %f1094, %f629;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_63:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r284, [root];
	// inline asm
	call _rt_trace_64, (%r284, %f11, %f12, %f13, %f108, %f109, %f110, %r251, %f529, %f107, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f638, [%rd16];
	setp.neu.f32	%p72, %f638, 0f3F800000;
	@%p72 bra 	BB0_65;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r288, [root];
	mov.f32 	%f646, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r288, %f56, %f57, %f58, %f162, %f163, %f164, %r251, %f529, %f646, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f647, [%rd16];
	add.f32 	%f1094, %f1094, %f647;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_65:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r292, [root];
	// inline asm
	call _rt_trace_64, (%r292, %f11, %f12, %f13, %f112, %f113, %f114, %r251, %f529, %f111, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f656, [%rd16];
	setp.neu.f32	%p73, %f656, 0f3F800000;
	@%p73 bra 	BB0_67;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r296, [root];
	mov.f32 	%f664, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r296, %f63, %f64, %f65, %f162, %f163, %f164, %r251, %f529, %f664, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f665, [%rd16];
	add.f32 	%f1094, %f1094, %f665;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_67:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r300, [root];
	// inline asm
	call _rt_trace_64, (%r300, %f11, %f12, %f13, %f116, %f117, %f118, %r251, %f529, %f115, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f674, [%rd16];
	setp.neu.f32	%p74, %f674, 0f3F800000;
	@%p74 bra 	BB0_69;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r304, [root];
	mov.f32 	%f682, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r304, %f70, %f71, %f72, %f162, %f163, %f164, %r251, %f529, %f682, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f683, [%rd16];
	add.f32 	%f1094, %f1094, %f683;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_69:
	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r308, [root];
	// inline asm
	call _rt_trace_64, (%r308, %f11, %f12, %f13, %f120, %f121, %f122, %r251, %f529, %f119, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f692, [%rd16];
	setp.neu.f32	%p75, %f692, 0f3F800000;
	@%p75 bra 	BB0_71;

	st.local.u32 	[%rd16], %r255;
	ld.global.u32 	%r312, [root];
	mov.f32 	%f700, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r312, %f77, %f78, %f79, %f162, %f163, %f164, %r251, %f529, %f700, %rd77, %r105);
	// inline asm
	ld.local.f32 	%f701, [%rd16];
	add.f32 	%f1094, %f1094, %f701;
	add.f32 	%f1093, %f1093, 0f3F800000;

BB0_71:
	mad.lo.s32 	%r416, %r452, 1664525, 1013904223;
	mad.lo.s32 	%r452, %r416, 1664525, 1013904223;
	ld.global.u32 	%r426, [samples];
	add.s32 	%r429, %r429, 1;
	setp.lt.s32	%p76, %r429, %r426;
	@%p76 bra 	BB0_9;

BB0_72:
	add.s32 	%r427, %r427, 1;
	setp.lt.s32	%p77, %r427, %r426;
	@%p77 bra 	BB0_7;
	bra.uni 	BB0_73;

BB0_146:
	mov.u64 	%rd208, image_HDR;
	cvta.global.u64 	%rd203, %rd208;
	mov.u32 	%r407, 8;
	mov.u64 	%rd207, 0;
	// inline asm
	call (%rd202), _rt_buffer_get_64, (%rd203, %r104, %r407, %rd22, %rd23, %rd207, %rd207);
	// inline asm
	mov.f32 	%f1081, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f1081;}

	// inline asm
	mov.u16 	%rs72, 0;
	st.v4.u16 	[%rd202], {%rs71, %rs71, %rs71, %rs72};

BB0_147:
	ld.global.u8 	%rs73, [imageEnabled];
	and.b16  	%rs74, %rs73, 64;
	setp.eq.s16	%p158, %rs74, 0;
	@%p158 bra 	BB0_149;

	cvt.u64.u32	%rd211, %r2;
	cvt.u64.u32	%rd212, %r3;
	mov.u64 	%rd215, image_Dir;
	cvta.global.u64 	%rd210, %rd215;
	mov.u64 	%rd214, 0;
	// inline asm
	call (%rd209), _rt_buffer_get_64, (%rd210, %r104, %r105, %rd211, %rd212, %rd214, %rd214);
	// inline asm
	mov.u16 	%rs75, 0;
	st.v4.u8 	[%rd209], {%rs75, %rs75, %rs75, %rs75};
	bra.uni 	BB0_149;

BB0_5:
	mov.f32 	%f1094, %f1093;

BB0_73:
	setp.eq.s32	%p78, %r426, 0;
	mov.f32 	%f1127, 0f3F800000;
	@%p78 bra 	BB0_75;

	mov.f32 	%f703, 0f3F800000;
	max.f32 	%f704, %f1093, %f703;
	div.rn.f32 	%f1127, %f1094, %f704;

BB0_75:
	ld.global.f32 	%f705, [directColor];
	mul.f32 	%f706, %f1127, %f705;
	ld.global.f32 	%f707, [directColor+4];
	mul.f32 	%f708, %f1127, %f707;
	ld.global.f32 	%f709, [directColor+8];
	mul.f32 	%f710, %f1127, %f709;
	cvt.sat.f32.f32	%f711, %f10;
	mul.f32 	%f712, %f706, %f711;
	mul.f32 	%f713, %f708, %f711;
	mul.f32 	%f714, %f710, %f711;
	ld.global.u32 	%r316, [ignoreNormal];
	setp.eq.s32	%p79, %r316, 0;
	selp.f32	%f204, %f712, %f706, %p79;
	selp.f32	%f205, %f713, %f708, %p79;
	selp.f32	%f206, %f714, %f710, %p79;
	ld.global.u32 	%r455, [imageEnabled];
	and.b32  	%r317, %r455, 8;
	setp.eq.s32	%p80, %r317, 0;
	@%p80 bra 	BB0_88;

	mov.u32 	%r410, 2;
	cvt.u64.u32	%rd95, %r2;
	cvt.u64.u32	%rd96, %r3;
	mov.u64 	%rd99, image_Mask;
	cvta.global.u64 	%rd94, %rd99;
	// inline asm
	call (%rd93), _rt_buffer_get_64, (%rd94, %r410, %r410, %rd95, %rd96, %rd29, %rd29);
	// inline asm
	mov.f32 	%f717, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f718, %f717;
	fma.rn.f32 	%f719, %f718, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f207, %f719;
	abs.f32 	%f208, %f1127;
	setp.lt.f32	%p81, %f208, 0f00800000;
	mul.f32 	%f720, %f208, 0f4B800000;
	selp.f32	%f721, 0fC3170000, 0fC2FE0000, %p81;
	selp.f32	%f722, %f720, %f208, %p81;
	mov.b32 	 %r320, %f722;
	and.b32  	%r321, %r320, 8388607;
	or.b32  	%r322, %r321, 1065353216;
	mov.b32 	 %f723, %r322;
	shr.u32 	%r323, %r320, 23;
	cvt.rn.f32.u32	%f724, %r323;
	add.f32 	%f725, %f721, %f724;
	setp.gt.f32	%p82, %f723, 0f3FB504F3;
	mul.f32 	%f726, %f723, 0f3F000000;
	add.f32 	%f727, %f725, 0f3F800000;
	selp.f32	%f728, %f726, %f723, %p82;
	selp.f32	%f729, %f727, %f725, %p82;
	add.f32 	%f730, %f728, 0fBF800000;
	add.f32 	%f716, %f728, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// inline asm
	add.f32 	%f731, %f730, %f730;
	mul.f32 	%f732, %f715, %f731;
	mul.f32 	%f733, %f732, %f732;
	mov.f32 	%f734, 0f3C4CAF63;
	mov.f32 	%f735, 0f3B18F0FE;
	fma.rn.f32 	%f736, %f735, %f733, %f734;
	mov.f32 	%f737, 0f3DAAAABD;
	fma.rn.f32 	%f738, %f736, %f733, %f737;
	mul.rn.f32 	%f739, %f738, %f733;
	mul.rn.f32 	%f740, %f739, %f732;
	sub.f32 	%f741, %f730, %f732;
	neg.f32 	%f742, %f732;
	add.f32 	%f743, %f741, %f741;
	fma.rn.f32 	%f744, %f742, %f730, %f743;
	mul.rn.f32 	%f745, %f715, %f744;
	add.f32 	%f746, %f740, %f732;
	sub.f32 	%f747, %f732, %f746;
	add.f32 	%f748, %f740, %f747;
	add.f32 	%f749, %f745, %f748;
	add.f32 	%f750, %f746, %f749;
	sub.f32 	%f751, %f746, %f750;
	add.f32 	%f752, %f749, %f751;
	mov.f32 	%f753, 0f3F317200;
	mul.rn.f32 	%f754, %f729, %f753;
	mov.f32 	%f755, 0f35BFBE8E;
	mul.rn.f32 	%f756, %f729, %f755;
	add.f32 	%f757, %f754, %f750;
	sub.f32 	%f758, %f754, %f757;
	add.f32 	%f759, %f750, %f758;
	add.f32 	%f760, %f752, %f759;
	add.f32 	%f761, %f756, %f760;
	add.f32 	%f762, %f757, %f761;
	sub.f32 	%f763, %f757, %f762;
	add.f32 	%f764, %f761, %f763;
	mov.f32 	%f765, 0f3EE8BA2E;
	mul.rn.f32 	%f766, %f765, %f762;
	neg.f32 	%f767, %f766;
	fma.rn.f32 	%f768, %f765, %f762, %f767;
	fma.rn.f32 	%f769, %f765, %f764, %f768;
	mov.f32 	%f770, 0f00000000;
	fma.rn.f32 	%f771, %f770, %f762, %f769;
	add.rn.f32 	%f772, %f766, %f771;
	neg.f32 	%f773, %f772;
	add.rn.f32 	%f774, %f766, %f773;
	add.rn.f32 	%f775, %f774, %f771;
	mov.b32 	 %r324, %f772;
	setp.eq.s32	%p83, %r324, 1118925336;
	add.s32 	%r325, %r324, -1;
	mov.b32 	 %f776, %r325;
	add.f32 	%f777, %f775, 0f37000000;
	selp.f32	%f778, %f776, %f772, %p83;
	selp.f32	%f209, %f777, %f775, %p83;
	mul.f32 	%f779, %f778, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f780, %f779;
	mov.f32 	%f781, 0fBF317200;
	fma.rn.f32 	%f782, %f780, %f781, %f778;
	mov.f32 	%f783, 0fB5BFBE8E;
	fma.rn.f32 	%f784, %f780, %f783, %f782;
	mul.f32 	%f785, %f784, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f786, %f785;
	add.f32 	%f787, %f780, 0f00000000;
	ex2.approx.f32 	%f788, %f787;
	mul.f32 	%f789, %f786, %f788;
	setp.lt.f32	%p84, %f778, 0fC2D20000;
	selp.f32	%f790, 0f00000000, %f789, %p84;
	setp.gt.f32	%p85, %f778, 0f42D20000;
	selp.f32	%f1128, 0f7F800000, %f790, %p85;
	setp.eq.f32	%p86, %f1128, 0f7F800000;
	@%p86 bra 	BB0_78;

	fma.rn.f32 	%f1128, %f1128, %f209, %f1128;

BB0_78:
	setp.lt.f32	%p87, %f1127, 0f00000000;
	setp.eq.f32	%p88, %f207, 0f3F800000;
	and.pred  	%p1, %p87, %p88;
	mov.b32 	 %r326, %f1128;
	xor.b32  	%r327, %r326, -2147483648;
	mov.b32 	 %f791, %r327;
	selp.f32	%f1130, %f791, %f1128, %p1;
	setp.eq.f32	%p89, %f1127, 0f00000000;
	@%p89 bra 	BB0_81;
	bra.uni 	BB0_79;

BB0_81:
	add.f32 	%f794, %f1127, %f1127;
	selp.f32	%f1130, %f794, 0f00000000, %p88;
	bra.uni 	BB0_82;

BB0_136:
	mov.u64 	%rd167, image_HDR;
	cvta.global.u64 	%rd162, %rd167;
	mov.u32 	%r390, 8;
	mov.u64 	%rd166, 0;
	// inline asm
	call (%rd161), _rt_buffer_get_64, (%rd162, %r104, %r390, %rd20, %rd21, %rd166, %rd166);
	// inline asm
	mov.f32 	%f1071, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1071;}

	// inline asm
	st.v4.u16 	[%rd161], {%rs52, %rs52, %rs52, %rs41};

BB0_137:
	ld.global.u8 	%rs53, [imageEnabled];
	and.b16  	%rs54, %rs53, 64;
	setp.eq.s16	%p153, %rs54, 0;
	@%p153 bra 	BB0_149;

	cvt.u64.u32	%rd170, %r2;
	cvt.u64.u32	%rd171, %r3;
	mov.u64 	%rd174, image_Dir;
	cvta.global.u64 	%rd169, %rd174;
	mov.u64 	%rd173, 0;
	// inline asm
	call (%rd168), _rt_buffer_get_64, (%rd169, %r104, %r105, %rd170, %rd171, %rd173, %rd173);
	// inline asm
	mov.u16 	%rs55, 255;
	mov.u16 	%rs56, 0;
	st.v4.u8 	[%rd168], {%rs56, %rs56, %rs56, %rs55};
	bra.uni 	BB0_149;

BB0_79:
	setp.geu.f32	%p90, %f1127, 0f00000000;
	@%p90 bra 	BB0_82;

	cvt.rzi.f32.f32	%f793, %f765;
	setp.neu.f32	%p91, %f793, 0f3EE8BA2E;
	selp.f32	%f1130, 0f7FFFFFFF, %f1130, %p91;

BB0_82:
	add.f32 	%f795, %f208, 0f3EE8BA2E;
	mov.b32 	 %r328, %f795;
	setp.lt.s32	%p93, %r328, 2139095040;
	@%p93 bra 	BB0_87;

	setp.gtu.f32	%p94, %f208, 0f7F800000;
	@%p94 bra 	BB0_86;
	bra.uni 	BB0_84;

BB0_86:
	add.f32 	%f1130, %f1127, 0f3EE8BA2E;
	bra.uni 	BB0_87;

BB0_84:
	setp.neu.f32	%p95, %f208, 0f7F800000;
	@%p95 bra 	BB0_87;

	selp.f32	%f1130, 0fFF800000, 0f7F800000, %p1;

BB0_87:
	mul.f32 	%f796, %f1130, 0f437F0000;
	setp.eq.f32	%p96, %f1127, 0f3F800000;
	selp.f32	%f797, 0f437F0000, %f796, %p96;
	cvt.rzi.u32.f32	%r329, %f797;
	cvt.u16.u32	%rs11, %r329;
	mov.u16 	%rs12, 255;
	st.v2.u8 	[%rd93], {%rs11, %rs12};
	ld.global.u32 	%r455, [imageEnabled];

BB0_88:
	and.b32  	%r330, %r455, 1;
	setp.eq.b32	%p97, %r330, 1;
	@!%p97 bra 	BB0_123;
	bra.uni 	BB0_89;

BB0_89:
	mov.f32 	%f800, 0f3E666666;
	cvt.rzi.f32.f32	%f801, %f800;
	fma.rn.f32 	%f802, %f801, 0fC0000000, 0f3EE66666;
	abs.f32 	%f220, %f802;
	abs.f32 	%f221, %f204;
	setp.lt.f32	%p98, %f221, 0f00800000;
	mul.f32 	%f803, %f221, 0f4B800000;
	selp.f32	%f804, 0fC3170000, 0fC2FE0000, %p98;
	selp.f32	%f805, %f803, %f221, %p98;
	mov.b32 	 %r331, %f805;
	and.b32  	%r332, %r331, 8388607;
	or.b32  	%r333, %r332, 1065353216;
	mov.b32 	 %f806, %r333;
	shr.u32 	%r334, %r331, 23;
	cvt.rn.f32.u32	%f807, %r334;
	add.f32 	%f808, %f804, %f807;
	setp.gt.f32	%p99, %f806, 0f3FB504F3;
	mul.f32 	%f809, %f806, 0f3F000000;
	add.f32 	%f810, %f808, 0f3F800000;
	selp.f32	%f811, %f809, %f806, %p99;
	selp.f32	%f812, %f810, %f808, %p99;
	add.f32 	%f813, %f811, 0fBF800000;
	add.f32 	%f799, %f811, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f798,%f799;
	// inline asm
	add.f32 	%f814, %f813, %f813;
	mul.f32 	%f815, %f798, %f814;
	mul.f32 	%f816, %f815, %f815;
	mov.f32 	%f817, 0f3C4CAF63;
	mov.f32 	%f818, 0f3B18F0FE;
	fma.rn.f32 	%f819, %f818, %f816, %f817;
	mov.f32 	%f820, 0f3DAAAABD;
	fma.rn.f32 	%f821, %f819, %f816, %f820;
	mul.rn.f32 	%f822, %f821, %f816;
	mul.rn.f32 	%f823, %f822, %f815;
	sub.f32 	%f824, %f813, %f815;
	neg.f32 	%f825, %f815;
	add.f32 	%f826, %f824, %f824;
	fma.rn.f32 	%f827, %f825, %f813, %f826;
	mul.rn.f32 	%f828, %f798, %f827;
	add.f32 	%f829, %f823, %f815;
	sub.f32 	%f830, %f815, %f829;
	add.f32 	%f831, %f823, %f830;
	add.f32 	%f832, %f828, %f831;
	add.f32 	%f833, %f829, %f832;
	sub.f32 	%f834, %f829, %f833;
	add.f32 	%f835, %f832, %f834;
	mov.f32 	%f836, 0f3F317200;
	mul.rn.f32 	%f837, %f812, %f836;
	mov.f32 	%f838, 0f35BFBE8E;
	mul.rn.f32 	%f839, %f812, %f838;
	add.f32 	%f840, %f837, %f833;
	sub.f32 	%f841, %f837, %f840;
	add.f32 	%f842, %f833, %f841;
	add.f32 	%f843, %f835, %f842;
	add.f32 	%f844, %f839, %f843;
	add.f32 	%f845, %f840, %f844;
	sub.f32 	%f846, %f840, %f845;
	add.f32 	%f847, %f844, %f846;
	mov.f32 	%f848, 0f3EE66666;
	mul.rn.f32 	%f849, %f848, %f845;
	neg.f32 	%f850, %f849;
	fma.rn.f32 	%f851, %f848, %f845, %f850;
	fma.rn.f32 	%f852, %f848, %f847, %f851;
	mov.f32 	%f853, 0f00000000;
	fma.rn.f32 	%f854, %f853, %f845, %f852;
	add.rn.f32 	%f855, %f849, %f854;
	neg.f32 	%f856, %f855;
	add.rn.f32 	%f857, %f849, %f856;
	add.rn.f32 	%f858, %f857, %f854;
	mov.b32 	 %r335, %f855;
	setp.eq.s32	%p100, %r335, 1118925336;
	add.s32 	%r336, %r335, -1;
	mov.b32 	 %f859, %r336;
	add.f32 	%f860, %f858, 0f37000000;
	selp.f32	%f861, %f859, %f855, %p100;
	selp.f32	%f222, %f860, %f858, %p100;
	mul.f32 	%f862, %f861, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f863, %f862;
	mov.f32 	%f864, 0fBF317200;
	fma.rn.f32 	%f865, %f863, %f864, %f861;
	mov.f32 	%f866, 0fB5BFBE8E;
	fma.rn.f32 	%f867, %f863, %f866, %f865;
	mul.f32 	%f868, %f867, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f869, %f868;
	add.f32 	%f870, %f863, 0f00000000;
	ex2.approx.f32 	%f871, %f870;
	mul.f32 	%f872, %f869, %f871;
	setp.lt.f32	%p101, %f861, 0fC2D20000;
	selp.f32	%f873, 0f00000000, %f872, %p101;
	setp.gt.f32	%p102, %f861, 0f42D20000;
	selp.f32	%f1131, 0f7F800000, %f873, %p102;
	setp.eq.f32	%p103, %f1131, 0f7F800000;
	@%p103 bra 	BB0_91;

	fma.rn.f32 	%f1131, %f1131, %f222, %f1131;

BB0_91:
	setp.lt.f32	%p104, %f204, 0f00000000;
	setp.eq.f32	%p105, %f220, 0f3F800000;
	and.pred  	%p2, %p104, %p105;
	mov.b32 	 %r337, %f1131;
	xor.b32  	%r338, %r337, -2147483648;
	mov.b32 	 %f874, %r338;
	selp.f32	%f1133, %f874, %f1131, %p2;
	setp.eq.f32	%p106, %f204, 0f00000000;
	@%p106 bra 	BB0_94;
	bra.uni 	BB0_92;

BB0_94:
	add.f32 	%f877, %f204, %f204;
	selp.f32	%f1133, %f877, 0f00000000, %p105;
	bra.uni 	BB0_95;

BB0_92:
	setp.geu.f32	%p107, %f204, 0f00000000;
	@%p107 bra 	BB0_95;

	cvt.rzi.f32.f32	%f876, %f848;
	setp.neu.f32	%p108, %f876, 0f3EE66666;
	selp.f32	%f1133, 0f7FFFFFFF, %f1133, %p108;

BB0_95:
	add.f32 	%f878, %f221, 0f3EE66666;
	mov.b32 	 %r339, %f878;
	setp.lt.s32	%p110, %r339, 2139095040;
	@%p110 bra 	BB0_100;

	setp.gtu.f32	%p111, %f221, 0f7F800000;
	@%p111 bra 	BB0_99;
	bra.uni 	BB0_97;

BB0_99:
	add.f32 	%f1133, %f204, 0f3EE66666;
	bra.uni 	BB0_100;

BB0_97:
	setp.neu.f32	%p112, %f221, 0f7F800000;
	@%p112 bra 	BB0_100;

	selp.f32	%f1133, 0fFF800000, 0f7F800000, %p2;

BB0_100:
	setp.eq.f32	%p113, %f204, 0f3F800000;
	selp.f32	%f233, 0f3F800000, %f1133, %p113;
	abs.f32 	%f234, %f205;
	setp.lt.f32	%p114, %f234, 0f00800000;
	mul.f32 	%f881, %f234, 0f4B800000;
	selp.f32	%f882, 0fC3170000, 0fC2FE0000, %p114;
	selp.f32	%f883, %f881, %f234, %p114;
	mov.b32 	 %r340, %f883;
	and.b32  	%r341, %r340, 8388607;
	or.b32  	%r342, %r341, 1065353216;
	mov.b32 	 %f884, %r342;
	shr.u32 	%r343, %r340, 23;
	cvt.rn.f32.u32	%f885, %r343;
	add.f32 	%f886, %f882, %f885;
	setp.gt.f32	%p115, %f884, 0f3FB504F3;
	mul.f32 	%f887, %f884, 0f3F000000;
	add.f32 	%f888, %f886, 0f3F800000;
	selp.f32	%f889, %f887, %f884, %p115;
	selp.f32	%f890, %f888, %f886, %p115;
	add.f32 	%f891, %f889, 0fBF800000;
	add.f32 	%f880, %f889, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f879,%f880;
	// inline asm
	add.f32 	%f892, %f891, %f891;
	mul.f32 	%f893, %f879, %f892;
	mul.f32 	%f894, %f893, %f893;
	fma.rn.f32 	%f897, %f818, %f894, %f817;
	fma.rn.f32 	%f899, %f897, %f894, %f820;
	mul.rn.f32 	%f900, %f899, %f894;
	mul.rn.f32 	%f901, %f900, %f893;
	sub.f32 	%f902, %f891, %f893;
	neg.f32 	%f903, %f893;
	add.f32 	%f904, %f902, %f902;
	fma.rn.f32 	%f905, %f903, %f891, %f904;
	mul.rn.f32 	%f906, %f879, %f905;
	add.f32 	%f907, %f901, %f893;
	sub.f32 	%f908, %f893, %f907;
	add.f32 	%f909, %f901, %f908;
	add.f32 	%f910, %f906, %f909;
	add.f32 	%f911, %f907, %f910;
	sub.f32 	%f912, %f907, %f911;
	add.f32 	%f913, %f910, %f912;
	mul.rn.f32 	%f915, %f890, %f836;
	mul.rn.f32 	%f917, %f890, %f838;
	add.f32 	%f918, %f915, %f911;
	sub.f32 	%f919, %f915, %f918;
	add.f32 	%f920, %f911, %f919;
	add.f32 	%f921, %f913, %f920;
	add.f32 	%f922, %f917, %f921;
	add.f32 	%f923, %f918, %f922;
	sub.f32 	%f924, %f918, %f923;
	add.f32 	%f925, %f922, %f924;
	mul.rn.f32 	%f927, %f848, %f923;
	neg.f32 	%f928, %f927;
	fma.rn.f32 	%f929, %f848, %f923, %f928;
	fma.rn.f32 	%f930, %f848, %f925, %f929;
	fma.rn.f32 	%f932, %f853, %f923, %f930;
	add.rn.f32 	%f933, %f927, %f932;
	neg.f32 	%f934, %f933;
	add.rn.f32 	%f935, %f927, %f934;
	add.rn.f32 	%f936, %f935, %f932;
	mov.b32 	 %r344, %f933;
	setp.eq.s32	%p116, %r344, 1118925336;
	add.s32 	%r345, %r344, -1;
	mov.b32 	 %f937, %r345;
	add.f32 	%f938, %f936, 0f37000000;
	selp.f32	%f939, %f937, %f933, %p116;
	selp.f32	%f235, %f938, %f936, %p116;
	mul.f32 	%f940, %f939, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f941, %f940;
	fma.rn.f32 	%f943, %f941, %f864, %f939;
	fma.rn.f32 	%f945, %f941, %f866, %f943;
	mul.f32 	%f946, %f945, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f947, %f946;
	add.f32 	%f948, %f941, 0f00000000;
	ex2.approx.f32 	%f949, %f948;
	mul.f32 	%f950, %f947, %f949;
	setp.lt.f32	%p117, %f939, 0fC2D20000;
	selp.f32	%f951, 0f00000000, %f950, %p117;
	setp.gt.f32	%p118, %f939, 0f42D20000;
	selp.f32	%f1134, 0f7F800000, %f951, %p118;
	setp.eq.f32	%p119, %f1134, 0f7F800000;
	@%p119 bra 	BB0_102;

	fma.rn.f32 	%f1134, %f1134, %f235, %f1134;

BB0_102:
	setp.lt.f32	%p120, %f205, 0f00000000;
	and.pred  	%p3, %p120, %p105;
	mov.b32 	 %r346, %f1134;
	xor.b32  	%r347, %r346, -2147483648;
	mov.b32 	 %f952, %r347;
	selp.f32	%f1136, %f952, %f1134, %p3;
	setp.eq.f32	%p122, %f205, 0f00000000;
	@%p122 bra 	BB0_105;
	bra.uni 	BB0_103;

BB0_105:
	add.f32 	%f955, %f205, %f205;
	selp.f32	%f1136, %f955, 0f00000000, %p105;
	bra.uni 	BB0_106;

BB0_103:
	setp.geu.f32	%p123, %f205, 0f00000000;
	@%p123 bra 	BB0_106;

	cvt.rzi.f32.f32	%f954, %f848;
	setp.neu.f32	%p124, %f954, 0f3EE66666;
	selp.f32	%f1136, 0f7FFFFFFF, %f1136, %p124;

BB0_106:
	add.f32 	%f956, %f234, 0f3EE66666;
	mov.b32 	 %r348, %f956;
	setp.lt.s32	%p126, %r348, 2139095040;
	@%p126 bra 	BB0_111;

	setp.gtu.f32	%p127, %f234, 0f7F800000;
	@%p127 bra 	BB0_110;
	bra.uni 	BB0_108;

BB0_110:
	add.f32 	%f1136, %f205, 0f3EE66666;
	bra.uni 	BB0_111;

BB0_108:
	setp.neu.f32	%p128, %f234, 0f7F800000;
	@%p128 bra 	BB0_111;

	selp.f32	%f1136, 0fFF800000, 0f7F800000, %p3;

BB0_111:
	setp.eq.f32	%p129, %f205, 0f3F800000;
	selp.f32	%f246, 0f3F800000, %f1136, %p129;
	abs.f32 	%f247, %f206;
	setp.lt.f32	%p130, %f247, 0f00800000;
	mul.f32 	%f959, %f247, 0f4B800000;
	selp.f32	%f960, 0fC3170000, 0fC2FE0000, %p130;
	selp.f32	%f961, %f959, %f247, %p130;
	mov.b32 	 %r349, %f961;
	and.b32  	%r350, %r349, 8388607;
	or.b32  	%r351, %r350, 1065353216;
	mov.b32 	 %f962, %r351;
	shr.u32 	%r352, %r349, 23;
	cvt.rn.f32.u32	%f963, %r352;
	add.f32 	%f964, %f960, %f963;
	setp.gt.f32	%p131, %f962, 0f3FB504F3;
	mul.f32 	%f965, %f962, 0f3F000000;
	add.f32 	%f966, %f964, 0f3F800000;
	selp.f32	%f967, %f965, %f962, %p131;
	selp.f32	%f968, %f966, %f964, %p131;
	add.f32 	%f969, %f967, 0fBF800000;
	add.f32 	%f958, %f967, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// inline asm
	add.f32 	%f970, %f969, %f969;
	mul.f32 	%f971, %f957, %f970;
	mul.f32 	%f972, %f971, %f971;
	fma.rn.f32 	%f975, %f818, %f972, %f817;
	fma.rn.f32 	%f977, %f975, %f972, %f820;
	mul.rn.f32 	%f978, %f977, %f972;
	mul.rn.f32 	%f979, %f978, %f971;
	sub.f32 	%f980, %f969, %f971;
	neg.f32 	%f981, %f971;
	add.f32 	%f982, %f980, %f980;
	fma.rn.f32 	%f983, %f981, %f969, %f982;
	mul.rn.f32 	%f984, %f957, %f983;
	add.f32 	%f985, %f979, %f971;
	sub.f32 	%f986, %f971, %f985;
	add.f32 	%f987, %f979, %f986;
	add.f32 	%f988, %f984, %f987;
	add.f32 	%f989, %f985, %f988;
	sub.f32 	%f990, %f985, %f989;
	add.f32 	%f991, %f988, %f990;
	mul.rn.f32 	%f993, %f968, %f836;
	mul.rn.f32 	%f995, %f968, %f838;
	add.f32 	%f996, %f993, %f989;
	sub.f32 	%f997, %f993, %f996;
	add.f32 	%f998, %f989, %f997;
	add.f32 	%f999, %f991, %f998;
	add.f32 	%f1000, %f995, %f999;
	add.f32 	%f1001, %f996, %f1000;
	sub.f32 	%f1002, %f996, %f1001;
	add.f32 	%f1003, %f1000, %f1002;
	mul.rn.f32 	%f1005, %f848, %f1001;
	neg.f32 	%f1006, %f1005;
	fma.rn.f32 	%f1007, %f848, %f1001, %f1006;
	fma.rn.f32 	%f1008, %f848, %f1003, %f1007;
	fma.rn.f32 	%f1010, %f853, %f1001, %f1008;
	add.rn.f32 	%f1011, %f1005, %f1010;
	neg.f32 	%f1012, %f1011;
	add.rn.f32 	%f1013, %f1005, %f1012;
	add.rn.f32 	%f1014, %f1013, %f1010;
	mov.b32 	 %r353, %f1011;
	setp.eq.s32	%p132, %r353, 1118925336;
	add.s32 	%r354, %r353, -1;
	mov.b32 	 %f1015, %r354;
	add.f32 	%f1016, %f1014, 0f37000000;
	selp.f32	%f1017, %f1015, %f1011, %p132;
	selp.f32	%f248, %f1016, %f1014, %p132;
	mul.f32 	%f1018, %f1017, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1019, %f1018;
	fma.rn.f32 	%f1021, %f1019, %f864, %f1017;
	fma.rn.f32 	%f1023, %f1019, %f866, %f1021;
	mul.f32 	%f1024, %f1023, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1025, %f1024;
	add.f32 	%f1026, %f1019, 0f00000000;
	ex2.approx.f32 	%f1027, %f1026;
	mul.f32 	%f1028, %f1025, %f1027;
	setp.lt.f32	%p133, %f1017, 0fC2D20000;
	selp.f32	%f1029, 0f00000000, %f1028, %p133;
	setp.gt.f32	%p134, %f1017, 0f42D20000;
	selp.f32	%f1137, 0f7F800000, %f1029, %p134;
	setp.eq.f32	%p135, %f1137, 0f7F800000;
	@%p135 bra 	BB0_113;

	fma.rn.f32 	%f1137, %f1137, %f248, %f1137;

BB0_113:
	setp.lt.f32	%p136, %f206, 0f00000000;
	and.pred  	%p4, %p136, %p105;
	mov.b32 	 %r355, %f1137;
	xor.b32  	%r356, %r355, -2147483648;
	mov.b32 	 %f1030, %r356;
	selp.f32	%f1139, %f1030, %f1137, %p4;
	setp.eq.f32	%p138, %f206, 0f00000000;
	@%p138 bra 	BB0_116;
	bra.uni 	BB0_114;

BB0_116:
	add.f32 	%f1033, %f206, %f206;
	selp.f32	%f1139, %f1033, 0f00000000, %p105;
	bra.uni 	BB0_117;

BB0_114:
	setp.geu.f32	%p139, %f206, 0f00000000;
	@%p139 bra 	BB0_117;

	cvt.rzi.f32.f32	%f1032, %f848;
	setp.neu.f32	%p140, %f1032, 0f3EE66666;
	selp.f32	%f1139, 0f7FFFFFFF, %f1139, %p140;

BB0_117:
	add.f32 	%f1034, %f247, 0f3EE66666;
	mov.b32 	 %r357, %f1034;
	setp.lt.s32	%p142, %r357, 2139095040;
	@%p142 bra 	BB0_122;

	setp.gtu.f32	%p143, %f247, 0f7F800000;
	@%p143 bra 	BB0_121;
	bra.uni 	BB0_119;

BB0_121:
	add.f32 	%f1139, %f206, 0f3EE66666;
	bra.uni 	BB0_122;

BB0_119:
	setp.neu.f32	%p144, %f247, 0f7F800000;
	@%p144 bra 	BB0_122;

	selp.f32	%f1139, 0fFF800000, 0f7F800000, %p4;

BB0_122:
	mov.u32 	%r411, 2;
	setp.eq.f32	%p145, %f206, 0f3F800000;
	selp.f32	%f1035, 0f3F800000, %f1139, %p145;
	cvt.u64.u32	%rd103, %r3;
	cvt.u64.u32	%rd102, %r2;
	mov.u64 	%rd106, image;
	cvta.global.u64 	%rd101, %rd106;
	// inline asm
	call (%rd100), _rt_buffer_get_64, (%rd101, %r411, %r105, %rd102, %rd103, %rd29, %rd29);
	// inline asm
	cvt.sat.f32.f32	%f1036, %f1035;
	mul.f32 	%f1037, %f1036, 0f437FFD71;
	cvt.rzi.u32.f32	%r360, %f1037;
	cvt.sat.f32.f32	%f1038, %f246;
	mul.f32 	%f1039, %f1038, 0f437FFD71;
	cvt.rzi.u32.f32	%r361, %f1039;
	cvt.sat.f32.f32	%f1040, %f233;
	mul.f32 	%f1041, %f1040, 0f437FFD71;
	cvt.rzi.u32.f32	%r362, %f1041;
	cvt.u16.u32	%rs13, %r360;
	cvt.u16.u32	%rs14, %r362;
	cvt.u16.u32	%rs15, %r361;
	mov.u16 	%rs16, 255;
	st.v4.u8 	[%rd100], {%rs13, %rs15, %rs14, %rs16};
	ld.global.u32 	%r455, [imageEnabled];

BB0_123:
	and.b32  	%r363, %r455, 4;
	setp.eq.s32	%p146, %r363, 0;
	@%p146 bra 	BB0_127;

	ld.global.u32 	%r364, [additive];
	setp.eq.s32	%p147, %r364, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f1042, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs17, %f1042;}

	// inline asm
	@%p147 bra 	BB0_126;

	mov.u32 	%r412, 2;
	mov.u64 	%rd119, image_HDR;
	cvta.global.u64 	%rd108, %rd119;
	mov.u32 	%r368, 8;
	// inline asm
	call (%rd107), _rt_buffer_get_64, (%rd108, %r412, %r368, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	ld.v4.u16 	{%rs24, %rs25, %rs26, %rs27}, [%rd107];
	// inline asm
	{  cvt.f32.f16 %f1043, %rs24;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1044, %rs25;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1045, %rs26;}

	// inline asm
	// inline asm
	call (%rd113), _rt_buffer_get_64, (%rd108, %r412, %r368, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	add.f32 	%f1046, %f204, %f1043;
	add.f32 	%f1047, %f205, %f1044;
	add.f32 	%f1048, %f206, %f1045;
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f1048;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs22, %f1047;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs21, %f1046;}

	// inline asm
	st.v4.u16 	[%rd113], {%rs21, %rs22, %rs23, %rs17};
	bra.uni 	BB0_127;

BB0_126:
	mov.u32 	%r413, 2;
	mov.u64 	%rd126, image_HDR;
	cvta.global.u64 	%rd121, %rd126;
	mov.u32 	%r370, 8;
	// inline asm
	call (%rd120), _rt_buffer_get_64, (%rd121, %r413, %r370, %rd18, %rd19, %rd29, %rd29);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f206;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs29, %f205;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs28, %f204;}

	// inline asm
	st.v4.u16 	[%rd120], {%rs28, %rs29, %rs30, %rs17};

BB0_127:
	ld.global.u8 	%rs31, [imageEnabled];
	and.b16  	%rs32, %rs31, 64;
	setp.eq.s16	%p148, %rs32, 0;
	@%p148 bra 	BB0_149;

	mov.u32 	%r414, 2;
	ld.global.f32 	%f1052, [directDir];
	ld.global.f32 	%f1053, [directDir+4];
	ld.global.f32 	%f1054, [directDir+8];
	cvt.u64.u32	%rd130, %r3;
	cvt.u64.u32	%rd129, %r2;
	mov.u64 	%rd133, image_Dir;
	cvta.global.u64 	%rd128, %rd133;
	// inline asm
	call (%rd127), _rt_buffer_get_64, (%rd128, %r414, %r105, %rd129, %rd130, %rd29, %rd29);
	// inline asm
	fma.rn.f32 	%f1055, %f1052, 0fBF000000, 0f3F000000;
	mul.f32 	%f1056, %f1055, 0f437F0000;
	cvt.rzi.u32.f32	%r373, %f1056;
	fma.rn.f32 	%f1057, %f1053, 0fBF000000, 0f3F000000;
	mul.f32 	%f1058, %f1057, 0f437F0000;
	cvt.rzi.u32.f32	%r374, %f1058;
	fma.rn.f32 	%f1059, %f1054, 0fBF000000, 0f3F000000;
	mul.f32 	%f1060, %f1059, 0f437F0000;
	cvt.rzi.u32.f32	%r375, %f1060;
	cvt.u16.u32	%rs33, %r375;
	cvt.u16.u32	%rs34, %r374;
	cvt.u16.u32	%rs35, %r373;
	mov.u16 	%rs36, 255;
	st.v4.u8 	[%rd127], {%rs35, %rs34, %rs33, %rs36};

BB0_149:
	ret;
}


