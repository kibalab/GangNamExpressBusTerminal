//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 image_RNM3[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<155>;
	.reg .b16 	%rs<152>;
	.reg .f32 	%f<1193>;
	.reg .b32 	%r<477>;
	.reg .b64 	%rd<327>;


	mov.u64 	%rd326, __local_depot0;
	cvta.local.u64 	%SP, %rd326;
	ld.global.v2.u32 	{%r101, %r102}, [pixelID];
	cvt.u64.u32	%rd24, %r101;
	cvt.u64.u32	%rd25, %r102;
	mov.u64 	%rd28, uvnormal;
	cvta.global.u64 	%rd23, %rd28;
	mov.u32 	%r99, 2;
	mov.u32 	%r100, 4;
	mov.u64 	%rd27, 0;
	// inline asm
	call (%rd22), _rt_buffer_get_64, (%rd23, %r99, %r100, %rd24, %rd25, %rd27, %rd27);
	// inline asm
	ld.u32 	%r1, [%rd22];
	shr.u32 	%r105, %r1, 16;
	cvt.u16.u32	%rs1, %r105;
	and.b16  	%rs7, %rs1, 255;
	cvt.u16.u32	%rs8, %r1;
	or.b16  	%rs9, %rs8, %rs7;
	setp.eq.s16	%p5, %rs9, 0;
	mov.f32 	%f1141, 0f00000000;
	mov.f32 	%f1142, %f1141;
	mov.f32 	%f1143, %f1141;
	@%p5 bra 	BB0_2;

	ld.u8 	%rs10, [%rd22+1];
	and.b16  	%rs12, %rs8, 255;
	cvt.rn.f32.u16	%f268, %rs12;
	div.rn.f32 	%f269, %f268, 0f437F0000;
	fma.rn.f32 	%f270, %f269, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f271, %rs10;
	div.rn.f32 	%f272, %f271, 0f437F0000;
	fma.rn.f32 	%f273, %f272, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f274, %rs7;
	div.rn.f32 	%f275, %f274, 0f437F0000;
	fma.rn.f32 	%f276, %f275, 0f40000000, 0fBF800000;
	mul.f32 	%f277, %f273, %f273;
	fma.rn.f32 	%f278, %f270, %f270, %f277;
	fma.rn.f32 	%f279, %f276, %f276, %f278;
	sqrt.rn.f32 	%f280, %f279;
	rcp.rn.f32 	%f281, %f280;
	mul.f32 	%f1141, %f270, %f281;
	mul.f32 	%f1142, %f273, %f281;
	mul.f32 	%f1143, %f276, %f281;

BB0_2:
	ld.global.v2.u32 	{%r106, %r107}, [pixelID];
	ld.global.v2.u32 	{%r109, %r110}, [tileInfo];
	add.s32 	%r2, %r106, %r109;
	add.s32 	%r3, %r107, %r110;
	setp.eq.f32	%p6, %f1142, 0f00000000;
	setp.eq.f32	%p7, %f1141, 0f00000000;
	and.pred  	%p8, %p7, %p6;
	setp.eq.f32	%p9, %f1143, 0f00000000;
	and.pred  	%p10, %p8, %p9;
	@%p10 bra 	BB0_138;
	bra.uni 	BB0_3;

BB0_138:
	ld.global.u32 	%r476, [imageEnabled];
	and.b32  	%r391, %r476, 1;
	setp.eq.b32	%p146, %r391, 1;
	@!%p146 bra 	BB0_140;
	bra.uni 	BB0_139;

BB0_139:
	cvt.u64.u32	%rd207, %r2;
	cvt.u64.u32	%rd208, %r3;
	mov.u64 	%rd211, image;
	cvta.global.u64 	%rd206, %rd211;
	mov.u64 	%rd210, 0;
	// inline asm
	call (%rd205), _rt_buffer_get_64, (%rd206, %r99, %r100, %rd207, %rd208, %rd210, %rd210);
	// inline asm
	mov.u16 	%rs84, 0;
	st.v4.u8 	[%rd205], {%rs84, %rs84, %rs84, %rs84};
	ld.global.u32 	%r476, [imageEnabled];

BB0_140:
	and.b32  	%r394, %r476, 8;
	setp.eq.s32	%p147, %r394, 0;
	@%p147 bra 	BB0_142;

	cvt.u64.u32	%rd215, %r3;
	cvt.u64.u32	%rd214, %r2;
	mov.u64 	%rd218, image_Mask;
	cvta.global.u64 	%rd213, %rd218;
	mov.u64 	%rd217, 0;
	// inline asm
	call (%rd212), _rt_buffer_get_64, (%rd213, %r99, %r99, %rd214, %rd215, %rd217, %rd217);
	// inline asm
	mov.f32 	%f1099, 0f00000000;
	cvt.rzi.u32.f32	%r397, %f1099;
	cvt.u16.u32	%rs85, %r397;
	mov.u16 	%rs86, 0;
	st.v2.u8 	[%rd212], {%rs85, %rs86};
	ld.global.u32 	%r476, [imageEnabled];

BB0_142:
	cvt.u64.u32	%rd20, %r2;
	cvt.u64.u32	%rd21, %r3;
	and.b32  	%r398, %r476, 4;
	setp.eq.s32	%p148, %r398, 0;
	@%p148 bra 	BB0_146;

	ld.global.u32 	%r399, [additive];
	setp.eq.s32	%p149, %r399, 0;
	@%p149 bra 	BB0_145;

	mov.u64 	%rd231, image_HDR;
	cvta.global.u64 	%rd220, %rd231;
	mov.u32 	%r403, 8;
	mov.u64 	%rd230, 0;
	// inline asm
	call (%rd219), _rt_buffer_get_64, (%rd220, %r99, %r403, %rd20, %rd21, %rd230, %rd230);
	// inline asm
	ld.v4.u16 	{%rs93, %rs94, %rs95, %rs96}, [%rd219];
	// inline asm
	{  cvt.f32.f16 %f1100, %rs93;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1101, %rs94;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1102, %rs95;}

	// inline asm
	// inline asm
	call (%rd225), _rt_buffer_get_64, (%rd220, %r99, %r403, %rd20, %rd21, %rd230, %rd230);
	// inline asm
	add.f32 	%f1103, %f1100, 0f00000000;
	add.f32 	%f1104, %f1101, 0f00000000;
	add.f32 	%f1105, %f1102, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f1105;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs91, %f1104;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs90, %f1103;}

	// inline asm
	mov.u16 	%rs97, 0;
	st.v4.u16 	[%rd225], {%rs90, %rs91, %rs92, %rs97};
	bra.uni 	BB0_146;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f284, %f1141, %f7;
	mul.f32 	%f285, %f1142, %f8;
	neg.f32 	%f286, %f285;
	sub.f32 	%f287, %f286, %f284;
	mul.f32 	%f288, %f1143, %f9;
	sub.f32 	%f10, %f287, %f288;
	ld.global.v2.u32 	{%r122, %r123}, [pixelID];
	cvt.u64.u32	%rd31, %r122;
	cvt.u64.u32	%rd32, %r123;
	mov.u64 	%rd53, uvpos;
	cvta.global.u64 	%rd30, %rd53;
	mov.u32 	%r119, 12;
	// inline asm
	call (%rd29), _rt_buffer_get_64, (%rd30, %r99, %r119, %rd31, %rd32, %rd27, %rd27);
	// inline asm
	ld.f32 	%f289, [%rd29+8];
	ld.f32 	%f290, [%rd29+4];
	ld.f32 	%f291, [%rd29];
	mul.f32 	%f292, %f291, 0f3456BF95;
	mul.f32 	%f293, %f290, 0f3456BF95;
	mul.f32 	%f294, %f289, 0f3456BF95;
	abs.f32 	%f295, %f1141;
	div.rn.f32 	%f296, %f292, %f295;
	abs.f32 	%f297, %f1142;
	div.rn.f32 	%f298, %f293, %f297;
	abs.f32 	%f299, %f1143;
	div.rn.f32 	%f300, %f294, %f299;
	abs.f32 	%f301, %f296;
	abs.f32 	%f302, %f298;
	abs.f32 	%f303, %f300;
	mov.f32 	%f304, 0f38D1B717;
	max.f32 	%f305, %f301, %f304;
	max.f32 	%f306, %f302, %f304;
	max.f32 	%f307, %f303, %f304;
	fma.rn.f32 	%f11, %f1141, %f305, %f291;
	fma.rn.f32 	%f12, %f1142, %f306, %f290;
	fma.rn.f32 	%f13, %f1143, %f307, %f289;
	setp.gt.f32	%p11, %f295, %f299;
	neg.f32 	%f308, %f1142;
	selp.f32	%f309, %f308, 0f00000000, %p11;
	neg.f32 	%f310, %f1143;
	selp.f32	%f311, %f1141, %f310, %p11;
	selp.f32	%f312, 0f00000000, %f1142, %p11;
	mul.f32 	%f313, %f311, %f311;
	fma.rn.f32 	%f314, %f309, %f309, %f313;
	fma.rn.f32 	%f315, %f312, %f312, %f314;
	sqrt.rn.f32 	%f316, %f315;
	rcp.rn.f32 	%f317, %f316;
	mul.f32 	%f14, %f309, %f317;
	mul.f32 	%f15, %f311, %f317;
	mul.f32 	%f16, %f312, %f317;
	mul.f32 	%f318, %f1143, %f15;
	mul.f32 	%f319, %f1142, %f16;
	sub.f32 	%f17, %f318, %f319;
	mul.f32 	%f320, %f1141, %f16;
	mul.f32 	%f321, %f1143, %f14;
	sub.f32 	%f18, %f320, %f321;
	mul.f32 	%f322, %f1142, %f14;
	mul.f32 	%f323, %f1141, %f15;
	sub.f32 	%f19, %f322, %f323;
	ld.global.v2.u32 	{%r126, %r127}, [pixelID];
	cvt.u64.u32	%rd38, %r127;
	add.s32 	%r130, %r126, 1;
	ld.global.u32 	%r131, [resolution];
	add.s32 	%r132, %r131, -1;
	min.u32 	%r133, %r130, %r132;
	cvt.u64.u32	%rd37, %r133;
	// inline asm
	call (%rd35), _rt_buffer_get_64, (%rd30, %r99, %r119, %rd37, %rd38, %rd27, %rd27);
	// inline asm
	ld.f32 	%f324, [%rd35+8];
	ld.f32 	%f325, [%rd35+4];
	ld.f32 	%f326, [%rd35];
	setp.eq.f32	%p12, %f326, 0f00000000;
	setp.eq.f32	%p13, %f325, 0f00000000;
	and.pred  	%p14, %p12, %p13;
	setp.eq.f32	%p15, %f324, 0f00000000;
	and.pred  	%p16, %p14, %p15;
	selp.f32	%f327, %f291, %f326, %p16;
	selp.f32	%f328, %f290, %f325, %p16;
	selp.f32	%f329, %f289, %f324, %p16;
	ld.global.v2.u32 	{%r134, %r135}, [pixelID];
	add.s32 	%r138, %r135, 1;
	ld.global.u32 	%r139, [resolution+4];
	add.s32 	%r140, %r139, -1;
	min.u32 	%r141, %r138, %r140;
	cvt.u64.u32	%rd43, %r134;
	cvt.u64.u32	%rd44, %r141;
	// inline asm
	call (%rd41), _rt_buffer_get_64, (%rd30, %r99, %r119, %rd43, %rd44, %rd27, %rd27);
	// inline asm
	ld.f32 	%f330, [%rd41+8];
	ld.f32 	%f331, [%rd41+4];
	ld.f32 	%f332, [%rd41];
	setp.eq.f32	%p17, %f332, 0f00000000;
	setp.eq.f32	%p18, %f331, 0f00000000;
	and.pred  	%p19, %p17, %p18;
	setp.eq.f32	%p20, %f330, 0f00000000;
	and.pred  	%p21, %p19, %p20;
	selp.f32	%f333, %f291, %f332, %p21;
	selp.f32	%f334, %f290, %f331, %p21;
	selp.f32	%f335, %f289, %f330, %p21;
	sub.f32 	%f336, %f327, %f291;
	sub.f32 	%f337, %f328, %f290;
	sub.f32 	%f338, %f329, %f289;
	sub.f32 	%f339, %f333, %f291;
	sub.f32 	%f340, %f334, %f290;
	sub.f32 	%f341, %f335, %f289;
	abs.f32 	%f342, %f336;
	abs.f32 	%f343, %f339;
	max.f32 	%f344, %f342, %f343;
	abs.f32 	%f345, %f337;
	abs.f32 	%f346, %f340;
	max.f32 	%f347, %f345, %f346;
	abs.f32 	%f348, %f338;
	abs.f32 	%f349, %f341;
	max.f32 	%f350, %f348, %f349;
	max.f32 	%f351, %f344, %f347;
	max.f32 	%f352, %f351, %f350;
	setp.neu.f32	%p22, %f336, 0f00000000;
	setp.neu.f32	%p23, %f337, 0f00000000;
	or.pred  	%p24, %p22, %p23;
	setp.neu.f32	%p25, %f338, 0f00000000;
	setp.neu.f32	%p26, %f339, 0f00000000;
	setp.neu.f32	%p27, %f340, 0f00000000;
	or.pred  	%p28, %p26, %p27;
	setp.neu.f32	%p29, %f341, 0f00000000;
	or.pred  	%p30, %p28, %p29;
	or.pred  	%p31, %p24, %p25;
	and.pred  	%p32, %p31, %p30;
	selp.f32	%f20, %f352, 0f00000000, %p32;
	abs.f32 	%f353, %f7;
	abs.f32 	%f354, %f9;
	setp.gt.f32	%p33, %f353, %f354;
	neg.f32 	%f355, %f8;
	neg.f32 	%f356, %f9;
	selp.f32	%f357, %f355, 0f00000000, %p33;
	selp.f32	%f358, %f7, %f356, %p33;
	selp.f32	%f359, 0f00000000, %f8, %p33;
	mul.f32 	%f360, %f358, %f358;
	fma.rn.f32 	%f361, %f357, %f357, %f360;
	fma.rn.f32 	%f362, %f359, %f359, %f361;
	sqrt.rn.f32 	%f363, %f362;
	rcp.rn.f32 	%f364, %f363;
	mul.f32 	%f21, %f357, %f364;
	mul.f32 	%f22, %f358, %f364;
	mul.f32 	%f23, %f359, %f364;
	ld.global.v2.u32 	{%r142, %r143}, [pixelID];
	cvt.u64.u32	%rd49, %r142;
	cvt.u64.u32	%rd50, %r143;
	mov.u64 	%rd54, rnd_seeds;
	cvta.global.u64 	%rd48, %rd54;
	// inline asm
	call (%rd47), _rt_buffer_get_64, (%rd48, %r99, %r100, %rd49, %rd50, %rd27, %rd27);
	// inline asm
	ld.global.u32 	%r445, [samples];
	mov.f32 	%f1146, 0f00000000;
	setp.lt.s32	%p34, %r445, 1;
	@%p34 bra 	BB0_4;

	cvt.rn.f32.s32	%f367, %r445;
	rcp.rn.f32 	%f24, %f367;
	ld.u32 	%r471, [%rd47];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f368, %f17, 0f3E24A490;
	mul.f32 	%f369, %f18, 0f3E24A490;
	mul.f32 	%f370, %f19, 0f3E24A490;
	fma.rn.f32 	%f371, %f20, %f368, %f11;
	fma.rn.f32 	%f372, %f20, %f369, %f12;
	fma.rn.f32 	%f373, %f20, %f370, %f13;
	mul.f32 	%f374, %f14, 0fBECECEDE;
	mul.f32 	%f375, %f15, 0fBECECEDE;
	mul.f32 	%f376, %f16, 0fBECECEDE;
	fma.rn.f32 	%f28, %f20, %f374, %f371;
	fma.rn.f32 	%f29, %f20, %f375, %f372;
	fma.rn.f32 	%f30, %f20, %f376, %f373;
	sub.f32 	%f31, %f28, %f11;
	sub.f32 	%f32, %f29, %f12;
	sub.f32 	%f33, %f30, %f13;
	mul.f32 	%f377, %f32, %f32;
	fma.rn.f32 	%f378, %f31, %f31, %f377;
	fma.rn.f32 	%f34, %f33, %f33, %f378;
	mul.f32 	%f379, %f17, 0fBE24A490;
	mul.f32 	%f380, %f18, 0fBE24A490;
	mul.f32 	%f381, %f19, 0fBE24A490;
	fma.rn.f32 	%f382, %f20, %f379, %f11;
	fma.rn.f32 	%f383, %f20, %f380, %f12;
	fma.rn.f32 	%f384, %f20, %f381, %f13;
	mul.f32 	%f385, %f14, 0f3ECACABC;
	mul.f32 	%f386, %f15, 0f3ECACABC;
	mul.f32 	%f387, %f16, 0f3ECACABC;
	fma.rn.f32 	%f35, %f20, %f385, %f382;
	fma.rn.f32 	%f36, %f20, %f386, %f383;
	fma.rn.f32 	%f37, %f20, %f387, %f384;
	sub.f32 	%f38, %f35, %f11;
	sub.f32 	%f39, %f36, %f12;
	sub.f32 	%f40, %f37, %f13;
	mul.f32 	%f388, %f39, %f39;
	fma.rn.f32 	%f389, %f38, %f38, %f388;
	fma.rn.f32 	%f41, %f40, %f40, %f389;
	mul.f32 	%f390, %f17, 0f3F23A3A8;
	mul.f32 	%f391, %f18, 0f3F23A3A8;
	mul.f32 	%f392, %f19, 0f3F23A3A8;
	fma.rn.f32 	%f393, %f20, %f390, %f11;
	fma.rn.f32 	%f394, %f20, %f391, %f12;
	fma.rn.f32 	%f395, %f20, %f392, %f13;
	mul.f32 	%f396, %f14, 0f3E24A490;
	mul.f32 	%f397, %f15, 0f3E24A490;
	mul.f32 	%f398, %f16, 0f3E24A490;
	fma.rn.f32 	%f42, %f20, %f396, %f393;
	fma.rn.f32 	%f43, %f20, %f397, %f394;
	fma.rn.f32 	%f44, %f20, %f398, %f395;
	sub.f32 	%f45, %f42, %f11;
	sub.f32 	%f46, %f43, %f12;
	sub.f32 	%f47, %f44, %f13;
	mul.f32 	%f399, %f46, %f46;
	fma.rn.f32 	%f400, %f45, %f45, %f399;
	fma.rn.f32 	%f48, %f47, %f47, %f400;
	mul.f32 	%f401, %f17, 0fBECECEDE;
	mul.f32 	%f402, %f18, 0fBECECEDE;
	mul.f32 	%f403, %f19, 0fBECECEDE;
	fma.rn.f32 	%f404, %f20, %f401, %f11;
	fma.rn.f32 	%f405, %f20, %f402, %f12;
	fma.rn.f32 	%f406, %f20, %f403, %f13;
	mul.f32 	%f407, %f14, 0fBF23A3A9;
	mul.f32 	%f408, %f15, 0fBF23A3A9;
	mul.f32 	%f409, %f16, 0fBF23A3A9;
	fma.rn.f32 	%f49, %f20, %f407, %f404;
	fma.rn.f32 	%f50, %f20, %f408, %f405;
	fma.rn.f32 	%f51, %f20, %f409, %f406;
	sub.f32 	%f52, %f49, %f11;
	sub.f32 	%f53, %f50, %f12;
	sub.f32 	%f54, %f51, %f13;
	mul.f32 	%f410, %f53, %f53;
	fma.rn.f32 	%f411, %f52, %f52, %f410;
	fma.rn.f32 	%f55, %f54, %f54, %f411;
	mul.f32 	%f412, %f17, 0fBF23A3A9;
	mul.f32 	%f413, %f18, 0fBF23A3A9;
	mul.f32 	%f414, %f19, 0fBF23A3A9;
	fma.rn.f32 	%f415, %f20, %f412, %f11;
	fma.rn.f32 	%f416, %f20, %f413, %f12;
	fma.rn.f32 	%f417, %f20, %f414, %f13;
	mul.f32 	%f418, %f14, 0f3F23A3A8;
	mul.f32 	%f419, %f15, 0f3F23A3A8;
	mul.f32 	%f420, %f16, 0f3F23A3A8;
	fma.rn.f32 	%f56, %f20, %f418, %f415;
	fma.rn.f32 	%f57, %f20, %f419, %f416;
	fma.rn.f32 	%f58, %f20, %f420, %f417;
	sub.f32 	%f59, %f56, %f11;
	sub.f32 	%f60, %f57, %f12;
	sub.f32 	%f61, %f58, %f13;
	mul.f32 	%f421, %f60, %f60;
	fma.rn.f32 	%f422, %f59, %f59, %f421;
	fma.rn.f32 	%f62, %f61, %f61, %f422;
	mul.f32 	%f423, %f17, 0fBF61E1E3;
	mul.f32 	%f424, %f18, 0fBF61E1E3;
	mul.f32 	%f425, %f19, 0fBF61E1E3;
	fma.rn.f32 	%f426, %f20, %f423, %f11;
	fma.rn.f32 	%f427, %f20, %f424, %f12;
	fma.rn.f32 	%f428, %f20, %f425, %f13;
	mul.f32 	%f429, %f14, 0fBE24A490;
	mul.f32 	%f430, %f15, 0fBE24A490;
	mul.f32 	%f431, %f16, 0fBE24A490;
	fma.rn.f32 	%f63, %f20, %f429, %f426;
	fma.rn.f32 	%f64, %f20, %f430, %f427;
	fma.rn.f32 	%f65, %f20, %f431, %f428;
	sub.f32 	%f66, %f63, %f11;
	sub.f32 	%f67, %f64, %f12;
	sub.f32 	%f68, %f65, %f13;
	mul.f32 	%f432, %f67, %f67;
	fma.rn.f32 	%f433, %f66, %f66, %f432;
	fma.rn.f32 	%f69, %f68, %f68, %f433;
	mul.f32 	%f434, %f17, 0f3ECACABC;
	mul.f32 	%f435, %f18, 0f3ECACABC;
	mul.f32 	%f436, %f19, 0f3ECACABC;
	fma.rn.f32 	%f437, %f20, %f434, %f11;
	fma.rn.f32 	%f438, %f20, %f435, %f12;
	fma.rn.f32 	%f439, %f20, %f436, %f13;
	mul.f32 	%f440, %f14, 0f3F61E1D2;
	mul.f32 	%f441, %f15, 0f3F61E1D2;
	mul.f32 	%f442, %f16, 0f3F61E1D2;
	fma.rn.f32 	%f70, %f20, %f440, %f437;
	fma.rn.f32 	%f71, %f20, %f441, %f438;
	fma.rn.f32 	%f72, %f20, %f442, %f439;
	sub.f32 	%f73, %f70, %f11;
	sub.f32 	%f74, %f71, %f12;
	sub.f32 	%f75, %f72, %f13;
	mul.f32 	%f443, %f74, %f74;
	fma.rn.f32 	%f444, %f73, %f73, %f443;
	fma.rn.f32 	%f76, %f75, %f75, %f444;
	mul.f32 	%f445, %f17, 0f3F61E1D2;
	mul.f32 	%f446, %f18, 0f3F61E1D2;
	mul.f32 	%f447, %f19, 0f3F61E1D2;
	fma.rn.f32 	%f448, %f20, %f445, %f11;
	fma.rn.f32 	%f449, %f20, %f446, %f12;
	fma.rn.f32 	%f450, %f20, %f447, %f13;
	mul.f32 	%f451, %f14, 0fBF61E1E3;
	mul.f32 	%f452, %f15, 0fBF61E1E3;
	mul.f32 	%f453, %f16, 0fBF61E1E3;
	fma.rn.f32 	%f77, %f20, %f451, %f448;
	fma.rn.f32 	%f78, %f20, %f452, %f449;
	fma.rn.f32 	%f79, %f20, %f453, %f450;
	sub.f32 	%f80, %f77, %f11;
	sub.f32 	%f81, %f78, %f12;
	sub.f32 	%f82, %f79, %f13;
	mul.f32 	%f454, %f81, %f81;
	fma.rn.f32 	%f455, %f80, %f80, %f454;
	fma.rn.f32 	%f83, %f82, %f82, %f455;
	mul.f32 	%f456, %f7, %f22;
	mul.f32 	%f457, %f8, %f21;
	sub.f32 	%f84, %f457, %f456;
	mul.f32 	%f458, %f9, %f21;
	mul.f32 	%f459, %f7, %f23;
	sub.f32 	%f85, %f459, %f458;
	mul.f32 	%f460, %f8, %f23;
	mul.f32 	%f461, %f9, %f22;
	sub.f32 	%f86, %f461, %f460;
	mov.f32 	%f1146, 0f00000000;
	mov.u32 	%r446, 0;
	abs.f32 	%f462, %f26;
	abs.f32 	%f463, %f25;
	max.f32 	%f464, %f463, %f462;
	abs.f32 	%f465, %f27;
	max.f32 	%f466, %f464, %f465;
	sqrt.rn.f32 	%f91, %f34;
	sqrt.rn.f32 	%f95, %f41;
	sqrt.rn.f32 	%f99, %f48;
	sqrt.rn.f32 	%f103, %f55;
	sqrt.rn.f32 	%f107, %f62;
	sqrt.rn.f32 	%f111, %f69;
	sqrt.rn.f32 	%f115, %f76;
	sqrt.rn.f32 	%f119, %f83;
	mov.f32 	%f1147, %f1146;

BB0_6:
	setp.lt.s32	%p35, %r445, 1;
	@%p35 bra 	BB0_71;

	rcp.rn.f32 	%f468, %f91;
	mul.f32 	%f92, %f468, %f31;
	mul.f32 	%f93, %f468, %f32;
	mul.f32 	%f94, %f468, %f33;
	rcp.rn.f32 	%f469, %f95;
	mul.f32 	%f96, %f469, %f38;
	mul.f32 	%f97, %f469, %f39;
	mul.f32 	%f98, %f469, %f40;
	rcp.rn.f32 	%f470, %f99;
	mul.f32 	%f100, %f470, %f45;
	mul.f32 	%f101, %f470, %f46;
	mul.f32 	%f102, %f470, %f47;
	rcp.rn.f32 	%f471, %f103;
	mul.f32 	%f104, %f471, %f52;
	mul.f32 	%f105, %f471, %f53;
	mul.f32 	%f106, %f471, %f54;
	rcp.rn.f32 	%f472, %f107;
	mul.f32 	%f108, %f472, %f59;
	mul.f32 	%f109, %f472, %f60;
	mul.f32 	%f110, %f472, %f61;
	rcp.rn.f32 	%f473, %f111;
	mul.f32 	%f112, %f473, %f66;
	mul.f32 	%f113, %f473, %f67;
	mul.f32 	%f114, %f473, %f68;
	rcp.rn.f32 	%f474, %f115;
	mul.f32 	%f116, %f474, %f73;
	mul.f32 	%f117, %f474, %f74;
	mul.f32 	%f118, %f474, %f75;
	rcp.rn.f32 	%f475, %f119;
	mul.f32 	%f120, %f475, %f80;
	mul.f32 	%f121, %f475, %f81;
	mul.f32 	%f122, %f475, %f82;
	mov.u32 	%r448, 0;

BB0_8:
	cvt.rn.f32.s32	%f1135, %r446;
	mad.lo.s32 	%r148, %r471, 1664525, 1013904223;
	and.b32  	%r149, %r148, 16777215;
	cvt.rn.f32.u32	%f476, %r149;
	fma.rn.f32 	%f477, %f476, 0f33800000, %f1135;
	mul.f32 	%f478, %f24, %f477;
	mad.lo.s32 	%r11, %r148, 1664525, 1013904223;
	and.b32  	%r150, %r11, 16777215;
	cvt.rn.f32.u32	%f479, %r150;
	cvt.rn.f32.s32	%f480, %r448;
	fma.rn.f32 	%f481, %f479, 0f33800000, %f480;
	mul.f32 	%f482, %f24, %f481;
	sqrt.rn.f32 	%f125, %f478;
	mul.f32 	%f1154, %f482, 0f40C90FDB;
	abs.f32 	%f127, %f1154;
	setp.neu.f32	%p36, %f127, 0f7F800000;
	mov.f32 	%f1148, %f1154;
	@%p36 bra 	BB0_10;

	mov.f32 	%f483, 0f00000000;
	mul.rn.f32 	%f1148, %f1154, %f483;

BB0_10:
	mul.f32 	%f484, %f1148, 0f3F22F983;
	cvt.rni.s32.f32	%r459, %f484;
	cvt.rn.f32.s32	%f485, %r459;
	neg.f32 	%f486, %f485;
	mov.f32 	%f487, 0f3FC90FDA;
	fma.rn.f32 	%f488, %f486, %f487, %f1148;
	mov.f32 	%f489, 0f33A22168;
	fma.rn.f32 	%f490, %f486, %f489, %f488;
	mov.f32 	%f491, 0f27C234C5;
	fma.rn.f32 	%f1149, %f486, %f491, %f490;
	abs.f32 	%f492, %f1148;
	setp.leu.f32	%p37, %f492, 0f47CE4780;
	@%p37 bra 	BB0_21;

	add.u64 	%rd56, %SP, 4;
	cvta.to.local.u64 	%rd322, %rd56;
	mov.b32 	 %r13, %f1148;
	shl.b32 	%r153, %r13, 8;
	or.b32  	%r15, %r153, -2147483648;
	mov.u32 	%r450, 0;
	mov.u64 	%rd323, 0;
	mov.u32 	%r451, %r450;

BB0_12:
	.pragma "nounroll";
	add.u64 	%rd320, %SP, 4;
	cvta.to.local.u64 	%rd319, %rd320;
	shl.b64 	%rd57, %rd323, 2;
	mov.u64 	%rd58, __cudart_i2opi_f;
	add.s64 	%rd59, %rd58, %rd57;
	ld.const.u32 	%r156, [%rd59];
	// inline asm
	{
	mad.lo.cc.u32   %r154, %r156, %r15, %r451;
	madc.hi.u32     %r451, %r156, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd322], %r154;
	add.s32 	%r450, %r450, 1;
	cvt.s64.s32	%rd323, %r450;
	mul.wide.s32 	%rd62, %r450, 4;
	add.s64 	%rd322, %rd319, %rd62;
	setp.ne.s32	%p38, %r450, 6;
	@%p38 bra 	BB0_12;

	mov.b32 	 %r437, %f1148;
	shr.u32 	%r436, %r437, 23;
	add.u64 	%rd321, %SP, 4;
	and.b32  	%r159, %r436, 255;
	add.s32 	%r160, %r159, -128;
	shr.u32 	%r161, %r160, 5;
	cvta.to.local.u64 	%rd64, %rd321;
	st.local.u32 	[%rd64+24], %r451;
	mov.u32 	%r162, 6;
	sub.s32 	%r163, %r162, %r161;
	mul.wide.s32 	%rd65, %r163, 4;
	add.s64 	%rd8, %rd64, %rd65;
	ld.local.u32 	%r452, [%rd8];
	ld.local.u32 	%r453, [%rd8+-4];
	and.b32  	%r23, %r436, 31;
	setp.eq.s32	%p39, %r23, 0;
	@%p39 bra 	BB0_15;

	mov.u32 	%r164, 32;
	sub.s32 	%r165, %r164, %r23;
	shr.u32 	%r166, %r453, %r165;
	shl.b32 	%r167, %r452, %r23;
	add.s32 	%r452, %r166, %r167;
	ld.local.u32 	%r168, [%rd8+-8];
	shr.u32 	%r169, %r168, %r165;
	shl.b32 	%r170, %r453, %r23;
	add.s32 	%r453, %r169, %r170;

BB0_15:
	mov.b32 	 %r440, %f1148;
	and.b32  	%r455, %r440, -2147483648;
	shr.u32 	%r171, %r453, 30;
	shl.b32 	%r172, %r452, 2;
	add.s32 	%r454, %r171, %r172;
	shl.b32 	%r29, %r453, 2;
	shr.u32 	%r173, %r454, 31;
	shr.u32 	%r174, %r452, 30;
	add.s32 	%r30, %r173, %r174;
	setp.eq.s32	%p40, %r173, 0;
	@%p40 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r456, %r29;
	bra.uni 	BB0_18;

BB0_17:
	mov.b32 	 %r442, %f1148;
	and.b32  	%r441, %r442, -2147483648;
	not.b32 	%r175, %r454;
	neg.s32 	%r456, %r29;
	setp.eq.s32	%p41, %r29, 0;
	selp.u32	%r176, 1, 0, %p41;
	add.s32 	%r454, %r176, %r175;
	xor.b32  	%r455, %r441, -2147483648;

BB0_18:
	mov.b32 	 %r444, %f1148;
	and.b32  	%r443, %r444, -2147483648;
	clz.b32 	%r458, %r454;
	setp.eq.s32	%p42, %r458, 0;
	shl.b32 	%r177, %r454, %r458;
	mov.u32 	%r178, 32;
	sub.s32 	%r179, %r178, %r458;
	shr.u32 	%r180, %r456, %r179;
	add.s32 	%r181, %r180, %r177;
	selp.b32	%r38, %r454, %r181, %p42;
	mov.u32 	%r182, -921707870;
	mul.hi.u32 	%r457, %r38, %r182;
	setp.eq.s32	%p43, %r443, 0;
	neg.s32 	%r183, %r30;
	selp.b32	%r459, %r30, %r183, %p43;
	setp.lt.s32	%p44, %r457, 1;
	@%p44 bra 	BB0_20;

	mul.lo.s32 	%r184, %r38, -921707870;
	shr.u32 	%r185, %r184, 31;
	shl.b32 	%r186, %r457, 1;
	add.s32 	%r457, %r185, %r186;
	add.s32 	%r458, %r458, 1;

BB0_20:
	mov.u32 	%r187, 126;
	sub.s32 	%r188, %r187, %r458;
	shl.b32 	%r189, %r188, 23;
	add.s32 	%r190, %r457, 1;
	shr.u32 	%r191, %r190, 7;
	add.s32 	%r192, %r191, 1;
	shr.u32 	%r193, %r192, 1;
	add.s32 	%r194, %r193, %r189;
	or.b32  	%r195, %r194, %r455;
	mov.b32 	 %f1149, %r195;

BB0_21:
	mul.rn.f32 	%f133, %f1149, %f1149;
	add.s32 	%r46, %r459, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p45, %r47, 0;
	@%p45 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f495, 0f3C08839E;
	mov.f32 	%f496, 0fB94CA1F9;
	fma.rn.f32 	%f1150, %f496, %f133, %f495;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f493, 0fBAB6061A;
	mov.f32 	%f494, 0f37CCF5CE;
	fma.rn.f32 	%f1150, %f494, %f133, %f493;

BB0_24:
	@%p45 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f500, 0fBE2AAAA3;
	fma.rn.f32 	%f501, %f1150, %f133, %f500;
	mov.f32 	%f502, 0f00000000;
	fma.rn.f32 	%f1151, %f501, %f133, %f502;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f497, 0f3D2AAAA5;
	fma.rn.f32 	%f498, %f1150, %f133, %f497;
	mov.f32 	%f499, 0fBF000000;
	fma.rn.f32 	%f1151, %f498, %f133, %f499;

BB0_27:
	fma.rn.f32 	%f1152, %f1151, %f1149, %f1149;
	@%p45 bra 	BB0_29;

	mov.f32 	%f503, 0f3F800000;
	fma.rn.f32 	%f1152, %f1151, %f133, %f503;

BB0_29:
	and.b32  	%r196, %r46, 2;
	setp.eq.s32	%p48, %r196, 0;
	@%p48 bra 	BB0_31;

	mov.f32 	%f504, 0f00000000;
	mov.f32 	%f505, 0fBF800000;
	fma.rn.f32 	%f1152, %f1152, %f505, %f504;

BB0_31:
	abs.f32 	%f1137, %f1154;
	setp.neu.f32	%p154, %f1137, 0f7F800000;
	@%p154 bra 	BB0_33;

	mov.f32 	%f506, 0f00000000;
	mul.rn.f32 	%f1154, %f1154, %f506;

BB0_33:
	mov.f32 	%f1140, 0f27C234C5;
	mov.f32 	%f1139, 0f33A22168;
	mov.f32 	%f1138, 0f3FC90FDA;
	mul.f32 	%f507, %f1154, 0f3F22F983;
	cvt.rni.s32.f32	%r469, %f507;
	cvt.rn.f32.s32	%f508, %r469;
	neg.f32 	%f509, %f508;
	fma.rn.f32 	%f511, %f509, %f1138, %f1154;
	fma.rn.f32 	%f513, %f509, %f1139, %f511;
	fma.rn.f32 	%f1155, %f509, %f1140, %f513;
	abs.f32 	%f515, %f1154;
	setp.leu.f32	%p50, %f515, 0f47CE4780;
	@%p50 bra 	BB0_44;

	add.u64 	%rd67, %SP, 4;
	cvta.to.local.u64 	%rd9, %rd67;
	mov.b32 	 %r49, %f1154;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r199, %r49, 8;
	or.b32  	%r51, %r199, -2147483648;
	mov.u32 	%r460, 0;
	mov.u64 	%rd324, %rd9;
	mov.u64 	%rd325, %rd27;
	mov.u32 	%r461, %r460;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd68, %rd325, 2;
	mov.u64 	%rd69, __cudart_i2opi_f;
	add.s64 	%rd70, %rd69, %rd68;
	ld.const.u32 	%r202, [%rd70];
	// inline asm
	{
	mad.lo.cc.u32   %r200, %r202, %r51, %r461;
	madc.hi.u32     %r461, %r202, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd324], %r200;
	add.s32 	%r460, %r460, 1;
	cvt.s64.s32	%rd325, %r460;
	mul.wide.s32 	%rd71, %r460, 4;
	add.s64 	%rd324, %rd9, %rd71;
	setp.ne.s32	%p51, %r460, 6;
	@%p51 bra 	BB0_35;

	and.b32  	%r205, %r50, 255;
	add.s32 	%r206, %r205, -128;
	shr.u32 	%r207, %r206, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd73, %rd67;
	st.local.u32 	[%rd73+24], %r461;
	mov.u32 	%r208, 6;
	sub.s32 	%r209, %r208, %r207;
	mul.wide.s32 	%rd74, %r209, 4;
	add.s64 	%rd15, %rd73, %rd74;
	ld.local.u32 	%r462, [%rd15];
	ld.local.u32 	%r463, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p52, %r59, 0;
	@%p52 bra 	BB0_38;

	mov.u32 	%r210, 32;
	sub.s32 	%r211, %r210, %r59;
	shr.u32 	%r212, %r463, %r211;
	shl.b32 	%r213, %r462, %r59;
	add.s32 	%r462, %r212, %r213;
	ld.local.u32 	%r214, [%rd15+-8];
	shr.u32 	%r215, %r214, %r211;
	shl.b32 	%r216, %r463, %r59;
	add.s32 	%r463, %r215, %r216;

BB0_38:
	shr.u32 	%r217, %r463, 30;
	shl.b32 	%r218, %r462, 2;
	add.s32 	%r464, %r217, %r218;
	shl.b32 	%r65, %r463, 2;
	shr.u32 	%r219, %r464, 31;
	shr.u32 	%r220, %r462, 30;
	add.s32 	%r66, %r219, %r220;
	setp.eq.s32	%p53, %r219, 0;
	@%p53 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r465, %r56;
	mov.u32 	%r466, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r221, %r464;
	neg.s32 	%r466, %r65;
	setp.eq.s32	%p54, %r65, 0;
	selp.u32	%r222, 1, 0, %p54;
	add.s32 	%r464, %r222, %r221;
	xor.b32  	%r465, %r56, -2147483648;

BB0_41:
	clz.b32 	%r468, %r464;
	setp.eq.s32	%p55, %r468, 0;
	shl.b32 	%r223, %r464, %r468;
	mov.u32 	%r224, 32;
	sub.s32 	%r225, %r224, %r468;
	shr.u32 	%r226, %r466, %r225;
	add.s32 	%r227, %r226, %r223;
	selp.b32	%r74, %r464, %r227, %p55;
	mov.u32 	%r228, -921707870;
	mul.hi.u32 	%r467, %r74, %r228;
	setp.eq.s32	%p56, %r56, 0;
	neg.s32 	%r229, %r66;
	selp.b32	%r469, %r66, %r229, %p56;
	setp.lt.s32	%p57, %r467, 1;
	@%p57 bra 	BB0_43;

	mul.lo.s32 	%r230, %r74, -921707870;
	shr.u32 	%r231, %r230, 31;
	shl.b32 	%r232, %r467, 1;
	add.s32 	%r467, %r231, %r232;
	add.s32 	%r468, %r468, 1;

BB0_43:
	mov.u32 	%r233, 126;
	sub.s32 	%r234, %r233, %r468;
	shl.b32 	%r235, %r234, 23;
	add.s32 	%r236, %r467, 1;
	shr.u32 	%r237, %r236, 7;
	add.s32 	%r238, %r237, 1;
	shr.u32 	%r239, %r238, 1;
	add.s32 	%r240, %r239, %r235;
	or.b32  	%r241, %r240, %r465;
	mov.b32 	 %f1155, %r241;

BB0_44:
	mul.rn.f32 	%f150, %f1155, %f1155;
	and.b32  	%r82, %r469, 1;
	setp.eq.s32	%p58, %r82, 0;
	@%p58 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f518, 0f3C08839E;
	mov.f32 	%f519, 0fB94CA1F9;
	fma.rn.f32 	%f1156, %f519, %f150, %f518;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f516, 0fBAB6061A;
	mov.f32 	%f517, 0f37CCF5CE;
	fma.rn.f32 	%f1156, %f517, %f150, %f516;

BB0_47:
	@%p58 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f523, 0fBE2AAAA3;
	fma.rn.f32 	%f524, %f1156, %f150, %f523;
	mov.f32 	%f525, 0f00000000;
	fma.rn.f32 	%f1157, %f524, %f150, %f525;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f520, 0f3D2AAAA5;
	fma.rn.f32 	%f521, %f1156, %f150, %f520;
	mov.f32 	%f522, 0fBF000000;
	fma.rn.f32 	%f1157, %f521, %f150, %f522;

BB0_50:
	fma.rn.f32 	%f1158, %f1157, %f1155, %f1155;
	@%p58 bra 	BB0_52;

	mov.f32 	%f526, 0f3F800000;
	fma.rn.f32 	%f1158, %f1157, %f150, %f526;

BB0_52:
	and.b32  	%r242, %r469, 2;
	setp.eq.s32	%p61, %r242, 0;
	@%p61 bra 	BB0_54;

	mov.f32 	%f527, 0f00000000;
	mov.f32 	%f528, 0fBF800000;
	fma.rn.f32 	%f1158, %f1158, %f528, %f527;

BB0_54:
	max.f32 	%f1136, %f466, %f304;
	mul.f32 	%f537, %f125, %f1152;
	add.u64 	%rd75, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd75;
	mul.f32 	%f538, %f537, %f537;
	mov.f32 	%f539, 0f3F800000;
	sub.f32 	%f540, %f539, %f538;
	mul.f32 	%f541, %f125, %f1158;
	mul.f32 	%f542, %f541, %f541;
	sub.f32 	%f543, %f540, %f542;
	mov.f32 	%f544, 0f00000000;
	max.f32 	%f545, %f544, %f543;
	sqrt.rn.f32 	%f546, %f545;
	mul.f32 	%f547, %f21, %f541;
	mul.f32 	%f548, %f22, %f541;
	mul.f32 	%f549, %f23, %f541;
	fma.rn.f32 	%f550, %f86, %f537, %f547;
	fma.rn.f32 	%f551, %f85, %f537, %f548;
	fma.rn.f32 	%f552, %f84, %f537, %f549;
	fma.rn.f32 	%f553, %f7, %f546, %f550;
	fma.rn.f32 	%f554, %f8, %f546, %f551;
	fma.rn.f32 	%f555, %f9, %f546, %f552;
	add.f32 	%f556, %f7, %f553;
	add.f32 	%f557, %f8, %f554;
	add.f32 	%f558, %f9, %f555;
	ld.global.f32 	%f559, [shadowSpread];
	mul.f32 	%f560, %f559, %f556;
	mul.f32 	%f561, %f559, %f557;
	mul.f32 	%f562, %f559, %f558;
	sub.f32 	%f563, %f560, %f7;
	sub.f32 	%f564, %f561, %f8;
	sub.f32 	%f565, %f562, %f9;
	mul.f32 	%f566, %f564, %f564;
	fma.rn.f32 	%f567, %f563, %f563, %f566;
	fma.rn.f32 	%f568, %f565, %f565, %f567;
	sqrt.rn.f32 	%f569, %f568;
	rcp.rn.f32 	%f570, %f569;
	mul.f32 	%f162, %f570, %f563;
	mul.f32 	%f163, %f570, %f564;
	mul.f32 	%f164, %f570, %f565;
	ld.global.u32 	%r246, [imageEnabled];
	and.b32  	%r247, %r246, 32;
	setp.eq.s32	%p62, %r247, 0;
	selp.f32	%f571, 0f3F800000, 0f41200000, %p62;
	mul.f32 	%f535, %f571, %f1136;
	mov.u32 	%r248, 1065353216;
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r243, [root];
	mov.u32 	%r244, 1;
	// inline asm
	call _rt_trace_64, (%r243, %f11, %f12, %f13, %f92, %f93, %f94, %r244, %f535, %f91, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f572, [%rd16];
	setp.neu.f32	%p63, %f572, 0f3F800000;
	@%p63 bra 	BB0_56;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r249, [root];
	mov.f32 	%f580, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r249, %f28, %f29, %f30, %f162, %f163, %f164, %r244, %f535, %f580, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f581, [%rd16];
	add.f32 	%f1147, %f1147, %f581;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_56:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r253, [root];
	// inline asm
	call _rt_trace_64, (%r253, %f11, %f12, %f13, %f96, %f97, %f98, %r244, %f535, %f95, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f590, [%rd16];
	setp.neu.f32	%p64, %f590, 0f3F800000;
	@%p64 bra 	BB0_58;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r257, [root];
	mov.f32 	%f598, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r257, %f35, %f36, %f37, %f162, %f163, %f164, %r244, %f535, %f598, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f599, [%rd16];
	add.f32 	%f1147, %f1147, %f599;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_58:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r261, [root];
	// inline asm
	call _rt_trace_64, (%r261, %f11, %f12, %f13, %f100, %f101, %f102, %r244, %f535, %f99, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f608, [%rd16];
	setp.neu.f32	%p65, %f608, 0f3F800000;
	@%p65 bra 	BB0_60;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r265, [root];
	mov.f32 	%f616, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r265, %f42, %f43, %f44, %f162, %f163, %f164, %r244, %f535, %f616, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f617, [%rd16];
	add.f32 	%f1147, %f1147, %f617;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_60:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r269, [root];
	// inline asm
	call _rt_trace_64, (%r269, %f11, %f12, %f13, %f104, %f105, %f106, %r244, %f535, %f103, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f626, [%rd16];
	setp.neu.f32	%p66, %f626, 0f3F800000;
	@%p66 bra 	BB0_62;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r273, [root];
	mov.f32 	%f634, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r273, %f49, %f50, %f51, %f162, %f163, %f164, %r244, %f535, %f634, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f635, [%rd16];
	add.f32 	%f1147, %f1147, %f635;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_62:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r277, [root];
	// inline asm
	call _rt_trace_64, (%r277, %f11, %f12, %f13, %f108, %f109, %f110, %r244, %f535, %f107, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f644, [%rd16];
	setp.neu.f32	%p67, %f644, 0f3F800000;
	@%p67 bra 	BB0_64;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r281, [root];
	mov.f32 	%f652, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r281, %f56, %f57, %f58, %f162, %f163, %f164, %r244, %f535, %f652, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f653, [%rd16];
	add.f32 	%f1147, %f1147, %f653;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_64:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r285, [root];
	// inline asm
	call _rt_trace_64, (%r285, %f11, %f12, %f13, %f112, %f113, %f114, %r244, %f535, %f111, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f662, [%rd16];
	setp.neu.f32	%p68, %f662, 0f3F800000;
	@%p68 bra 	BB0_66;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r289, [root];
	mov.f32 	%f670, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r289, %f63, %f64, %f65, %f162, %f163, %f164, %r244, %f535, %f670, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f671, [%rd16];
	add.f32 	%f1147, %f1147, %f671;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_66:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r293, [root];
	// inline asm
	call _rt_trace_64, (%r293, %f11, %f12, %f13, %f116, %f117, %f118, %r244, %f535, %f115, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f680, [%rd16];
	setp.neu.f32	%p69, %f680, 0f3F800000;
	@%p69 bra 	BB0_68;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r297, [root];
	mov.f32 	%f688, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r297, %f70, %f71, %f72, %f162, %f163, %f164, %r244, %f535, %f688, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f689, [%rd16];
	add.f32 	%f1147, %f1147, %f689;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_68:
	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r301, [root];
	// inline asm
	call _rt_trace_64, (%r301, %f11, %f12, %f13, %f120, %f121, %f122, %r244, %f535, %f119, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f698, [%rd16];
	setp.neu.f32	%p70, %f698, 0f3F800000;
	@%p70 bra 	BB0_70;

	st.local.u32 	[%rd16], %r248;
	ld.global.u32 	%r305, [root];
	mov.f32 	%f706, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r305, %f77, %f78, %f79, %f162, %f163, %f164, %r244, %f535, %f706, %rd75, %r100);
	// inline asm
	ld.local.f32 	%f707, [%rd16];
	add.f32 	%f1147, %f1147, %f707;
	add.f32 	%f1146, %f1146, 0f3F800000;

BB0_70:
	mad.lo.s32 	%r435, %r471, 1664525, 1013904223;
	mad.lo.s32 	%r471, %r435, 1664525, 1013904223;
	ld.global.u32 	%r445, [samples];
	add.s32 	%r448, %r448, 1;
	setp.lt.s32	%p71, %r448, %r445;
	@%p71 bra 	BB0_8;

BB0_71:
	add.s32 	%r446, %r446, 1;
	setp.lt.s32	%p72, %r446, %r445;
	@%p72 bra 	BB0_6;
	bra.uni 	BB0_72;

BB0_4:
	mov.f32 	%f1147, %f1146;

BB0_72:
	setp.eq.s32	%p73, %r445, 0;
	mov.f32 	%f1180, 0f3F800000;
	@%p73 bra 	BB0_74;

	mov.f32 	%f709, 0f3F800000;
	max.f32 	%f710, %f1146, %f709;
	div.rn.f32 	%f1180, %f1147, %f710;

BB0_74:
	ld.global.f32 	%f711, [directColor];
	mul.f32 	%f712, %f1180, %f711;
	ld.global.f32 	%f713, [directColor+4];
	mul.f32 	%f714, %f1180, %f713;
	ld.global.f32 	%f715, [directColor+8];
	mul.f32 	%f716, %f1180, %f715;
	cvt.sat.f32.f32	%f717, %f10;
	mul.f32 	%f204, %f712, %f717;
	mul.f32 	%f205, %f714, %f717;
	mul.f32 	%f206, %f716, %f717;
	mul.f32 	%f718, %f10, 0f40800000;
	cvt.sat.f32.f32	%f719, %f718;
	mul.f32 	%f720, %f712, %f719;
	mul.f32 	%f721, %f714, %f719;
	mul.f32 	%f722, %f716, %f719;
	mul.f32 	%f207, %f720, 0f3E800000;
	mul.f32 	%f208, %f721, 0f3E800000;
	mul.f32 	%f209, %f722, 0f3E800000;
	ld.global.u32 	%r474, [imageEnabled];
	and.b32  	%r309, %r474, 8;
	setp.eq.s32	%p74, %r309, 0;
	@%p74 bra 	BB0_87;

	cvt.u64.u32	%rd93, %r2;
	cvt.u64.u32	%rd94, %r3;
	mov.u64 	%rd97, image_Mask;
	cvta.global.u64 	%rd92, %rd97;
	// inline asm
	call (%rd91), _rt_buffer_get_64, (%rd92, %r99, %r99, %rd93, %rd94, %rd27, %rd27);
	// inline asm
	mov.f32 	%f725, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f726, %f725;
	fma.rn.f32 	%f727, %f726, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f210, %f727;
	abs.f32 	%f211, %f1180;
	setp.lt.f32	%p75, %f211, 0f00800000;
	mul.f32 	%f728, %f211, 0f4B800000;
	selp.f32	%f729, 0fC3170000, 0fC2FE0000, %p75;
	selp.f32	%f730, %f728, %f211, %p75;
	mov.b32 	 %r312, %f730;
	and.b32  	%r313, %r312, 8388607;
	or.b32  	%r314, %r313, 1065353216;
	mov.b32 	 %f731, %r314;
	shr.u32 	%r315, %r312, 23;
	cvt.rn.f32.u32	%f732, %r315;
	add.f32 	%f733, %f729, %f732;
	setp.gt.f32	%p76, %f731, 0f3FB504F3;
	mul.f32 	%f734, %f731, 0f3F000000;
	add.f32 	%f735, %f733, 0f3F800000;
	selp.f32	%f736, %f734, %f731, %p76;
	selp.f32	%f737, %f735, %f733, %p76;
	add.f32 	%f738, %f736, 0fBF800000;
	add.f32 	%f724, %f736, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f723,%f724;
	// inline asm
	add.f32 	%f739, %f738, %f738;
	mul.f32 	%f740, %f723, %f739;
	mul.f32 	%f741, %f740, %f740;
	mov.f32 	%f742, 0f3C4CAF63;
	mov.f32 	%f743, 0f3B18F0FE;
	fma.rn.f32 	%f744, %f743, %f741, %f742;
	mov.f32 	%f745, 0f3DAAAABD;
	fma.rn.f32 	%f746, %f744, %f741, %f745;
	mul.rn.f32 	%f747, %f746, %f741;
	mul.rn.f32 	%f748, %f747, %f740;
	sub.f32 	%f749, %f738, %f740;
	neg.f32 	%f750, %f740;
	add.f32 	%f751, %f749, %f749;
	fma.rn.f32 	%f752, %f750, %f738, %f751;
	mul.rn.f32 	%f753, %f723, %f752;
	add.f32 	%f754, %f748, %f740;
	sub.f32 	%f755, %f740, %f754;
	add.f32 	%f756, %f748, %f755;
	add.f32 	%f757, %f753, %f756;
	add.f32 	%f758, %f754, %f757;
	sub.f32 	%f759, %f754, %f758;
	add.f32 	%f760, %f757, %f759;
	mov.f32 	%f761, 0f3F317200;
	mul.rn.f32 	%f762, %f737, %f761;
	mov.f32 	%f763, 0f35BFBE8E;
	mul.rn.f32 	%f764, %f737, %f763;
	add.f32 	%f765, %f762, %f758;
	sub.f32 	%f766, %f762, %f765;
	add.f32 	%f767, %f758, %f766;
	add.f32 	%f768, %f760, %f767;
	add.f32 	%f769, %f764, %f768;
	add.f32 	%f770, %f765, %f769;
	sub.f32 	%f771, %f765, %f770;
	add.f32 	%f772, %f769, %f771;
	mov.f32 	%f773, 0f3EE8BA2E;
	mul.rn.f32 	%f774, %f773, %f770;
	neg.f32 	%f775, %f774;
	fma.rn.f32 	%f776, %f773, %f770, %f775;
	fma.rn.f32 	%f777, %f773, %f772, %f776;
	mov.f32 	%f778, 0f00000000;
	fma.rn.f32 	%f779, %f778, %f770, %f777;
	add.rn.f32 	%f780, %f774, %f779;
	neg.f32 	%f781, %f780;
	add.rn.f32 	%f782, %f774, %f781;
	add.rn.f32 	%f783, %f782, %f779;
	mov.b32 	 %r316, %f780;
	setp.eq.s32	%p77, %r316, 1118925336;
	add.s32 	%r317, %r316, -1;
	mov.b32 	 %f784, %r317;
	add.f32 	%f785, %f783, 0f37000000;
	selp.f32	%f786, %f784, %f780, %p77;
	selp.f32	%f212, %f785, %f783, %p77;
	mul.f32 	%f787, %f786, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f788, %f787;
	mov.f32 	%f789, 0fBF317200;
	fma.rn.f32 	%f790, %f788, %f789, %f786;
	mov.f32 	%f791, 0fB5BFBE8E;
	fma.rn.f32 	%f792, %f788, %f791, %f790;
	mul.f32 	%f793, %f792, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f794, %f793;
	add.f32 	%f795, %f788, 0f00000000;
	ex2.approx.f32 	%f796, %f795;
	mul.f32 	%f797, %f794, %f796;
	setp.lt.f32	%p78, %f786, 0fC2D20000;
	selp.f32	%f798, 0f00000000, %f797, %p78;
	setp.gt.f32	%p79, %f786, 0f42D20000;
	selp.f32	%f1181, 0f7F800000, %f798, %p79;
	setp.eq.f32	%p80, %f1181, 0f7F800000;
	@%p80 bra 	BB0_77;

	fma.rn.f32 	%f1181, %f1181, %f212, %f1181;

BB0_77:
	setp.lt.f32	%p81, %f1180, 0f00000000;
	setp.eq.f32	%p82, %f210, 0f3F800000;
	and.pred  	%p1, %p81, %p82;
	mov.b32 	 %r318, %f1181;
	xor.b32  	%r319, %r318, -2147483648;
	mov.b32 	 %f799, %r319;
	selp.f32	%f1183, %f799, %f1181, %p1;
	setp.eq.f32	%p83, %f1180, 0f00000000;
	@%p83 bra 	BB0_80;
	bra.uni 	BB0_78;

BB0_80:
	add.f32 	%f802, %f1180, %f1180;
	selp.f32	%f1183, %f802, 0f00000000, %p82;
	bra.uni 	BB0_81;

BB0_145:
	mov.u64 	%rd238, image_HDR;
	cvta.global.u64 	%rd233, %rd238;
	mov.u32 	%r405, 8;
	mov.u64 	%rd237, 0;
	// inline asm
	call (%rd232), _rt_buffer_get_64, (%rd233, %r99, %r405, %rd20, %rd21, %rd237, %rd237);
	// inline asm
	mov.f32 	%f1106, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs98, %f1106;}

	// inline asm
	mov.u16 	%rs99, 0;
	st.v4.u16 	[%rd232], {%rs98, %rs98, %rs98, %rs99};

BB0_146:
	ld.global.u32 	%r406, [additive];
	setp.eq.s32	%p150, %r406, 0;
	@%p150 bra 	BB0_148;

	mov.u64 	%rd251, image_RNM0;
	cvta.global.u64 	%rd240, %rd251;
	mov.u32 	%r410, 8;
	mov.u64 	%rd250, 0;
	// inline asm
	call (%rd239), _rt_buffer_get_64, (%rd240, %r99, %r410, %rd20, %rd21, %rd250, %rd250);
	// inline asm
	ld.v4.u16 	{%rs106, %rs107, %rs108, %rs109}, [%rd239];
	// inline asm
	{  cvt.f32.f16 %f1107, %rs106;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1108, %rs107;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1109, %rs108;}

	// inline asm
	// inline asm
	call (%rd245), _rt_buffer_get_64, (%rd240, %r99, %r410, %rd20, %rd21, %rd250, %rd250);
	// inline asm
	add.f32 	%f1110, %f1107, 0f00000000;
	add.f32 	%f1111, %f1108, 0f00000000;
	add.f32 	%f1112, %f1109, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs105, %f1112;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs104, %f1111;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs103, %f1110;}

	// inline asm
	mov.u16 	%rs110, 0;
	st.v4.u16 	[%rd245], {%rs103, %rs104, %rs105, %rs110};
	bra.uni 	BB0_149;

BB0_148:
	mov.u64 	%rd258, image_RNM0;
	cvta.global.u64 	%rd253, %rd258;
	mov.u32 	%r412, 8;
	mov.u64 	%rd257, 0;
	// inline asm
	call (%rd252), _rt_buffer_get_64, (%rd253, %r99, %r412, %rd20, %rd21, %rd257, %rd257);
	// inline asm
	mov.f32 	%f1113, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs111, %f1113;}

	// inline asm
	mov.u16 	%rs112, 0;
	st.v4.u16 	[%rd252], {%rs111, %rs111, %rs111, %rs112};

BB0_149:
	ld.global.u32 	%r413, [additive];
	setp.eq.s32	%p151, %r413, 0;
	@%p151 bra 	BB0_151;

	mov.u64 	%rd271, image_RNM1;
	cvta.global.u64 	%rd260, %rd271;
	mov.u32 	%r417, 8;
	mov.u64 	%rd270, 0;
	// inline asm
	call (%rd259), _rt_buffer_get_64, (%rd260, %r99, %r417, %rd20, %rd21, %rd270, %rd270);
	// inline asm
	ld.v4.u16 	{%rs119, %rs120, %rs121, %rs122}, [%rd259];
	// inline asm
	{  cvt.f32.f16 %f1114, %rs119;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1115, %rs120;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1116, %rs121;}

	// inline asm
	// inline asm
	call (%rd265), _rt_buffer_get_64, (%rd260, %r99, %r417, %rd20, %rd21, %rd270, %rd270);
	// inline asm
	add.f32 	%f1117, %f1114, 0f00000000;
	add.f32 	%f1118, %f1115, 0f00000000;
	add.f32 	%f1119, %f1116, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs118, %f1119;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs117, %f1118;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f1117;}

	// inline asm
	mov.u16 	%rs123, 0;
	st.v4.u16 	[%rd265], {%rs116, %rs117, %rs118, %rs123};
	bra.uni 	BB0_152;

BB0_151:
	mov.u64 	%rd278, image_RNM1;
	cvta.global.u64 	%rd273, %rd278;
	mov.u32 	%r419, 8;
	mov.u64 	%rd277, 0;
	// inline asm
	call (%rd272), _rt_buffer_get_64, (%rd273, %r99, %r419, %rd20, %rd21, %rd277, %rd277);
	// inline asm
	mov.f32 	%f1120, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs124, %f1120;}

	// inline asm
	mov.u16 	%rs125, 0;
	st.v4.u16 	[%rd272], {%rs124, %rs124, %rs124, %rs125};

BB0_152:
	ld.global.u32 	%r420, [additive];
	setp.eq.s32	%p152, %r420, 0;
	@%p152 bra 	BB0_154;

	mov.u64 	%rd291, image_RNM2;
	cvta.global.u64 	%rd280, %rd291;
	mov.u32 	%r424, 8;
	mov.u64 	%rd290, 0;
	// inline asm
	call (%rd279), _rt_buffer_get_64, (%rd280, %r99, %r424, %rd20, %rd21, %rd290, %rd290);
	// inline asm
	ld.v4.u16 	{%rs132, %rs133, %rs134, %rs135}, [%rd279];
	// inline asm
	{  cvt.f32.f16 %f1121, %rs132;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1122, %rs133;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1123, %rs134;}

	// inline asm
	// inline asm
	call (%rd285), _rt_buffer_get_64, (%rd280, %r99, %r424, %rd20, %rd21, %rd290, %rd290);
	// inline asm
	add.f32 	%f1124, %f1121, 0f00000000;
	add.f32 	%f1125, %f1122, 0f00000000;
	add.f32 	%f1126, %f1123, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs131, %f1126;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs130, %f1125;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f1124;}

	// inline asm
	mov.u16 	%rs136, 0;
	st.v4.u16 	[%rd285], {%rs129, %rs130, %rs131, %rs136};
	bra.uni 	BB0_155;

BB0_154:
	mov.u64 	%rd298, image_RNM2;
	cvta.global.u64 	%rd293, %rd298;
	mov.u32 	%r426, 8;
	mov.u64 	%rd297, 0;
	// inline asm
	call (%rd292), _rt_buffer_get_64, (%rd293, %r99, %r426, %rd20, %rd21, %rd297, %rd297);
	// inline asm
	mov.f32 	%f1127, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs137, %f1127;}

	// inline asm
	mov.u16 	%rs138, 0;
	st.v4.u16 	[%rd292], {%rs137, %rs137, %rs137, %rs138};

BB0_155:
	ld.global.u32 	%r427, [additive];
	setp.eq.s32	%p153, %r427, 0;
	@%p153 bra 	BB0_157;

	mov.u64 	%rd311, image_RNM3;
	cvta.global.u64 	%rd300, %rd311;
	mov.u32 	%r431, 8;
	mov.u64 	%rd310, 0;
	// inline asm
	call (%rd299), _rt_buffer_get_64, (%rd300, %r99, %r431, %rd20, %rd21, %rd310, %rd310);
	// inline asm
	ld.v4.u16 	{%rs145, %rs146, %rs147, %rs148}, [%rd299];
	// inline asm
	{  cvt.f32.f16 %f1128, %rs145;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1129, %rs146;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1130, %rs147;}

	// inline asm
	// inline asm
	call (%rd305), _rt_buffer_get_64, (%rd300, %r99, %r431, %rd20, %rd21, %rd310, %rd310);
	// inline asm
	add.f32 	%f1131, %f1128, 0f00000000;
	add.f32 	%f1132, %f1129, 0f00000000;
	add.f32 	%f1133, %f1130, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs144, %f1133;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs143, %f1132;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f1131;}

	// inline asm
	mov.u16 	%rs149, 0;
	st.v4.u16 	[%rd305], {%rs142, %rs143, %rs144, %rs149};
	bra.uni 	BB0_158;

BB0_157:
	mov.u64 	%rd318, image_RNM3;
	cvta.global.u64 	%rd313, %rd318;
	mov.u32 	%r433, 8;
	mov.u64 	%rd317, 0;
	// inline asm
	call (%rd312), _rt_buffer_get_64, (%rd313, %r99, %r433, %rd20, %rd21, %rd317, %rd317);
	// inline asm
	mov.f32 	%f1134, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs150, %f1134;}

	// inline asm
	mov.u16 	%rs151, 0;
	st.v4.u16 	[%rd312], {%rs150, %rs150, %rs150, %rs151};
	bra.uni 	BB0_158;

BB0_78:
	setp.geu.f32	%p84, %f1180, 0f00000000;
	@%p84 bra 	BB0_81;

	cvt.rzi.f32.f32	%f801, %f773;
	setp.neu.f32	%p85, %f801, 0f3EE8BA2E;
	selp.f32	%f1183, 0f7FFFFFFF, %f1183, %p85;

BB0_81:
	add.f32 	%f803, %f211, 0f3EE8BA2E;
	mov.b32 	 %r320, %f803;
	setp.lt.s32	%p87, %r320, 2139095040;
	@%p87 bra 	BB0_86;

	setp.gtu.f32	%p88, %f211, 0f7F800000;
	@%p88 bra 	BB0_85;
	bra.uni 	BB0_83;

BB0_85:
	add.f32 	%f1183, %f1180, 0f3EE8BA2E;
	bra.uni 	BB0_86;

BB0_83:
	setp.neu.f32	%p89, %f211, 0f7F800000;
	@%p89 bra 	BB0_86;

	selp.f32	%f1183, 0fFF800000, 0f7F800000, %p1;

BB0_86:
	mul.f32 	%f804, %f1183, 0f437F0000;
	setp.eq.f32	%p90, %f1180, 0f3F800000;
	selp.f32	%f805, 0f437F0000, %f804, %p90;
	cvt.rzi.u32.f32	%r321, %f805;
	cvt.u16.u32	%rs14, %r321;
	mov.u16 	%rs15, 255;
	st.v2.u8 	[%rd91], {%rs14, %rs15};
	ld.global.u32 	%r474, [imageEnabled];

BB0_87:
	and.b32  	%r322, %r474, 1;
	setp.eq.b32	%p91, %r322, 1;
	@!%p91 bra 	BB0_122;
	bra.uni 	BB0_88;

BB0_88:
	mov.f32 	%f808, 0f3E666666;
	cvt.rzi.f32.f32	%f809, %f808;
	fma.rn.f32 	%f810, %f809, 0fC0000000, 0f3EE66666;
	abs.f32 	%f223, %f810;
	abs.f32 	%f224, %f204;
	setp.lt.f32	%p92, %f224, 0f00800000;
	mul.f32 	%f811, %f224, 0f4B800000;
	selp.f32	%f812, 0fC3170000, 0fC2FE0000, %p92;
	selp.f32	%f813, %f811, %f224, %p92;
	mov.b32 	 %r323, %f813;
	and.b32  	%r324, %r323, 8388607;
	or.b32  	%r325, %r324, 1065353216;
	mov.b32 	 %f814, %r325;
	shr.u32 	%r326, %r323, 23;
	cvt.rn.f32.u32	%f815, %r326;
	add.f32 	%f816, %f812, %f815;
	setp.gt.f32	%p93, %f814, 0f3FB504F3;
	mul.f32 	%f817, %f814, 0f3F000000;
	add.f32 	%f818, %f816, 0f3F800000;
	selp.f32	%f819, %f817, %f814, %p93;
	selp.f32	%f820, %f818, %f816, %p93;
	add.f32 	%f821, %f819, 0fBF800000;
	add.f32 	%f807, %f819, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f806,%f807;
	// inline asm
	add.f32 	%f822, %f821, %f821;
	mul.f32 	%f823, %f806, %f822;
	mul.f32 	%f824, %f823, %f823;
	mov.f32 	%f825, 0f3C4CAF63;
	mov.f32 	%f826, 0f3B18F0FE;
	fma.rn.f32 	%f827, %f826, %f824, %f825;
	mov.f32 	%f828, 0f3DAAAABD;
	fma.rn.f32 	%f829, %f827, %f824, %f828;
	mul.rn.f32 	%f830, %f829, %f824;
	mul.rn.f32 	%f831, %f830, %f823;
	sub.f32 	%f832, %f821, %f823;
	neg.f32 	%f833, %f823;
	add.f32 	%f834, %f832, %f832;
	fma.rn.f32 	%f835, %f833, %f821, %f834;
	mul.rn.f32 	%f836, %f806, %f835;
	add.f32 	%f837, %f831, %f823;
	sub.f32 	%f838, %f823, %f837;
	add.f32 	%f839, %f831, %f838;
	add.f32 	%f840, %f836, %f839;
	add.f32 	%f841, %f837, %f840;
	sub.f32 	%f842, %f837, %f841;
	add.f32 	%f843, %f840, %f842;
	mov.f32 	%f844, 0f3F317200;
	mul.rn.f32 	%f845, %f820, %f844;
	mov.f32 	%f846, 0f35BFBE8E;
	mul.rn.f32 	%f847, %f820, %f846;
	add.f32 	%f848, %f845, %f841;
	sub.f32 	%f849, %f845, %f848;
	add.f32 	%f850, %f841, %f849;
	add.f32 	%f851, %f843, %f850;
	add.f32 	%f852, %f847, %f851;
	add.f32 	%f853, %f848, %f852;
	sub.f32 	%f854, %f848, %f853;
	add.f32 	%f855, %f852, %f854;
	mov.f32 	%f856, 0f3EE66666;
	mul.rn.f32 	%f857, %f856, %f853;
	neg.f32 	%f858, %f857;
	fma.rn.f32 	%f859, %f856, %f853, %f858;
	fma.rn.f32 	%f860, %f856, %f855, %f859;
	mov.f32 	%f861, 0f00000000;
	fma.rn.f32 	%f862, %f861, %f853, %f860;
	add.rn.f32 	%f863, %f857, %f862;
	neg.f32 	%f864, %f863;
	add.rn.f32 	%f865, %f857, %f864;
	add.rn.f32 	%f866, %f865, %f862;
	mov.b32 	 %r327, %f863;
	setp.eq.s32	%p94, %r327, 1118925336;
	add.s32 	%r328, %r327, -1;
	mov.b32 	 %f867, %r328;
	add.f32 	%f868, %f866, 0f37000000;
	selp.f32	%f869, %f867, %f863, %p94;
	selp.f32	%f225, %f868, %f866, %p94;
	mul.f32 	%f870, %f869, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f871, %f870;
	mov.f32 	%f872, 0fBF317200;
	fma.rn.f32 	%f873, %f871, %f872, %f869;
	mov.f32 	%f874, 0fB5BFBE8E;
	fma.rn.f32 	%f875, %f871, %f874, %f873;
	mul.f32 	%f876, %f875, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f877, %f876;
	add.f32 	%f878, %f871, 0f00000000;
	ex2.approx.f32 	%f879, %f878;
	mul.f32 	%f880, %f877, %f879;
	setp.lt.f32	%p95, %f869, 0fC2D20000;
	selp.f32	%f881, 0f00000000, %f880, %p95;
	setp.gt.f32	%p96, %f869, 0f42D20000;
	selp.f32	%f1184, 0f7F800000, %f881, %p96;
	setp.eq.f32	%p97, %f1184, 0f7F800000;
	@%p97 bra 	BB0_90;

	fma.rn.f32 	%f1184, %f1184, %f225, %f1184;

BB0_90:
	setp.lt.f32	%p98, %f204, 0f00000000;
	setp.eq.f32	%p99, %f223, 0f3F800000;
	and.pred  	%p2, %p98, %p99;
	mov.b32 	 %r329, %f1184;
	xor.b32  	%r330, %r329, -2147483648;
	mov.b32 	 %f882, %r330;
	selp.f32	%f1186, %f882, %f1184, %p2;
	setp.eq.f32	%p100, %f204, 0f00000000;
	@%p100 bra 	BB0_93;
	bra.uni 	BB0_91;

BB0_93:
	add.f32 	%f885, %f204, %f204;
	selp.f32	%f1186, %f885, 0f00000000, %p99;
	bra.uni 	BB0_94;

BB0_91:
	setp.geu.f32	%p101, %f204, 0f00000000;
	@%p101 bra 	BB0_94;

	cvt.rzi.f32.f32	%f884, %f856;
	setp.neu.f32	%p102, %f884, 0f3EE66666;
	selp.f32	%f1186, 0f7FFFFFFF, %f1186, %p102;

BB0_94:
	add.f32 	%f886, %f224, 0f3EE66666;
	mov.b32 	 %r331, %f886;
	setp.lt.s32	%p104, %r331, 2139095040;
	@%p104 bra 	BB0_99;

	setp.gtu.f32	%p105, %f224, 0f7F800000;
	@%p105 bra 	BB0_98;
	bra.uni 	BB0_96;

BB0_98:
	add.f32 	%f1186, %f204, 0f3EE66666;
	bra.uni 	BB0_99;

BB0_96:
	setp.neu.f32	%p106, %f224, 0f7F800000;
	@%p106 bra 	BB0_99;

	selp.f32	%f1186, 0fFF800000, 0f7F800000, %p2;

BB0_99:
	setp.eq.f32	%p107, %f204, 0f3F800000;
	selp.f32	%f236, 0f3F800000, %f1186, %p107;
	abs.f32 	%f237, %f205;
	setp.lt.f32	%p108, %f237, 0f00800000;
	mul.f32 	%f889, %f237, 0f4B800000;
	selp.f32	%f890, 0fC3170000, 0fC2FE0000, %p108;
	selp.f32	%f891, %f889, %f237, %p108;
	mov.b32 	 %r332, %f891;
	and.b32  	%r333, %r332, 8388607;
	or.b32  	%r334, %r333, 1065353216;
	mov.b32 	 %f892, %r334;
	shr.u32 	%r335, %r332, 23;
	cvt.rn.f32.u32	%f893, %r335;
	add.f32 	%f894, %f890, %f893;
	setp.gt.f32	%p109, %f892, 0f3FB504F3;
	mul.f32 	%f895, %f892, 0f3F000000;
	add.f32 	%f896, %f894, 0f3F800000;
	selp.f32	%f897, %f895, %f892, %p109;
	selp.f32	%f898, %f896, %f894, %p109;
	add.f32 	%f899, %f897, 0fBF800000;
	add.f32 	%f888, %f897, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f887,%f888;
	// inline asm
	add.f32 	%f900, %f899, %f899;
	mul.f32 	%f901, %f887, %f900;
	mul.f32 	%f902, %f901, %f901;
	fma.rn.f32 	%f905, %f826, %f902, %f825;
	fma.rn.f32 	%f907, %f905, %f902, %f828;
	mul.rn.f32 	%f908, %f907, %f902;
	mul.rn.f32 	%f909, %f908, %f901;
	sub.f32 	%f910, %f899, %f901;
	neg.f32 	%f911, %f901;
	add.f32 	%f912, %f910, %f910;
	fma.rn.f32 	%f913, %f911, %f899, %f912;
	mul.rn.f32 	%f914, %f887, %f913;
	add.f32 	%f915, %f909, %f901;
	sub.f32 	%f916, %f901, %f915;
	add.f32 	%f917, %f909, %f916;
	add.f32 	%f918, %f914, %f917;
	add.f32 	%f919, %f915, %f918;
	sub.f32 	%f920, %f915, %f919;
	add.f32 	%f921, %f918, %f920;
	mul.rn.f32 	%f923, %f898, %f844;
	mul.rn.f32 	%f925, %f898, %f846;
	add.f32 	%f926, %f923, %f919;
	sub.f32 	%f927, %f923, %f926;
	add.f32 	%f928, %f919, %f927;
	add.f32 	%f929, %f921, %f928;
	add.f32 	%f930, %f925, %f929;
	add.f32 	%f931, %f926, %f930;
	sub.f32 	%f932, %f926, %f931;
	add.f32 	%f933, %f930, %f932;
	mul.rn.f32 	%f935, %f856, %f931;
	neg.f32 	%f936, %f935;
	fma.rn.f32 	%f937, %f856, %f931, %f936;
	fma.rn.f32 	%f938, %f856, %f933, %f937;
	fma.rn.f32 	%f940, %f861, %f931, %f938;
	add.rn.f32 	%f941, %f935, %f940;
	neg.f32 	%f942, %f941;
	add.rn.f32 	%f943, %f935, %f942;
	add.rn.f32 	%f944, %f943, %f940;
	mov.b32 	 %r336, %f941;
	setp.eq.s32	%p110, %r336, 1118925336;
	add.s32 	%r337, %r336, -1;
	mov.b32 	 %f945, %r337;
	add.f32 	%f946, %f944, 0f37000000;
	selp.f32	%f947, %f945, %f941, %p110;
	selp.f32	%f238, %f946, %f944, %p110;
	mul.f32 	%f948, %f947, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f949, %f948;
	fma.rn.f32 	%f951, %f949, %f872, %f947;
	fma.rn.f32 	%f953, %f949, %f874, %f951;
	mul.f32 	%f954, %f953, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f955, %f954;
	add.f32 	%f956, %f949, 0f00000000;
	ex2.approx.f32 	%f957, %f956;
	mul.f32 	%f958, %f955, %f957;
	setp.lt.f32	%p111, %f947, 0fC2D20000;
	selp.f32	%f959, 0f00000000, %f958, %p111;
	setp.gt.f32	%p112, %f947, 0f42D20000;
	selp.f32	%f1187, 0f7F800000, %f959, %p112;
	setp.eq.f32	%p113, %f1187, 0f7F800000;
	@%p113 bra 	BB0_101;

	fma.rn.f32 	%f1187, %f1187, %f238, %f1187;

BB0_101:
	setp.lt.f32	%p114, %f205, 0f00000000;
	and.pred  	%p3, %p114, %p99;
	mov.b32 	 %r338, %f1187;
	xor.b32  	%r339, %r338, -2147483648;
	mov.b32 	 %f960, %r339;
	selp.f32	%f1189, %f960, %f1187, %p3;
	setp.eq.f32	%p116, %f205, 0f00000000;
	@%p116 bra 	BB0_104;
	bra.uni 	BB0_102;

BB0_104:
	add.f32 	%f963, %f205, %f205;
	selp.f32	%f1189, %f963, 0f00000000, %p99;
	bra.uni 	BB0_105;

BB0_102:
	setp.geu.f32	%p117, %f205, 0f00000000;
	@%p117 bra 	BB0_105;

	cvt.rzi.f32.f32	%f962, %f856;
	setp.neu.f32	%p118, %f962, 0f3EE66666;
	selp.f32	%f1189, 0f7FFFFFFF, %f1189, %p118;

BB0_105:
	add.f32 	%f964, %f237, 0f3EE66666;
	mov.b32 	 %r340, %f964;
	setp.lt.s32	%p120, %r340, 2139095040;
	@%p120 bra 	BB0_110;

	setp.gtu.f32	%p121, %f237, 0f7F800000;
	@%p121 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f1189, %f205, 0f3EE66666;
	bra.uni 	BB0_110;

BB0_107:
	setp.neu.f32	%p122, %f237, 0f7F800000;
	@%p122 bra 	BB0_110;

	selp.f32	%f1189, 0fFF800000, 0f7F800000, %p3;

BB0_110:
	setp.eq.f32	%p123, %f205, 0f3F800000;
	selp.f32	%f249, 0f3F800000, %f1189, %p123;
	abs.f32 	%f250, %f206;
	setp.lt.f32	%p124, %f250, 0f00800000;
	mul.f32 	%f967, %f250, 0f4B800000;
	selp.f32	%f968, 0fC3170000, 0fC2FE0000, %p124;
	selp.f32	%f969, %f967, %f250, %p124;
	mov.b32 	 %r341, %f969;
	and.b32  	%r342, %r341, 8388607;
	or.b32  	%r343, %r342, 1065353216;
	mov.b32 	 %f970, %r343;
	shr.u32 	%r344, %r341, 23;
	cvt.rn.f32.u32	%f971, %r344;
	add.f32 	%f972, %f968, %f971;
	setp.gt.f32	%p125, %f970, 0f3FB504F3;
	mul.f32 	%f973, %f970, 0f3F000000;
	add.f32 	%f974, %f972, 0f3F800000;
	selp.f32	%f975, %f973, %f970, %p125;
	selp.f32	%f976, %f974, %f972, %p125;
	add.f32 	%f977, %f975, 0fBF800000;
	add.f32 	%f966, %f975, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f965,%f966;
	// inline asm
	add.f32 	%f978, %f977, %f977;
	mul.f32 	%f979, %f965, %f978;
	mul.f32 	%f980, %f979, %f979;
	fma.rn.f32 	%f983, %f826, %f980, %f825;
	fma.rn.f32 	%f985, %f983, %f980, %f828;
	mul.rn.f32 	%f986, %f985, %f980;
	mul.rn.f32 	%f987, %f986, %f979;
	sub.f32 	%f988, %f977, %f979;
	neg.f32 	%f989, %f979;
	add.f32 	%f990, %f988, %f988;
	fma.rn.f32 	%f991, %f989, %f977, %f990;
	mul.rn.f32 	%f992, %f965, %f991;
	add.f32 	%f993, %f987, %f979;
	sub.f32 	%f994, %f979, %f993;
	add.f32 	%f995, %f987, %f994;
	add.f32 	%f996, %f992, %f995;
	add.f32 	%f997, %f993, %f996;
	sub.f32 	%f998, %f993, %f997;
	add.f32 	%f999, %f996, %f998;
	mul.rn.f32 	%f1001, %f976, %f844;
	mul.rn.f32 	%f1003, %f976, %f846;
	add.f32 	%f1004, %f1001, %f997;
	sub.f32 	%f1005, %f1001, %f1004;
	add.f32 	%f1006, %f997, %f1005;
	add.f32 	%f1007, %f999, %f1006;
	add.f32 	%f1008, %f1003, %f1007;
	add.f32 	%f1009, %f1004, %f1008;
	sub.f32 	%f1010, %f1004, %f1009;
	add.f32 	%f1011, %f1008, %f1010;
	mul.rn.f32 	%f1013, %f856, %f1009;
	neg.f32 	%f1014, %f1013;
	fma.rn.f32 	%f1015, %f856, %f1009, %f1014;
	fma.rn.f32 	%f1016, %f856, %f1011, %f1015;
	fma.rn.f32 	%f1018, %f861, %f1009, %f1016;
	add.rn.f32 	%f1019, %f1013, %f1018;
	neg.f32 	%f1020, %f1019;
	add.rn.f32 	%f1021, %f1013, %f1020;
	add.rn.f32 	%f1022, %f1021, %f1018;
	mov.b32 	 %r345, %f1019;
	setp.eq.s32	%p126, %r345, 1118925336;
	add.s32 	%r346, %r345, -1;
	mov.b32 	 %f1023, %r346;
	add.f32 	%f1024, %f1022, 0f37000000;
	selp.f32	%f1025, %f1023, %f1019, %p126;
	selp.f32	%f251, %f1024, %f1022, %p126;
	mul.f32 	%f1026, %f1025, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1027, %f1026;
	fma.rn.f32 	%f1029, %f1027, %f872, %f1025;
	fma.rn.f32 	%f1031, %f1027, %f874, %f1029;
	mul.f32 	%f1032, %f1031, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1033, %f1032;
	add.f32 	%f1034, %f1027, 0f00000000;
	ex2.approx.f32 	%f1035, %f1034;
	mul.f32 	%f1036, %f1033, %f1035;
	setp.lt.f32	%p127, %f1025, 0fC2D20000;
	selp.f32	%f1037, 0f00000000, %f1036, %p127;
	setp.gt.f32	%p128, %f1025, 0f42D20000;
	selp.f32	%f1190, 0f7F800000, %f1037, %p128;
	setp.eq.f32	%p129, %f1190, 0f7F800000;
	@%p129 bra 	BB0_112;

	fma.rn.f32 	%f1190, %f1190, %f251, %f1190;

BB0_112:
	setp.lt.f32	%p130, %f206, 0f00000000;
	and.pred  	%p4, %p130, %p99;
	mov.b32 	 %r347, %f1190;
	xor.b32  	%r348, %r347, -2147483648;
	mov.b32 	 %f1038, %r348;
	selp.f32	%f1192, %f1038, %f1190, %p4;
	setp.eq.f32	%p132, %f206, 0f00000000;
	@%p132 bra 	BB0_115;
	bra.uni 	BB0_113;

BB0_115:
	add.f32 	%f1041, %f206, %f206;
	selp.f32	%f1192, %f1041, 0f00000000, %p99;
	bra.uni 	BB0_116;

BB0_113:
	setp.geu.f32	%p133, %f206, 0f00000000;
	@%p133 bra 	BB0_116;

	cvt.rzi.f32.f32	%f1040, %f856;
	setp.neu.f32	%p134, %f1040, 0f3EE66666;
	selp.f32	%f1192, 0f7FFFFFFF, %f1192, %p134;

BB0_116:
	add.f32 	%f1042, %f250, 0f3EE66666;
	mov.b32 	 %r349, %f1042;
	setp.lt.s32	%p136, %r349, 2139095040;
	@%p136 bra 	BB0_121;

	setp.gtu.f32	%p137, %f250, 0f7F800000;
	@%p137 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f1192, %f206, 0f3EE66666;
	bra.uni 	BB0_121;

BB0_118:
	setp.neu.f32	%p138, %f250, 0f7F800000;
	@%p138 bra 	BB0_121;

	selp.f32	%f1192, 0fFF800000, 0f7F800000, %p4;

BB0_121:
	setp.eq.f32	%p139, %f206, 0f3F800000;
	selp.f32	%f1043, 0f3F800000, %f1192, %p139;
	cvt.u64.u32	%rd101, %r3;
	cvt.u64.u32	%rd100, %r2;
	mov.u64 	%rd104, image;
	cvta.global.u64 	%rd99, %rd104;
	// inline asm
	call (%rd98), _rt_buffer_get_64, (%rd99, %r99, %r100, %rd100, %rd101, %rd27, %rd27);
	// inline asm
	cvt.sat.f32.f32	%f1044, %f1043;
	mul.f32 	%f1045, %f1044, 0f437FFD71;
	cvt.rzi.u32.f32	%r352, %f1045;
	cvt.sat.f32.f32	%f1046, %f249;
	mul.f32 	%f1047, %f1046, 0f437FFD71;
	cvt.rzi.u32.f32	%r353, %f1047;
	cvt.sat.f32.f32	%f1048, %f236;
	mul.f32 	%f1049, %f1048, 0f437FFD71;
	cvt.rzi.u32.f32	%r354, %f1049;
	cvt.u16.u32	%rs16, %r352;
	cvt.u16.u32	%rs17, %r354;
	cvt.u16.u32	%rs18, %r353;
	mov.u16 	%rs19, 255;
	st.v4.u8 	[%rd98], {%rs16, %rs18, %rs17, %rs19};
	ld.global.u32 	%r474, [imageEnabled];

BB0_122:
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	and.b32  	%r355, %r474, 4;
	setp.eq.s32	%p140, %r355, 0;
	@%p140 bra 	BB0_126;

	ld.global.u32 	%r356, [additive];
	setp.eq.s32	%p141, %r356, 0;
	mov.f32 	%f1050, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs20, %f1050;}

	// inline asm
	@%p141 bra 	BB0_125;

	mov.u64 	%rd117, image_HDR;
	cvta.global.u64 	%rd106, %rd117;
	mov.u32 	%r360, 8;
	// inline asm
	call (%rd105), _rt_buffer_get_64, (%rd106, %r99, %r360, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs27, %rs28, %rs29, %rs30}, [%rd105];
	// inline asm
	{  cvt.f32.f16 %f1051, %rs27;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1052, %rs28;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1053, %rs29;}

	// inline asm
	// inline asm
	call (%rd111), _rt_buffer_get_64, (%rd106, %r99, %r360, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1054, %f204, %f1051;
	add.f32 	%f1055, %f205, %f1052;
	add.f32 	%f1056, %f206, %f1053;
	// inline asm
	{  cvt.rn.f16.f32 %rs26, %f1056;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f1055;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f1054;}

	// inline asm
	st.v4.u16 	[%rd111], {%rs24, %rs25, %rs26, %rs20};
	bra.uni 	BB0_126;

BB0_125:
	mov.u64 	%rd124, image_HDR;
	cvta.global.u64 	%rd119, %rd124;
	mov.u32 	%r362, 8;
	// inline asm
	call (%rd118), _rt_buffer_get_64, (%rd119, %r99, %r362, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs33, %f206;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f205;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f204;}

	// inline asm
	st.v4.u16 	[%rd118], {%rs31, %rs32, %rs33, %rs20};

BB0_126:
	ld.global.u32 	%r363, [additive];
	setp.eq.s32	%p142, %r363, 0;
	mov.f32 	%f1060, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs34, %f1060;}

	// inline asm
	@%p142 bra 	BB0_128;

	mov.u64 	%rd137, image_RNM0;
	cvta.global.u64 	%rd126, %rd137;
	mov.u32 	%r367, 8;
	// inline asm
	call (%rd125), _rt_buffer_get_64, (%rd126, %r99, %r367, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs41, %rs42, %rs43, %rs44}, [%rd125];
	// inline asm
	{  cvt.f32.f16 %f1061, %rs41;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1062, %rs42;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1063, %rs43;}

	// inline asm
	// inline asm
	call (%rd131), _rt_buffer_get_64, (%rd126, %r99, %r367, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1064, %f207, %f1061;
	add.f32 	%f1065, %f208, %f1062;
	add.f32 	%f1066, %f209, %f1063;
	// inline asm
	{  cvt.rn.f16.f32 %rs40, %f1066;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs39, %f1065;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs38, %f1064;}

	// inline asm
	st.v4.u16 	[%rd131], {%rs38, %rs39, %rs40, %rs34};
	bra.uni 	BB0_129;

BB0_128:
	mov.u64 	%rd144, image_RNM0;
	cvta.global.u64 	%rd139, %rd144;
	mov.u32 	%r369, 8;
	// inline asm
	call (%rd138), _rt_buffer_get_64, (%rd139, %r99, %r369, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs47, %f209;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs46, %f208;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs45, %f207;}

	// inline asm
	st.v4.u16 	[%rd138], {%rs45, %rs46, %rs47, %rs34};

BB0_129:
	ld.global.f32 	%f1071, [directDir];
	fma.rn.f32 	%f262, %f1071, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f1072, [directDir+4];
	fma.rn.f32 	%f263, %f1072, 0fBF000000, 0f3F000000;
	ld.global.f32 	%f1073, [directDir+8];
	fma.rn.f32 	%f264, %f1073, 0fBF000000, 0f3F000000;
	ld.global.u32 	%r370, [additive];
	setp.eq.s32	%p143, %r370, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs48, %f1060;}

	// inline asm
	@%p143 bra 	BB0_131;

	mov.u64 	%rd157, image_RNM1;
	cvta.global.u64 	%rd146, %rd157;
	mov.u32 	%r374, 8;
	// inline asm
	call (%rd145), _rt_buffer_get_64, (%rd146, %r99, %r374, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs55, %rs56, %rs57, %rs58}, [%rd145];
	// inline asm
	{  cvt.f32.f16 %f1074, %rs55;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1075, %rs56;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1076, %rs57;}

	// inline asm
	// inline asm
	call (%rd151), _rt_buffer_get_64, (%rd146, %r99, %r374, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1077, %f262, %f1074;
	add.f32 	%f1078, %f262, %f1075;
	add.f32 	%f1079, %f262, %f1076;
	// inline asm
	{  cvt.rn.f16.f32 %rs54, %f1079;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs53, %f1078;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs52, %f1077;}

	// inline asm
	st.v4.u16 	[%rd151], {%rs52, %rs53, %rs54, %rs48};
	bra.uni 	BB0_132;

BB0_131:
	mov.u64 	%rd164, image_RNM1;
	cvta.global.u64 	%rd159, %rd164;
	mov.u32 	%r376, 8;
	// inline asm
	call (%rd158), _rt_buffer_get_64, (%rd159, %r99, %r376, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs59, %f262;}

	// inline asm
	st.v4.u16 	[%rd158], {%rs59, %rs59, %rs59, %rs48};

BB0_132:
	ld.global.u32 	%r377, [additive];
	setp.eq.s32	%p144, %r377, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f1060;}

	// inline asm
	@%p144 bra 	BB0_134;

	mov.u64 	%rd177, image_RNM2;
	cvta.global.u64 	%rd166, %rd177;
	mov.u32 	%r381, 8;
	// inline asm
	call (%rd165), _rt_buffer_get_64, (%rd166, %r99, %r381, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd165];
	// inline asm
	{  cvt.f32.f16 %f1082, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1083, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1084, %rs69;}

	// inline asm
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd166, %r99, %r381, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1085, %f263, %f1082;
	add.f32 	%f1086, %f263, %f1083;
	add.f32 	%f1087, %f263, %f1084;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1087;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1086;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1085;}

	// inline asm
	st.v4.u16 	[%rd171], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_135;

BB0_134:
	mov.u64 	%rd184, image_RNM2;
	cvta.global.u64 	%rd179, %rd184;
	mov.u32 	%r383, 8;
	// inline asm
	call (%rd178), _rt_buffer_get_64, (%rd179, %r99, %r383, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f263;}

	// inline asm
	st.v4.u16 	[%rd178], {%rs71, %rs71, %rs71, %rs60};

BB0_135:
	ld.global.u32 	%r384, [additive];
	setp.eq.s32	%p145, %r384, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f1060;}

	// inline asm
	@%p145 bra 	BB0_137;

	mov.u64 	%rd197, image_RNM3;
	cvta.global.u64 	%rd186, %rd197;
	mov.u32 	%r388, 8;
	// inline asm
	call (%rd185), _rt_buffer_get_64, (%rd186, %r99, %r388, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	ld.v4.u16 	{%rs79, %rs80, %rs81, %rs82}, [%rd185];
	// inline asm
	{  cvt.f32.f16 %f1090, %rs79;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1091, %rs80;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1092, %rs81;}

	// inline asm
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd186, %r99, %r388, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	add.f32 	%f1093, %f264, %f1090;
	add.f32 	%f1094, %f264, %f1091;
	add.f32 	%f1095, %f264, %f1092;
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f1095;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs77, %f1094;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs76, %f1093;}

	// inline asm
	st.v4.u16 	[%rd191], {%rs76, %rs77, %rs78, %rs72};
	bra.uni 	BB0_158;

BB0_137:
	mov.u64 	%rd204, image_RNM3;
	cvta.global.u64 	%rd199, %rd204;
	mov.u32 	%r390, 8;
	// inline asm
	call (%rd198), _rt_buffer_get_64, (%rd199, %r99, %r390, %rd18, %rd19, %rd27, %rd27);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs83, %f264;}

	// inline asm
	st.v4.u16 	[%rd198], {%rs83, %rs83, %rs83, %rs72};

BB0_158:
	ret;
}


