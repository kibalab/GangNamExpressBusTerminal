//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-23083092
// Cuda compilation tools, release 9.1, V9.1.85
// Based on LLVM 3.4svn
//

.version 6.1
.target sm_30
.address_size 64

	// .globl	_Z6oxMainv
.global .align 8 .b8 pixelID[8];
.global .align 8 .b8 resolution[8];
.global .align 4 .b8 normal[12];
.global .align 4 .b8 camPos[12];
.global .align 4 .b8 root[4];
.global .align 4 .u32 imageEnabled;
.global .texref lightmap;
.global .align 16 .b8 tileInfo[16];
.global .align 4 .u32 additive;
.global .align 1 .b8 image[1];
.global .align 1 .b8 image_HDR[1];
.global .align 1 .b8 image_HDR2[1];
.global .align 1 .b8 image_Mask[1];
.global .align 1 .b8 image_RNM0[1];
.global .align 1 .b8 image_RNM1[1];
.global .align 1 .b8 image_RNM2[1];
.global .align 1 .b8 uvtangent[1];
.global .align 1 .b8 uvpos[1];
.global .align 1 .b8 uvnormal[1];
.global .align 1 .b8 rnd_seeds[1];
.global .align 4 .b8 directDir[12];
.global .align 4 .b8 directColor[12];
.global .align 4 .f32 shadowSpread;
.global .align 4 .u32 samples;
.global .align 4 .u32 ignoreNormal;
.global .align 4 .b8 _ZN21rti_internal_typeinfo7pixelIDE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo10resolutionE[8] = {82, 97, 121, 0, 8, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6normalE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo6camPosE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo4rootE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12imageEnabledE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8tileInfoE[8] = {82, 97, 121, 0, 16, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo8additiveE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo9directDirE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo11directColorE[8] = {82, 97, 121, 0, 12, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12shadowSpreadE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo7samplesE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 4 .b8 _ZN21rti_internal_typeinfo12ignoreNormalE[8] = {82, 97, 121, 0, 4, 0, 0, 0};
.global .align 8 .u64 _ZN21rti_internal_register20reg_bitness_detectorE;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail0E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail1E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail2E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail3E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail4E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail5E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail6E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail7E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail8E;
.global .align 8 .u64 _ZN21rti_internal_register24reg_exception_64_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail0E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail1E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail2E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail3E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail4E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail5E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail6E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail7E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail8E;
.global .align 4 .u32 _ZN21rti_internal_register21reg_exception_detail9E;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_xE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_yE;
.global .align 4 .u32 _ZN21rti_internal_register14reg_rayIndex_zE;
.global .align 8 .b8 _ZN21rti_internal_typename7pixelIDE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename10resolutionE[6] = {117, 105, 110, 116, 50, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6normalE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename6camPosE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 16 .b8 _ZN21rti_internal_typename4rootE[9] = {114, 116, 79, 98, 106, 101, 99, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12imageEnabledE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename8tileInfoE[6] = {117, 105, 110, 116, 52, 0};
.global .align 4 .b8 _ZN21rti_internal_typename8additiveE[4] = {105, 110, 116, 0};
.global .align 8 .b8 _ZN21rti_internal_typename9directDirE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename11directColorE[7] = {102, 108, 111, 97, 116, 51, 0};
.global .align 8 .b8 _ZN21rti_internal_typename12shadowSpreadE[6] = {102, 108, 111, 97, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename7samplesE[4] = {105, 110, 116, 0};
.global .align 4 .b8 _ZN21rti_internal_typename12ignoreNormalE[4] = {105, 110, 116, 0};
.global .align 4 .u32 _ZN21rti_internal_typeenum7pixelIDE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum10resolutionE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6normalE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum6camPosE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum4rootE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12imageEnabledE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8tileInfoE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum8additiveE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum9directDirE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum11directColorE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12shadowSpreadE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum7samplesE = 4919;
.global .align 4 .u32 _ZN21rti_internal_typeenum12ignoreNormalE = 4919;
.global .align 16 .b8 _ZN21rti_internal_semantic7pixelIDE[14] = {114, 116, 76, 97, 117, 110, 99, 104, 73, 110, 100, 101, 120, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic10resolutionE[12] = {114, 116, 76, 97, 117, 110, 99, 104, 68, 105, 109, 0};
.global .align 16 .b8 _ZN21rti_internal_semantic6normalE[17] = {97, 116, 116, 114, 105, 98, 117, 116, 101, 32, 110, 111, 114, 109, 97, 108, 0};
.global .align 1 .b8 _ZN21rti_internal_semantic6camPosE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic4rootE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12imageEnabledE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8tileInfoE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic8additiveE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic9directDirE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic11directColorE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12shadowSpreadE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic7samplesE[1];
.global .align 1 .b8 _ZN21rti_internal_semantic12ignoreNormalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7pixelIDE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation10resolutionE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6normalE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation6camPosE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation4rootE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12imageEnabledE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8tileInfoE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation8additiveE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation9directDirE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation11directColorE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12shadowSpreadE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation7samplesE[1];
.global .align 1 .b8 _ZN23rti_internal_annotation12ignoreNormalE[1];
.const .align 4 .b8 __cudart_i2opi_f[24] = {65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};

.visible .entry _Z6oxMainv(

)
{
	.local .align 4 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<179>;
	.reg .b16 	%rs<157>;
	.reg .f32 	%f<1478>;
	.reg .b32 	%r<496>;
	.reg .b64 	%rd<313>;


	mov.u64 	%rd312, __local_depot0;
	cvta.local.u64 	%SP, %rd312;
	ld.global.v2.u32 	{%r107, %r108}, [pixelID];
	cvt.u64.u32	%rd29, %r107;
	cvt.u64.u32	%rd30, %r108;
	mov.u64 	%rd33, uvnormal;
	cvta.global.u64 	%rd28, %rd33;
	mov.u32 	%r105, 2;
	mov.u32 	%r106, 4;
	mov.u64 	%rd32, 0;
	// inline asm
	call (%rd27), _rt_buffer_get_64, (%rd28, %r105, %r106, %rd29, %rd30, %rd32, %rd32);
	// inline asm
	ld.u32 	%r1, [%rd27];
	shr.u32 	%r111, %r1, 16;
	cvt.u16.u32	%rs1, %r111;
	and.b16  	%rs6, %rs1, 255;
	cvt.u16.u32	%rs7, %r1;
	or.b16  	%rs8, %rs7, %rs6;
	setp.eq.s16	%p6, %rs8, 0;
	mov.f32 	%f1414, 0f00000000;
	mov.f32 	%f1415, %f1414;
	mov.f32 	%f1416, %f1414;
	@%p6 bra 	BB0_2;

	ld.u8 	%rs9, [%rd27+1];
	and.b16  	%rs11, %rs7, 255;
	cvt.rn.f32.u16	%f318, %rs11;
	div.rn.f32 	%f319, %f318, 0f437F0000;
	fma.rn.f32 	%f320, %f319, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f321, %rs9;
	div.rn.f32 	%f322, %f321, 0f437F0000;
	fma.rn.f32 	%f323, %f322, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f324, %rs6;
	div.rn.f32 	%f325, %f324, 0f437F0000;
	fma.rn.f32 	%f326, %f325, 0f40000000, 0fBF800000;
	mul.f32 	%f327, %f323, %f323;
	fma.rn.f32 	%f328, %f320, %f320, %f327;
	fma.rn.f32 	%f329, %f326, %f326, %f328;
	sqrt.rn.f32 	%f330, %f329;
	rcp.rn.f32 	%f331, %f330;
	mul.f32 	%f1414, %f320, %f331;
	mul.f32 	%f1415, %f323, %f331;
	mul.f32 	%f1416, %f326, %f331;

BB0_2:
	ld.global.v2.u32 	{%r112, %r113}, [pixelID];
	ld.global.v2.u32 	{%r115, %r116}, [tileInfo];
	add.s32 	%r2, %r112, %r115;
	add.s32 	%r3, %r113, %r116;
	setp.eq.f32	%p7, %f1415, 0f00000000;
	setp.eq.f32	%p8, %f1414, 0f00000000;
	and.pred  	%p9, %p8, %p7;
	setp.eq.f32	%p10, %f1416, 0f00000000;
	and.pred  	%p11, %p9, %p10;
	@%p11 bra 	BB0_152;
	bra.uni 	BB0_3;

BB0_152:
	ld.global.u32 	%r495, [imageEnabled];
	and.b32  	%r417, %r495, 1;
	setp.eq.b32	%p171, %r417, 1;
	@!%p171 bra 	BB0_154;
	bra.uni 	BB0_153;

BB0_153:
	cvt.u64.u32	%rd213, %r2;
	cvt.u64.u32	%rd214, %r3;
	mov.u64 	%rd217, image;
	cvta.global.u64 	%rd212, %rd217;
	mov.u64 	%rd216, 0;
	// inline asm
	call (%rd211), _rt_buffer_get_64, (%rd212, %r105, %r106, %rd213, %rd214, %rd216, %rd216);
	// inline asm
	mov.u16 	%rs102, 0;
	st.v4.u8 	[%rd211], {%rs102, %rs102, %rs102, %rs102};
	ld.global.u32 	%r495, [imageEnabled];

BB0_154:
	and.b32  	%r420, %r495, 8;
	setp.eq.s32	%p172, %r420, 0;
	@%p172 bra 	BB0_156;

	cvt.u64.u32	%rd221, %r3;
	cvt.u64.u32	%rd220, %r2;
	mov.u64 	%rd224, image_Mask;
	cvta.global.u64 	%rd219, %rd224;
	mov.u64 	%rd223, 0;
	// inline asm
	call (%rd218), _rt_buffer_get_64, (%rd219, %r105, %r105, %rd220, %rd221, %rd223, %rd223);
	// inline asm
	mov.f32 	%f1379, 0f00000000;
	cvt.rzi.u32.f32	%r423, %f1379;
	cvt.u16.u32	%rs103, %r423;
	mov.u16 	%rs104, 0;
	st.v2.u8 	[%rd218], {%rs103, %rs104};
	ld.global.u32 	%r495, [imageEnabled];

BB0_156:
	cvt.u64.u32	%rd25, %r2;
	cvt.u64.u32	%rd26, %r3;
	and.b32  	%r424, %r495, 4;
	setp.eq.s32	%p173, %r424, 0;
	@%p173 bra 	BB0_160;

	ld.global.u32 	%r425, [additive];
	setp.eq.s32	%p174, %r425, 0;
	@%p174 bra 	BB0_159;

	mov.u64 	%rd237, image_HDR;
	cvta.global.u64 	%rd226, %rd237;
	mov.u32 	%r429, 8;
	mov.u64 	%rd236, 0;
	// inline asm
	call (%rd225), _rt_buffer_get_64, (%rd226, %r105, %r429, %rd25, %rd26, %rd236, %rd236);
	// inline asm
	ld.v4.u16 	{%rs111, %rs112, %rs113, %rs114}, [%rd225];
	// inline asm
	{  cvt.f32.f16 %f1380, %rs111;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1381, %rs112;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1382, %rs113;}

	// inline asm
	// inline asm
	call (%rd231), _rt_buffer_get_64, (%rd226, %r105, %r429, %rd25, %rd26, %rd236, %rd236);
	// inline asm
	add.f32 	%f1383, %f1380, 0f00000000;
	add.f32 	%f1384, %f1381, 0f00000000;
	add.f32 	%f1385, %f1382, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs110, %f1385;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs109, %f1384;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs108, %f1383;}

	// inline asm
	mov.u16 	%rs115, 0;
	st.v4.u16 	[%rd231], {%rs108, %rs109, %rs110, %rs115};
	bra.uni 	BB0_160;

BB0_3:
	ld.global.f32 	%f9, [directDir+8];
	ld.global.f32 	%f8, [directDir+4];
	ld.global.f32 	%f7, [directDir];
	mul.f32 	%f334, %f1414, %f7;
	mul.f32 	%f335, %f1415, %f8;
	neg.f32 	%f336, %f335;
	sub.f32 	%f337, %f336, %f334;
	mul.f32 	%f338, %f1416, %f9;
	sub.f32 	%f10, %f337, %f338;
	ld.global.v2.u32 	{%r128, %r129}, [pixelID];
	cvt.u64.u32	%rd36, %r128;
	cvt.u64.u32	%rd37, %r129;
	mov.u64 	%rd58, uvpos;
	cvta.global.u64 	%rd35, %rd58;
	mov.u32 	%r125, 12;
	// inline asm
	call (%rd34), _rt_buffer_get_64, (%rd35, %r105, %r125, %rd36, %rd37, %rd32, %rd32);
	// inline asm
	ld.f32 	%f339, [%rd34+8];
	ld.f32 	%f340, [%rd34+4];
	ld.f32 	%f341, [%rd34];
	mul.f32 	%f342, %f341, 0f3456BF95;
	mul.f32 	%f343, %f340, 0f3456BF95;
	mul.f32 	%f344, %f339, 0f3456BF95;
	abs.f32 	%f345, %f1414;
	div.rn.f32 	%f346, %f342, %f345;
	abs.f32 	%f347, %f1415;
	div.rn.f32 	%f348, %f343, %f347;
	abs.f32 	%f349, %f1416;
	div.rn.f32 	%f350, %f344, %f349;
	abs.f32 	%f351, %f346;
	abs.f32 	%f352, %f348;
	abs.f32 	%f353, %f350;
	mov.f32 	%f354, 0f38D1B717;
	max.f32 	%f355, %f351, %f354;
	max.f32 	%f356, %f352, %f354;
	max.f32 	%f357, %f353, %f354;
	fma.rn.f32 	%f11, %f1414, %f355, %f341;
	fma.rn.f32 	%f12, %f1415, %f356, %f340;
	fma.rn.f32 	%f13, %f1416, %f357, %f339;
	setp.gt.f32	%p12, %f345, %f349;
	neg.f32 	%f358, %f1415;
	selp.f32	%f359, %f358, 0f00000000, %p12;
	neg.f32 	%f360, %f1416;
	selp.f32	%f361, %f1414, %f360, %p12;
	selp.f32	%f362, 0f00000000, %f1415, %p12;
	mul.f32 	%f363, %f361, %f361;
	fma.rn.f32 	%f364, %f359, %f359, %f363;
	fma.rn.f32 	%f365, %f362, %f362, %f364;
	sqrt.rn.f32 	%f366, %f365;
	rcp.rn.f32 	%f367, %f366;
	mul.f32 	%f14, %f359, %f367;
	mul.f32 	%f15, %f361, %f367;
	mul.f32 	%f16, %f362, %f367;
	mul.f32 	%f368, %f1416, %f15;
	mul.f32 	%f369, %f1415, %f16;
	sub.f32 	%f17, %f368, %f369;
	mul.f32 	%f370, %f1414, %f16;
	mul.f32 	%f371, %f1416, %f14;
	sub.f32 	%f18, %f370, %f371;
	mul.f32 	%f372, %f1415, %f14;
	mul.f32 	%f373, %f1414, %f15;
	sub.f32 	%f19, %f372, %f373;
	ld.global.v2.u32 	{%r132, %r133}, [pixelID];
	cvt.u64.u32	%rd43, %r133;
	add.s32 	%r136, %r132, 1;
	ld.global.u32 	%r137, [resolution];
	add.s32 	%r138, %r137, -1;
	min.u32 	%r139, %r136, %r138;
	cvt.u64.u32	%rd42, %r139;
	// inline asm
	call (%rd40), _rt_buffer_get_64, (%rd35, %r105, %r125, %rd42, %rd43, %rd32, %rd32);
	// inline asm
	ld.f32 	%f374, [%rd40+8];
	ld.f32 	%f375, [%rd40+4];
	ld.f32 	%f376, [%rd40];
	setp.eq.f32	%p13, %f376, 0f00000000;
	setp.eq.f32	%p14, %f375, 0f00000000;
	and.pred  	%p15, %p13, %p14;
	setp.eq.f32	%p16, %f374, 0f00000000;
	and.pred  	%p17, %p15, %p16;
	selp.f32	%f377, %f341, %f376, %p17;
	selp.f32	%f378, %f340, %f375, %p17;
	selp.f32	%f379, %f339, %f374, %p17;
	ld.global.v2.u32 	{%r140, %r141}, [pixelID];
	add.s32 	%r144, %r141, 1;
	ld.global.u32 	%r145, [resolution+4];
	add.s32 	%r146, %r145, -1;
	min.u32 	%r147, %r144, %r146;
	cvt.u64.u32	%rd48, %r140;
	cvt.u64.u32	%rd49, %r147;
	// inline asm
	call (%rd46), _rt_buffer_get_64, (%rd35, %r105, %r125, %rd48, %rd49, %rd32, %rd32);
	// inline asm
	ld.f32 	%f380, [%rd46+8];
	ld.f32 	%f381, [%rd46+4];
	ld.f32 	%f382, [%rd46];
	setp.eq.f32	%p18, %f382, 0f00000000;
	setp.eq.f32	%p19, %f381, 0f00000000;
	and.pred  	%p20, %p18, %p19;
	setp.eq.f32	%p21, %f380, 0f00000000;
	and.pred  	%p22, %p20, %p21;
	selp.f32	%f383, %f341, %f382, %p22;
	selp.f32	%f384, %f340, %f381, %p22;
	selp.f32	%f385, %f339, %f380, %p22;
	sub.f32 	%f386, %f377, %f341;
	sub.f32 	%f387, %f378, %f340;
	sub.f32 	%f388, %f379, %f339;
	sub.f32 	%f389, %f383, %f341;
	sub.f32 	%f390, %f384, %f340;
	sub.f32 	%f391, %f385, %f339;
	abs.f32 	%f392, %f386;
	abs.f32 	%f393, %f389;
	max.f32 	%f394, %f392, %f393;
	abs.f32 	%f395, %f387;
	abs.f32 	%f396, %f390;
	max.f32 	%f397, %f395, %f396;
	abs.f32 	%f398, %f388;
	abs.f32 	%f399, %f391;
	max.f32 	%f400, %f398, %f399;
	max.f32 	%f401, %f394, %f397;
	max.f32 	%f402, %f401, %f400;
	setp.neu.f32	%p23, %f386, 0f00000000;
	setp.neu.f32	%p24, %f387, 0f00000000;
	or.pred  	%p25, %p23, %p24;
	setp.neu.f32	%p26, %f388, 0f00000000;
	setp.neu.f32	%p27, %f389, 0f00000000;
	setp.neu.f32	%p28, %f390, 0f00000000;
	or.pred  	%p29, %p27, %p28;
	setp.neu.f32	%p30, %f391, 0f00000000;
	or.pred  	%p31, %p29, %p30;
	or.pred  	%p32, %p25, %p26;
	and.pred  	%p33, %p32, %p31;
	selp.f32	%f20, %f402, 0f00000000, %p33;
	abs.f32 	%f403, %f7;
	abs.f32 	%f404, %f9;
	setp.gt.f32	%p34, %f403, %f404;
	neg.f32 	%f405, %f8;
	neg.f32 	%f406, %f9;
	selp.f32	%f407, %f405, 0f00000000, %p34;
	selp.f32	%f408, %f7, %f406, %p34;
	selp.f32	%f409, 0f00000000, %f8, %p34;
	mul.f32 	%f410, %f408, %f408;
	fma.rn.f32 	%f411, %f407, %f407, %f410;
	fma.rn.f32 	%f412, %f409, %f409, %f411;
	sqrt.rn.f32 	%f413, %f412;
	rcp.rn.f32 	%f414, %f413;
	mul.f32 	%f21, %f407, %f414;
	mul.f32 	%f22, %f408, %f414;
	mul.f32 	%f23, %f409, %f414;
	ld.global.v2.u32 	{%r148, %r149}, [pixelID];
	cvt.u64.u32	%rd54, %r148;
	cvt.u64.u32	%rd55, %r149;
	mov.u64 	%rd59, rnd_seeds;
	cvta.global.u64 	%rd53, %rd59;
	// inline asm
	call (%rd52), _rt_buffer_get_64, (%rd53, %r105, %r106, %rd54, %rd55, %rd32, %rd32);
	// inline asm
	ld.global.u32 	%r464, [samples];
	mov.f32 	%f1419, 0f00000000;
	setp.lt.s32	%p35, %r464, 1;
	@%p35 bra 	BB0_4;

	cvt.rn.f32.s32	%f417, %r464;
	rcp.rn.f32 	%f24, %f417;
	ld.u32 	%r490, [%rd52];
	mul.f32 	%f25, %f11, 0f3456BF95;
	mul.f32 	%f26, %f12, 0f3456BF95;
	mul.f32 	%f27, %f13, 0f3456BF95;
	mul.f32 	%f418, %f17, 0f3E24A490;
	mul.f32 	%f419, %f18, 0f3E24A490;
	mul.f32 	%f420, %f19, 0f3E24A490;
	fma.rn.f32 	%f421, %f20, %f418, %f11;
	fma.rn.f32 	%f422, %f20, %f419, %f12;
	fma.rn.f32 	%f423, %f20, %f420, %f13;
	mul.f32 	%f424, %f14, 0fBECECEDE;
	mul.f32 	%f425, %f15, 0fBECECEDE;
	mul.f32 	%f426, %f16, 0fBECECEDE;
	fma.rn.f32 	%f28, %f20, %f424, %f421;
	fma.rn.f32 	%f29, %f20, %f425, %f422;
	fma.rn.f32 	%f30, %f20, %f426, %f423;
	sub.f32 	%f31, %f28, %f11;
	sub.f32 	%f32, %f29, %f12;
	sub.f32 	%f33, %f30, %f13;
	mul.f32 	%f427, %f32, %f32;
	fma.rn.f32 	%f428, %f31, %f31, %f427;
	fma.rn.f32 	%f34, %f33, %f33, %f428;
	mul.f32 	%f429, %f17, 0fBE24A490;
	mul.f32 	%f430, %f18, 0fBE24A490;
	mul.f32 	%f431, %f19, 0fBE24A490;
	fma.rn.f32 	%f432, %f20, %f429, %f11;
	fma.rn.f32 	%f433, %f20, %f430, %f12;
	fma.rn.f32 	%f434, %f20, %f431, %f13;
	mul.f32 	%f435, %f14, 0f3ECACABC;
	mul.f32 	%f436, %f15, 0f3ECACABC;
	mul.f32 	%f437, %f16, 0f3ECACABC;
	fma.rn.f32 	%f35, %f20, %f435, %f432;
	fma.rn.f32 	%f36, %f20, %f436, %f433;
	fma.rn.f32 	%f37, %f20, %f437, %f434;
	sub.f32 	%f38, %f35, %f11;
	sub.f32 	%f39, %f36, %f12;
	sub.f32 	%f40, %f37, %f13;
	mul.f32 	%f438, %f39, %f39;
	fma.rn.f32 	%f439, %f38, %f38, %f438;
	fma.rn.f32 	%f41, %f40, %f40, %f439;
	mul.f32 	%f440, %f17, 0f3F23A3A8;
	mul.f32 	%f441, %f18, 0f3F23A3A8;
	mul.f32 	%f442, %f19, 0f3F23A3A8;
	fma.rn.f32 	%f443, %f20, %f440, %f11;
	fma.rn.f32 	%f444, %f20, %f441, %f12;
	fma.rn.f32 	%f445, %f20, %f442, %f13;
	mul.f32 	%f446, %f14, 0f3E24A490;
	mul.f32 	%f447, %f15, 0f3E24A490;
	mul.f32 	%f448, %f16, 0f3E24A490;
	fma.rn.f32 	%f42, %f20, %f446, %f443;
	fma.rn.f32 	%f43, %f20, %f447, %f444;
	fma.rn.f32 	%f44, %f20, %f448, %f445;
	sub.f32 	%f45, %f42, %f11;
	sub.f32 	%f46, %f43, %f12;
	sub.f32 	%f47, %f44, %f13;
	mul.f32 	%f449, %f46, %f46;
	fma.rn.f32 	%f450, %f45, %f45, %f449;
	fma.rn.f32 	%f48, %f47, %f47, %f450;
	mul.f32 	%f451, %f17, 0fBECECEDE;
	mul.f32 	%f452, %f18, 0fBECECEDE;
	mul.f32 	%f453, %f19, 0fBECECEDE;
	fma.rn.f32 	%f454, %f20, %f451, %f11;
	fma.rn.f32 	%f455, %f20, %f452, %f12;
	fma.rn.f32 	%f456, %f20, %f453, %f13;
	mul.f32 	%f457, %f14, 0fBF23A3A9;
	mul.f32 	%f458, %f15, 0fBF23A3A9;
	mul.f32 	%f459, %f16, 0fBF23A3A9;
	fma.rn.f32 	%f49, %f20, %f457, %f454;
	fma.rn.f32 	%f50, %f20, %f458, %f455;
	fma.rn.f32 	%f51, %f20, %f459, %f456;
	sub.f32 	%f52, %f49, %f11;
	sub.f32 	%f53, %f50, %f12;
	sub.f32 	%f54, %f51, %f13;
	mul.f32 	%f460, %f53, %f53;
	fma.rn.f32 	%f461, %f52, %f52, %f460;
	fma.rn.f32 	%f55, %f54, %f54, %f461;
	mul.f32 	%f462, %f17, 0fBF23A3A9;
	mul.f32 	%f463, %f18, 0fBF23A3A9;
	mul.f32 	%f464, %f19, 0fBF23A3A9;
	fma.rn.f32 	%f465, %f20, %f462, %f11;
	fma.rn.f32 	%f466, %f20, %f463, %f12;
	fma.rn.f32 	%f467, %f20, %f464, %f13;
	mul.f32 	%f468, %f14, 0f3F23A3A8;
	mul.f32 	%f469, %f15, 0f3F23A3A8;
	mul.f32 	%f470, %f16, 0f3F23A3A8;
	fma.rn.f32 	%f56, %f20, %f468, %f465;
	fma.rn.f32 	%f57, %f20, %f469, %f466;
	fma.rn.f32 	%f58, %f20, %f470, %f467;
	sub.f32 	%f59, %f56, %f11;
	sub.f32 	%f60, %f57, %f12;
	sub.f32 	%f61, %f58, %f13;
	mul.f32 	%f471, %f60, %f60;
	fma.rn.f32 	%f472, %f59, %f59, %f471;
	fma.rn.f32 	%f62, %f61, %f61, %f472;
	mul.f32 	%f473, %f17, 0fBF61E1E3;
	mul.f32 	%f474, %f18, 0fBF61E1E3;
	mul.f32 	%f475, %f19, 0fBF61E1E3;
	fma.rn.f32 	%f476, %f20, %f473, %f11;
	fma.rn.f32 	%f477, %f20, %f474, %f12;
	fma.rn.f32 	%f478, %f20, %f475, %f13;
	mul.f32 	%f479, %f14, 0fBE24A490;
	mul.f32 	%f480, %f15, 0fBE24A490;
	mul.f32 	%f481, %f16, 0fBE24A490;
	fma.rn.f32 	%f63, %f20, %f479, %f476;
	fma.rn.f32 	%f64, %f20, %f480, %f477;
	fma.rn.f32 	%f65, %f20, %f481, %f478;
	sub.f32 	%f66, %f63, %f11;
	sub.f32 	%f67, %f64, %f12;
	sub.f32 	%f68, %f65, %f13;
	mul.f32 	%f482, %f67, %f67;
	fma.rn.f32 	%f483, %f66, %f66, %f482;
	fma.rn.f32 	%f69, %f68, %f68, %f483;
	mul.f32 	%f484, %f17, 0f3ECACABC;
	mul.f32 	%f485, %f18, 0f3ECACABC;
	mul.f32 	%f486, %f19, 0f3ECACABC;
	fma.rn.f32 	%f487, %f20, %f484, %f11;
	fma.rn.f32 	%f488, %f20, %f485, %f12;
	fma.rn.f32 	%f489, %f20, %f486, %f13;
	mul.f32 	%f490, %f14, 0f3F61E1D2;
	mul.f32 	%f491, %f15, 0f3F61E1D2;
	mul.f32 	%f492, %f16, 0f3F61E1D2;
	fma.rn.f32 	%f70, %f20, %f490, %f487;
	fma.rn.f32 	%f71, %f20, %f491, %f488;
	fma.rn.f32 	%f72, %f20, %f492, %f489;
	sub.f32 	%f73, %f70, %f11;
	sub.f32 	%f74, %f71, %f12;
	sub.f32 	%f75, %f72, %f13;
	mul.f32 	%f493, %f74, %f74;
	fma.rn.f32 	%f494, %f73, %f73, %f493;
	fma.rn.f32 	%f76, %f75, %f75, %f494;
	mul.f32 	%f495, %f17, 0f3F61E1D2;
	mul.f32 	%f496, %f18, 0f3F61E1D2;
	mul.f32 	%f497, %f19, 0f3F61E1D2;
	fma.rn.f32 	%f498, %f20, %f495, %f11;
	fma.rn.f32 	%f499, %f20, %f496, %f12;
	fma.rn.f32 	%f500, %f20, %f497, %f13;
	mul.f32 	%f501, %f14, 0fBF61E1E3;
	mul.f32 	%f502, %f15, 0fBF61E1E3;
	mul.f32 	%f503, %f16, 0fBF61E1E3;
	fma.rn.f32 	%f77, %f20, %f501, %f498;
	fma.rn.f32 	%f78, %f20, %f502, %f499;
	fma.rn.f32 	%f79, %f20, %f503, %f500;
	sub.f32 	%f80, %f77, %f11;
	sub.f32 	%f81, %f78, %f12;
	sub.f32 	%f82, %f79, %f13;
	mul.f32 	%f504, %f81, %f81;
	fma.rn.f32 	%f505, %f80, %f80, %f504;
	fma.rn.f32 	%f83, %f82, %f82, %f505;
	mul.f32 	%f506, %f7, %f22;
	mul.f32 	%f507, %f8, %f21;
	sub.f32 	%f84, %f507, %f506;
	mul.f32 	%f508, %f9, %f21;
	mul.f32 	%f509, %f7, %f23;
	sub.f32 	%f85, %f509, %f508;
	mul.f32 	%f510, %f8, %f23;
	mul.f32 	%f511, %f9, %f22;
	sub.f32 	%f86, %f511, %f510;
	mov.f32 	%f1419, 0f00000000;
	mov.u32 	%r465, 0;
	abs.f32 	%f512, %f26;
	abs.f32 	%f513, %f25;
	max.f32 	%f514, %f513, %f512;
	abs.f32 	%f515, %f27;
	max.f32 	%f516, %f514, %f515;
	sqrt.rn.f32 	%f91, %f34;
	sqrt.rn.f32 	%f95, %f41;
	sqrt.rn.f32 	%f99, %f48;
	sqrt.rn.f32 	%f103, %f55;
	sqrt.rn.f32 	%f107, %f62;
	sqrt.rn.f32 	%f111, %f69;
	sqrt.rn.f32 	%f115, %f76;
	sqrt.rn.f32 	%f119, %f83;
	mov.f32 	%f1420, %f1419;

BB0_6:
	setp.lt.s32	%p36, %r464, 1;
	@%p36 bra 	BB0_71;

	rcp.rn.f32 	%f518, %f91;
	mul.f32 	%f92, %f518, %f31;
	mul.f32 	%f93, %f518, %f32;
	mul.f32 	%f94, %f518, %f33;
	rcp.rn.f32 	%f519, %f95;
	mul.f32 	%f96, %f519, %f38;
	mul.f32 	%f97, %f519, %f39;
	mul.f32 	%f98, %f519, %f40;
	rcp.rn.f32 	%f520, %f99;
	mul.f32 	%f100, %f520, %f45;
	mul.f32 	%f101, %f520, %f46;
	mul.f32 	%f102, %f520, %f47;
	rcp.rn.f32 	%f521, %f103;
	mul.f32 	%f104, %f521, %f52;
	mul.f32 	%f105, %f521, %f53;
	mul.f32 	%f106, %f521, %f54;
	rcp.rn.f32 	%f522, %f107;
	mul.f32 	%f108, %f522, %f59;
	mul.f32 	%f109, %f522, %f60;
	mul.f32 	%f110, %f522, %f61;
	rcp.rn.f32 	%f523, %f111;
	mul.f32 	%f112, %f523, %f66;
	mul.f32 	%f113, %f523, %f67;
	mul.f32 	%f114, %f523, %f68;
	rcp.rn.f32 	%f524, %f115;
	mul.f32 	%f116, %f524, %f73;
	mul.f32 	%f117, %f524, %f74;
	mul.f32 	%f118, %f524, %f75;
	rcp.rn.f32 	%f525, %f119;
	mul.f32 	%f120, %f525, %f80;
	mul.f32 	%f121, %f525, %f81;
	mul.f32 	%f122, %f525, %f82;
	mov.u32 	%r467, 0;

BB0_8:
	cvt.rn.f32.s32	%f1408, %r465;
	mad.lo.s32 	%r154, %r490, 1664525, 1013904223;
	and.b32  	%r155, %r154, 16777215;
	cvt.rn.f32.u32	%f526, %r155;
	fma.rn.f32 	%f527, %f526, 0f33800000, %f1408;
	mul.f32 	%f528, %f24, %f527;
	mad.lo.s32 	%r11, %r154, 1664525, 1013904223;
	and.b32  	%r156, %r11, 16777215;
	cvt.rn.f32.u32	%f529, %r156;
	cvt.rn.f32.s32	%f530, %r467;
	fma.rn.f32 	%f531, %f529, 0f33800000, %f530;
	mul.f32 	%f532, %f24, %f531;
	sqrt.rn.f32 	%f125, %f528;
	mul.f32 	%f1427, %f532, 0f40C90FDB;
	abs.f32 	%f127, %f1427;
	setp.neu.f32	%p37, %f127, 0f7F800000;
	mov.f32 	%f1421, %f1427;
	@%p37 bra 	BB0_10;

	mov.f32 	%f533, 0f00000000;
	mul.rn.f32 	%f1421, %f1427, %f533;

BB0_10:
	mul.f32 	%f534, %f1421, 0f3F22F983;
	cvt.rni.s32.f32	%r478, %f534;
	cvt.rn.f32.s32	%f535, %r478;
	neg.f32 	%f536, %f535;
	mov.f32 	%f537, 0f3FC90FDA;
	fma.rn.f32 	%f538, %f536, %f537, %f1421;
	mov.f32 	%f539, 0f33A22168;
	fma.rn.f32 	%f540, %f536, %f539, %f538;
	mov.f32 	%f541, 0f27C234C5;
	fma.rn.f32 	%f1422, %f536, %f541, %f540;
	abs.f32 	%f542, %f1421;
	setp.leu.f32	%p38, %f542, 0f47CE4780;
	@%p38 bra 	BB0_21;

	add.u64 	%rd61, %SP, 4;
	cvta.to.local.u64 	%rd308, %rd61;
	mov.b32 	 %r13, %f1421;
	shl.b32 	%r159, %r13, 8;
	or.b32  	%r15, %r159, -2147483648;
	mov.u32 	%r469, 0;
	mov.u64 	%rd309, 0;
	mov.u32 	%r470, %r469;

BB0_12:
	.pragma "nounroll";
	add.u64 	%rd306, %SP, 4;
	cvta.to.local.u64 	%rd305, %rd306;
	shl.b64 	%rd62, %rd309, 2;
	mov.u64 	%rd63, __cudart_i2opi_f;
	add.s64 	%rd64, %rd63, %rd62;
	ld.const.u32 	%r162, [%rd64];
	// inline asm
	{
	mad.lo.cc.u32   %r160, %r162, %r15, %r470;
	madc.hi.u32     %r470, %r162, %r15,  0;
	}
	// inline asm
	st.local.u32 	[%rd308], %r160;
	add.s32 	%r469, %r469, 1;
	cvt.s64.s32	%rd309, %r469;
	mul.wide.s32 	%rd67, %r469, 4;
	add.s64 	%rd308, %rd305, %rd67;
	setp.ne.s32	%p39, %r469, 6;
	@%p39 bra 	BB0_12;

	mov.b32 	 %r456, %f1421;
	shr.u32 	%r455, %r456, 23;
	add.u64 	%rd307, %SP, 4;
	and.b32  	%r165, %r455, 255;
	add.s32 	%r166, %r165, -128;
	shr.u32 	%r167, %r166, 5;
	cvta.to.local.u64 	%rd69, %rd307;
	st.local.u32 	[%rd69+24], %r470;
	mov.u32 	%r168, 6;
	sub.s32 	%r169, %r168, %r167;
	mul.wide.s32 	%rd70, %r169, 4;
	add.s64 	%rd8, %rd69, %rd70;
	ld.local.u32 	%r471, [%rd8];
	ld.local.u32 	%r472, [%rd8+-4];
	and.b32  	%r23, %r455, 31;
	setp.eq.s32	%p40, %r23, 0;
	@%p40 bra 	BB0_15;

	mov.u32 	%r170, 32;
	sub.s32 	%r171, %r170, %r23;
	shr.u32 	%r172, %r472, %r171;
	shl.b32 	%r173, %r471, %r23;
	add.s32 	%r471, %r172, %r173;
	ld.local.u32 	%r174, [%rd8+-8];
	shr.u32 	%r175, %r174, %r171;
	shl.b32 	%r176, %r472, %r23;
	add.s32 	%r472, %r175, %r176;

BB0_15:
	mov.b32 	 %r459, %f1421;
	and.b32  	%r474, %r459, -2147483648;
	shr.u32 	%r177, %r472, 30;
	shl.b32 	%r178, %r471, 2;
	add.s32 	%r473, %r177, %r178;
	shl.b32 	%r29, %r472, 2;
	shr.u32 	%r179, %r473, 31;
	shr.u32 	%r180, %r471, 30;
	add.s32 	%r30, %r179, %r180;
	setp.eq.s32	%p41, %r179, 0;
	@%p41 bra 	BB0_16;
	bra.uni 	BB0_17;

BB0_16:
	mov.u32 	%r475, %r29;
	bra.uni 	BB0_18;

BB0_17:
	mov.b32 	 %r461, %f1421;
	and.b32  	%r460, %r461, -2147483648;
	not.b32 	%r181, %r473;
	neg.s32 	%r475, %r29;
	setp.eq.s32	%p42, %r29, 0;
	selp.u32	%r182, 1, 0, %p42;
	add.s32 	%r473, %r182, %r181;
	xor.b32  	%r474, %r460, -2147483648;

BB0_18:
	mov.b32 	 %r463, %f1421;
	and.b32  	%r462, %r463, -2147483648;
	clz.b32 	%r477, %r473;
	setp.eq.s32	%p43, %r477, 0;
	shl.b32 	%r183, %r473, %r477;
	mov.u32 	%r184, 32;
	sub.s32 	%r185, %r184, %r477;
	shr.u32 	%r186, %r475, %r185;
	add.s32 	%r187, %r186, %r183;
	selp.b32	%r38, %r473, %r187, %p43;
	mov.u32 	%r188, -921707870;
	mul.hi.u32 	%r476, %r38, %r188;
	setp.eq.s32	%p44, %r462, 0;
	neg.s32 	%r189, %r30;
	selp.b32	%r478, %r30, %r189, %p44;
	setp.lt.s32	%p45, %r476, 1;
	@%p45 bra 	BB0_20;

	mul.lo.s32 	%r190, %r38, -921707870;
	shr.u32 	%r191, %r190, 31;
	shl.b32 	%r192, %r476, 1;
	add.s32 	%r476, %r191, %r192;
	add.s32 	%r477, %r477, 1;

BB0_20:
	mov.u32 	%r193, 126;
	sub.s32 	%r194, %r193, %r477;
	shl.b32 	%r195, %r194, 23;
	add.s32 	%r196, %r476, 1;
	shr.u32 	%r197, %r196, 7;
	add.s32 	%r198, %r197, 1;
	shr.u32 	%r199, %r198, 1;
	add.s32 	%r200, %r199, %r195;
	or.b32  	%r201, %r200, %r474;
	mov.b32 	 %f1422, %r201;

BB0_21:
	mul.rn.f32 	%f133, %f1422, %f1422;
	add.s32 	%r46, %r478, 1;
	and.b32  	%r47, %r46, 1;
	setp.eq.s32	%p46, %r47, 0;
	@%p46 bra 	BB0_23;
	bra.uni 	BB0_22;

BB0_23:
	mov.f32 	%f545, 0f3C08839E;
	mov.f32 	%f546, 0fB94CA1F9;
	fma.rn.f32 	%f1423, %f546, %f133, %f545;
	bra.uni 	BB0_24;

BB0_22:
	mov.f32 	%f543, 0fBAB6061A;
	mov.f32 	%f544, 0f37CCF5CE;
	fma.rn.f32 	%f1423, %f544, %f133, %f543;

BB0_24:
	@%p46 bra 	BB0_26;
	bra.uni 	BB0_25;

BB0_26:
	mov.f32 	%f550, 0fBE2AAAA3;
	fma.rn.f32 	%f551, %f1423, %f133, %f550;
	mov.f32 	%f552, 0f00000000;
	fma.rn.f32 	%f1424, %f551, %f133, %f552;
	bra.uni 	BB0_27;

BB0_25:
	mov.f32 	%f547, 0f3D2AAAA5;
	fma.rn.f32 	%f548, %f1423, %f133, %f547;
	mov.f32 	%f549, 0fBF000000;
	fma.rn.f32 	%f1424, %f548, %f133, %f549;

BB0_27:
	fma.rn.f32 	%f1425, %f1424, %f1422, %f1422;
	@%p46 bra 	BB0_29;

	mov.f32 	%f553, 0f3F800000;
	fma.rn.f32 	%f1425, %f1424, %f133, %f553;

BB0_29:
	and.b32  	%r202, %r46, 2;
	setp.eq.s32	%p49, %r202, 0;
	@%p49 bra 	BB0_31;

	mov.f32 	%f554, 0f00000000;
	mov.f32 	%f555, 0fBF800000;
	fma.rn.f32 	%f1425, %f1425, %f555, %f554;

BB0_31:
	abs.f32 	%f1410, %f1427;
	setp.neu.f32	%p178, %f1410, 0f7F800000;
	@%p178 bra 	BB0_33;

	mov.f32 	%f556, 0f00000000;
	mul.rn.f32 	%f1427, %f1427, %f556;

BB0_33:
	mov.f32 	%f1413, 0f27C234C5;
	mov.f32 	%f1412, 0f33A22168;
	mov.f32 	%f1411, 0f3FC90FDA;
	mul.f32 	%f557, %f1427, 0f3F22F983;
	cvt.rni.s32.f32	%r488, %f557;
	cvt.rn.f32.s32	%f558, %r488;
	neg.f32 	%f559, %f558;
	fma.rn.f32 	%f561, %f559, %f1411, %f1427;
	fma.rn.f32 	%f563, %f559, %f1412, %f561;
	fma.rn.f32 	%f1428, %f559, %f1413, %f563;
	abs.f32 	%f565, %f1427;
	setp.leu.f32	%p51, %f565, 0f47CE4780;
	@%p51 bra 	BB0_44;

	add.u64 	%rd72, %SP, 4;
	cvta.to.local.u64 	%rd9, %rd72;
	mov.b32 	 %r49, %f1427;
	shr.u32 	%r50, %r49, 23;
	shl.b32 	%r205, %r49, 8;
	or.b32  	%r51, %r205, -2147483648;
	mov.u32 	%r479, 0;
	mov.u64 	%rd310, %rd9;
	mov.u64 	%rd311, %rd32;
	mov.u32 	%r480, %r479;

BB0_35:
	.pragma "nounroll";
	shl.b64 	%rd73, %rd311, 2;
	mov.u64 	%rd74, __cudart_i2opi_f;
	add.s64 	%rd75, %rd74, %rd73;
	ld.const.u32 	%r208, [%rd75];
	// inline asm
	{
	mad.lo.cc.u32   %r206, %r208, %r51, %r480;
	madc.hi.u32     %r480, %r208, %r51,  0;
	}
	// inline asm
	st.local.u32 	[%rd310], %r206;
	add.s32 	%r479, %r479, 1;
	cvt.s64.s32	%rd311, %r479;
	mul.wide.s32 	%rd76, %r479, 4;
	add.s64 	%rd310, %rd9, %rd76;
	setp.ne.s32	%p52, %r479, 6;
	@%p52 bra 	BB0_35;

	and.b32  	%r211, %r50, 255;
	add.s32 	%r212, %r211, -128;
	shr.u32 	%r213, %r212, 5;
	and.b32  	%r56, %r49, -2147483648;
	cvta.to.local.u64 	%rd78, %rd72;
	st.local.u32 	[%rd78+24], %r480;
	mov.u32 	%r214, 6;
	sub.s32 	%r215, %r214, %r213;
	mul.wide.s32 	%rd79, %r215, 4;
	add.s64 	%rd15, %rd78, %rd79;
	ld.local.u32 	%r481, [%rd15];
	ld.local.u32 	%r482, [%rd15+-4];
	and.b32  	%r59, %r50, 31;
	setp.eq.s32	%p53, %r59, 0;
	@%p53 bra 	BB0_38;

	mov.u32 	%r216, 32;
	sub.s32 	%r217, %r216, %r59;
	shr.u32 	%r218, %r482, %r217;
	shl.b32 	%r219, %r481, %r59;
	add.s32 	%r481, %r218, %r219;
	ld.local.u32 	%r220, [%rd15+-8];
	shr.u32 	%r221, %r220, %r217;
	shl.b32 	%r222, %r482, %r59;
	add.s32 	%r482, %r221, %r222;

BB0_38:
	shr.u32 	%r223, %r482, 30;
	shl.b32 	%r224, %r481, 2;
	add.s32 	%r483, %r223, %r224;
	shl.b32 	%r65, %r482, 2;
	shr.u32 	%r225, %r483, 31;
	shr.u32 	%r226, %r481, 30;
	add.s32 	%r66, %r225, %r226;
	setp.eq.s32	%p54, %r225, 0;
	@%p54 bra 	BB0_39;
	bra.uni 	BB0_40;

BB0_39:
	mov.u32 	%r484, %r56;
	mov.u32 	%r485, %r65;
	bra.uni 	BB0_41;

BB0_40:
	not.b32 	%r227, %r483;
	neg.s32 	%r485, %r65;
	setp.eq.s32	%p55, %r65, 0;
	selp.u32	%r228, 1, 0, %p55;
	add.s32 	%r483, %r228, %r227;
	xor.b32  	%r484, %r56, -2147483648;

BB0_41:
	clz.b32 	%r487, %r483;
	setp.eq.s32	%p56, %r487, 0;
	shl.b32 	%r229, %r483, %r487;
	mov.u32 	%r230, 32;
	sub.s32 	%r231, %r230, %r487;
	shr.u32 	%r232, %r485, %r231;
	add.s32 	%r233, %r232, %r229;
	selp.b32	%r74, %r483, %r233, %p56;
	mov.u32 	%r234, -921707870;
	mul.hi.u32 	%r486, %r74, %r234;
	setp.eq.s32	%p57, %r56, 0;
	neg.s32 	%r235, %r66;
	selp.b32	%r488, %r66, %r235, %p57;
	setp.lt.s32	%p58, %r486, 1;
	@%p58 bra 	BB0_43;

	mul.lo.s32 	%r236, %r74, -921707870;
	shr.u32 	%r237, %r236, 31;
	shl.b32 	%r238, %r486, 1;
	add.s32 	%r486, %r237, %r238;
	add.s32 	%r487, %r487, 1;

BB0_43:
	mov.u32 	%r239, 126;
	sub.s32 	%r240, %r239, %r487;
	shl.b32 	%r241, %r240, 23;
	add.s32 	%r242, %r486, 1;
	shr.u32 	%r243, %r242, 7;
	add.s32 	%r244, %r243, 1;
	shr.u32 	%r245, %r244, 1;
	add.s32 	%r246, %r245, %r241;
	or.b32  	%r247, %r246, %r484;
	mov.b32 	 %f1428, %r247;

BB0_44:
	mul.rn.f32 	%f150, %f1428, %f1428;
	and.b32  	%r82, %r488, 1;
	setp.eq.s32	%p59, %r82, 0;
	@%p59 bra 	BB0_46;
	bra.uni 	BB0_45;

BB0_46:
	mov.f32 	%f568, 0f3C08839E;
	mov.f32 	%f569, 0fB94CA1F9;
	fma.rn.f32 	%f1429, %f569, %f150, %f568;
	bra.uni 	BB0_47;

BB0_45:
	mov.f32 	%f566, 0fBAB6061A;
	mov.f32 	%f567, 0f37CCF5CE;
	fma.rn.f32 	%f1429, %f567, %f150, %f566;

BB0_47:
	@%p59 bra 	BB0_49;
	bra.uni 	BB0_48;

BB0_49:
	mov.f32 	%f573, 0fBE2AAAA3;
	fma.rn.f32 	%f574, %f1429, %f150, %f573;
	mov.f32 	%f575, 0f00000000;
	fma.rn.f32 	%f1430, %f574, %f150, %f575;
	bra.uni 	BB0_50;

BB0_48:
	mov.f32 	%f570, 0f3D2AAAA5;
	fma.rn.f32 	%f571, %f1429, %f150, %f570;
	mov.f32 	%f572, 0fBF000000;
	fma.rn.f32 	%f1430, %f571, %f150, %f572;

BB0_50:
	fma.rn.f32 	%f1431, %f1430, %f1428, %f1428;
	@%p59 bra 	BB0_52;

	mov.f32 	%f576, 0f3F800000;
	fma.rn.f32 	%f1431, %f1430, %f150, %f576;

BB0_52:
	and.b32  	%r248, %r488, 2;
	setp.eq.s32	%p62, %r248, 0;
	@%p62 bra 	BB0_54;

	mov.f32 	%f577, 0f00000000;
	mov.f32 	%f578, 0fBF800000;
	fma.rn.f32 	%f1431, %f1431, %f578, %f577;

BB0_54:
	max.f32 	%f1409, %f516, %f354;
	mul.f32 	%f587, %f125, %f1425;
	add.u64 	%rd80, %SP, 0;
	cvta.to.local.u64 	%rd16, %rd80;
	mul.f32 	%f588, %f587, %f587;
	mov.f32 	%f589, 0f3F800000;
	sub.f32 	%f590, %f589, %f588;
	mul.f32 	%f591, %f125, %f1431;
	mul.f32 	%f592, %f591, %f591;
	sub.f32 	%f593, %f590, %f592;
	mov.f32 	%f594, 0f00000000;
	max.f32 	%f595, %f594, %f593;
	sqrt.rn.f32 	%f596, %f595;
	mul.f32 	%f597, %f21, %f591;
	mul.f32 	%f598, %f22, %f591;
	mul.f32 	%f599, %f23, %f591;
	fma.rn.f32 	%f600, %f86, %f587, %f597;
	fma.rn.f32 	%f601, %f85, %f587, %f598;
	fma.rn.f32 	%f602, %f84, %f587, %f599;
	fma.rn.f32 	%f603, %f7, %f596, %f600;
	fma.rn.f32 	%f604, %f8, %f596, %f601;
	fma.rn.f32 	%f605, %f9, %f596, %f602;
	add.f32 	%f606, %f7, %f603;
	add.f32 	%f607, %f8, %f604;
	add.f32 	%f608, %f9, %f605;
	ld.global.f32 	%f609, [shadowSpread];
	mul.f32 	%f610, %f609, %f606;
	mul.f32 	%f611, %f609, %f607;
	mul.f32 	%f612, %f609, %f608;
	sub.f32 	%f613, %f610, %f7;
	sub.f32 	%f614, %f611, %f8;
	sub.f32 	%f615, %f612, %f9;
	mul.f32 	%f616, %f614, %f614;
	fma.rn.f32 	%f617, %f613, %f613, %f616;
	fma.rn.f32 	%f618, %f615, %f615, %f617;
	sqrt.rn.f32 	%f619, %f618;
	rcp.rn.f32 	%f620, %f619;
	mul.f32 	%f162, %f620, %f613;
	mul.f32 	%f163, %f620, %f614;
	mul.f32 	%f164, %f620, %f615;
	ld.global.u32 	%r252, [imageEnabled];
	and.b32  	%r253, %r252, 32;
	setp.eq.s32	%p63, %r253, 0;
	selp.f32	%f621, 0f3F800000, 0f41200000, %p63;
	mul.f32 	%f585, %f621, %f1409;
	mov.u32 	%r254, 1065353216;
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r249, [root];
	mov.u32 	%r250, 1;
	// inline asm
	call _rt_trace_64, (%r249, %f11, %f12, %f13, %f92, %f93, %f94, %r250, %f585, %f91, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f622, [%rd16];
	setp.neu.f32	%p64, %f622, 0f3F800000;
	@%p64 bra 	BB0_56;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r255, [root];
	mov.f32 	%f630, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r255, %f28, %f29, %f30, %f162, %f163, %f164, %r250, %f585, %f630, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f631, [%rd16];
	add.f32 	%f1420, %f1420, %f631;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_56:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r259, [root];
	// inline asm
	call _rt_trace_64, (%r259, %f11, %f12, %f13, %f96, %f97, %f98, %r250, %f585, %f95, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f640, [%rd16];
	setp.neu.f32	%p65, %f640, 0f3F800000;
	@%p65 bra 	BB0_58;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r263, [root];
	mov.f32 	%f648, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r263, %f35, %f36, %f37, %f162, %f163, %f164, %r250, %f585, %f648, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f649, [%rd16];
	add.f32 	%f1420, %f1420, %f649;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_58:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r267, [root];
	// inline asm
	call _rt_trace_64, (%r267, %f11, %f12, %f13, %f100, %f101, %f102, %r250, %f585, %f99, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f658, [%rd16];
	setp.neu.f32	%p66, %f658, 0f3F800000;
	@%p66 bra 	BB0_60;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r271, [root];
	mov.f32 	%f666, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r271, %f42, %f43, %f44, %f162, %f163, %f164, %r250, %f585, %f666, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f667, [%rd16];
	add.f32 	%f1420, %f1420, %f667;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_60:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r275, [root];
	// inline asm
	call _rt_trace_64, (%r275, %f11, %f12, %f13, %f104, %f105, %f106, %r250, %f585, %f103, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f676, [%rd16];
	setp.neu.f32	%p67, %f676, 0f3F800000;
	@%p67 bra 	BB0_62;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r279, [root];
	mov.f32 	%f684, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r279, %f49, %f50, %f51, %f162, %f163, %f164, %r250, %f585, %f684, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f685, [%rd16];
	add.f32 	%f1420, %f1420, %f685;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_62:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r283, [root];
	// inline asm
	call _rt_trace_64, (%r283, %f11, %f12, %f13, %f108, %f109, %f110, %r250, %f585, %f107, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f694, [%rd16];
	setp.neu.f32	%p68, %f694, 0f3F800000;
	@%p68 bra 	BB0_64;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r287, [root];
	mov.f32 	%f702, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r287, %f56, %f57, %f58, %f162, %f163, %f164, %r250, %f585, %f702, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f703, [%rd16];
	add.f32 	%f1420, %f1420, %f703;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_64:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r291, [root];
	// inline asm
	call _rt_trace_64, (%r291, %f11, %f12, %f13, %f112, %f113, %f114, %r250, %f585, %f111, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f712, [%rd16];
	setp.neu.f32	%p69, %f712, 0f3F800000;
	@%p69 bra 	BB0_66;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r295, [root];
	mov.f32 	%f720, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r295, %f63, %f64, %f65, %f162, %f163, %f164, %r250, %f585, %f720, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f721, [%rd16];
	add.f32 	%f1420, %f1420, %f721;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_66:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r299, [root];
	// inline asm
	call _rt_trace_64, (%r299, %f11, %f12, %f13, %f116, %f117, %f118, %r250, %f585, %f115, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f730, [%rd16];
	setp.neu.f32	%p70, %f730, 0f3F800000;
	@%p70 bra 	BB0_68;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r303, [root];
	mov.f32 	%f738, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r303, %f70, %f71, %f72, %f162, %f163, %f164, %r250, %f585, %f738, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f739, [%rd16];
	add.f32 	%f1420, %f1420, %f739;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_68:
	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r307, [root];
	// inline asm
	call _rt_trace_64, (%r307, %f11, %f12, %f13, %f120, %f121, %f122, %r250, %f585, %f119, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f748, [%rd16];
	setp.neu.f32	%p71, %f748, 0f3F800000;
	@%p71 bra 	BB0_70;

	st.local.u32 	[%rd16], %r254;
	ld.global.u32 	%r311, [root];
	mov.f32 	%f756, 0f6C4ECB8F;
	// inline asm
	call _rt_trace_64, (%r311, %f77, %f78, %f79, %f162, %f163, %f164, %r250, %f585, %f756, %rd80, %r106);
	// inline asm
	ld.local.f32 	%f757, [%rd16];
	add.f32 	%f1420, %f1420, %f757;
	add.f32 	%f1419, %f1419, 0f3F800000;

BB0_70:
	mad.lo.s32 	%r454, %r490, 1664525, 1013904223;
	mad.lo.s32 	%r490, %r454, 1664525, 1013904223;
	ld.global.u32 	%r464, [samples];
	add.s32 	%r467, %r467, 1;
	setp.lt.s32	%p72, %r467, %r464;
	@%p72 bra 	BB0_8;

BB0_71:
	add.s32 	%r465, %r465, 1;
	setp.lt.s32	%p73, %r465, %r464;
	@%p73 bra 	BB0_6;
	bra.uni 	BB0_72;

BB0_4:
	mov.f32 	%f1420, %f1419;

BB0_72:
	setp.eq.s32	%p74, %r464, 0;
	mov.f32 	%f1453, 0f3F800000;
	@%p74 bra 	BB0_74;

	mov.f32 	%f759, 0f3F800000;
	max.f32 	%f760, %f1419, %f759;
	div.rn.f32 	%f1453, %f1420, %f760;

BB0_74:
	ld.global.f32 	%f763, [directColor];
	mul.f32 	%f204, %f1453, %f763;
	ld.global.f32 	%f764, [directColor+4];
	mul.f32 	%f205, %f1453, %f764;
	ld.global.f32 	%f765, [directColor+8];
	mul.f32 	%f206, %f1453, %f765;
	cvt.sat.f32.f32	%f766, %f10;
	mul.f32 	%f207, %f204, %f766;
	mul.f32 	%f208, %f205, %f766;
	mul.f32 	%f209, %f206, %f766;
	fma.rn.f32 	%f767, %f10, 0f3F000000, 0f3F000000;
	cvt.sat.f32.f32	%f768, %f767;
	add.f32 	%f210, %f768, %f768;
	mov.f32 	%f769, 0f41200000;
	cvt.rzi.f32.f32	%f770, %f769;
	add.f32 	%f771, %f770, %f770;
	mov.f32 	%f772, 0f41A00000;
	sub.f32 	%f773, %f772, %f771;
	abs.f32 	%f211, %f773;
	abs.f32 	%f212, %f210;
	setp.lt.f32	%p75, %f212, 0f00800000;
	mul.f32 	%f774, %f212, 0f4B800000;
	selp.f32	%f775, 0fC3170000, 0fC2FE0000, %p75;
	selp.f32	%f776, %f774, %f212, %p75;
	mov.b32 	 %r315, %f776;
	and.b32  	%r316, %r315, 8388607;
	or.b32  	%r317, %r316, 1065353216;
	mov.b32 	 %f777, %r317;
	shr.u32 	%r318, %r315, 23;
	cvt.rn.f32.u32	%f778, %r318;
	add.f32 	%f779, %f775, %f778;
	setp.gt.f32	%p76, %f777, 0f3FB504F3;
	mul.f32 	%f780, %f777, 0f3F000000;
	add.f32 	%f781, %f779, 0f3F800000;
	selp.f32	%f782, %f780, %f777, %p76;
	selp.f32	%f783, %f781, %f779, %p76;
	add.f32 	%f784, %f782, 0fBF800000;
	add.f32 	%f762, %f782, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f761,%f762;
	// inline asm
	add.f32 	%f785, %f784, %f784;
	mul.f32 	%f786, %f761, %f785;
	mul.f32 	%f787, %f786, %f786;
	mov.f32 	%f788, 0f3C4CAF63;
	mov.f32 	%f789, 0f3B18F0FE;
	fma.rn.f32 	%f790, %f789, %f787, %f788;
	mov.f32 	%f791, 0f3DAAAABD;
	fma.rn.f32 	%f792, %f790, %f787, %f791;
	mul.rn.f32 	%f793, %f792, %f787;
	mul.rn.f32 	%f794, %f793, %f786;
	sub.f32 	%f795, %f784, %f786;
	neg.f32 	%f796, %f786;
	add.f32 	%f797, %f795, %f795;
	fma.rn.f32 	%f798, %f796, %f784, %f797;
	mul.rn.f32 	%f799, %f761, %f798;
	add.f32 	%f800, %f794, %f786;
	sub.f32 	%f801, %f786, %f800;
	add.f32 	%f802, %f794, %f801;
	add.f32 	%f803, %f799, %f802;
	add.f32 	%f804, %f800, %f803;
	sub.f32 	%f805, %f800, %f804;
	add.f32 	%f806, %f803, %f805;
	mov.f32 	%f807, 0f3F317200;
	mul.rn.f32 	%f808, %f783, %f807;
	mov.f32 	%f809, 0f35BFBE8E;
	mul.rn.f32 	%f810, %f783, %f809;
	add.f32 	%f811, %f808, %f804;
	sub.f32 	%f812, %f808, %f811;
	add.f32 	%f813, %f804, %f812;
	add.f32 	%f814, %f806, %f813;
	add.f32 	%f815, %f810, %f814;
	add.f32 	%f816, %f811, %f815;
	sub.f32 	%f817, %f811, %f816;
	add.f32 	%f818, %f815, %f817;
	mul.rn.f32 	%f819, %f772, %f816;
	neg.f32 	%f820, %f819;
	fma.rn.f32 	%f821, %f772, %f816, %f820;
	fma.rn.f32 	%f822, %f772, %f818, %f821;
	mov.f32 	%f1475, 0f00000000;
	fma.rn.f32 	%f824, %f1475, %f816, %f822;
	add.rn.f32 	%f825, %f819, %f824;
	neg.f32 	%f826, %f825;
	add.rn.f32 	%f827, %f819, %f826;
	add.rn.f32 	%f828, %f827, %f824;
	mov.b32 	 %r319, %f825;
	setp.eq.s32	%p77, %r319, 1118925336;
	add.s32 	%r320, %r319, -1;
	mov.b32 	 %f829, %r320;
	add.f32 	%f830, %f828, 0f37000000;
	selp.f32	%f831, %f829, %f825, %p77;
	selp.f32	%f213, %f830, %f828, %p77;
	mul.f32 	%f832, %f831, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f833, %f832;
	mov.f32 	%f834, 0fBF317200;
	fma.rn.f32 	%f835, %f833, %f834, %f831;
	mov.f32 	%f836, 0fB5BFBE8E;
	fma.rn.f32 	%f837, %f833, %f836, %f835;
	mul.f32 	%f838, %f837, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f839, %f838;
	add.f32 	%f840, %f833, 0f00000000;
	ex2.approx.f32 	%f841, %f840;
	mul.f32 	%f842, %f839, %f841;
	setp.lt.f32	%p78, %f831, 0fC2D20000;
	selp.f32	%f843, 0f00000000, %f842, %p78;
	setp.gt.f32	%p79, %f831, 0f42D20000;
	selp.f32	%f1454, 0f7F800000, %f843, %p79;
	setp.eq.f32	%p80, %f1454, 0f7F800000;
	@%p80 bra 	BB0_76;

	fma.rn.f32 	%f1454, %f1454, %f213, %f1454;

BB0_76:
	setp.lt.f32	%p81, %f210, 0f00000000;
	setp.eq.f32	%p82, %f211, 0f3F800000;
	and.pred  	%p1, %p81, %p82;
	mov.b32 	 %r321, %f1454;
	xor.b32  	%r322, %r321, -2147483648;
	mov.b32 	 %f844, %r322;
	selp.f32	%f1456, %f844, %f1454, %p1;
	setp.eq.f32	%p83, %f210, 0f00000000;
	@%p83 bra 	BB0_79;
	bra.uni 	BB0_77;

BB0_79:
	add.f32 	%f847, %f210, %f210;
	selp.f32	%f1456, %f847, 0f00000000, %p82;
	bra.uni 	BB0_80;

BB0_77:
	setp.geu.f32	%p84, %f210, 0f00000000;
	@%p84 bra 	BB0_80;

	cvt.rzi.f32.f32	%f846, %f772;
	setp.neu.f32	%p85, %f846, 0f41A00000;
	selp.f32	%f1456, 0f7FFFFFFF, %f1456, %p85;

BB0_80:
	add.f32 	%f848, %f212, 0f41A00000;
	mov.b32 	 %r323, %f848;
	setp.lt.s32	%p87, %r323, 2139095040;
	@%p87 bra 	BB0_85;

	setp.gtu.f32	%p88, %f212, 0f7F800000;
	@%p88 bra 	BB0_84;
	bra.uni 	BB0_82;

BB0_84:
	add.f32 	%f1456, %f210, 0f41A00000;
	bra.uni 	BB0_85;

BB0_82:
	setp.neu.f32	%p89, %f212, 0f7F800000;
	@%p89 bra 	BB0_85;

	selp.f32	%f1456, 0fFF800000, 0f7F800000, %p1;

BB0_85:
	setp.eq.f32	%p90, %f210, 0f3F800000;
	selp.f32	%f849, 0f3F800000, %f1456, %p90;
	cvt.sat.f32.f32	%f850, %f849;
	mul.f32 	%f224, %f204, %f850;
	mul.f32 	%f225, %f205, %f850;
	mul.f32 	%f226, %f206, %f850;
	ld.global.u32 	%r493, [imageEnabled];
	and.b32  	%r324, %r493, 8;
	setp.eq.s32	%p91, %r324, 0;
	@%p91 bra 	BB0_98;

	cvt.u64.u32	%rd98, %r2;
	cvt.u64.u32	%rd99, %r3;
	mov.u64 	%rd102, image_Mask;
	cvta.global.u64 	%rd97, %rd102;
	// inline asm
	call (%rd96), _rt_buffer_get_64, (%rd97, %r105, %r105, %rd98, %rd99, %rd32, %rd32);
	// inline asm
	mov.f32 	%f853, 0f3E68BA2E;
	cvt.rzi.f32.f32	%f854, %f853;
	fma.rn.f32 	%f855, %f854, 0fC0000000, 0f3EE8BA2E;
	abs.f32 	%f227, %f855;
	abs.f32 	%f228, %f1453;
	setp.lt.f32	%p92, %f228, 0f00800000;
	mul.f32 	%f856, %f228, 0f4B800000;
	selp.f32	%f857, 0fC3170000, 0fC2FE0000, %p92;
	selp.f32	%f858, %f856, %f228, %p92;
	mov.b32 	 %r327, %f858;
	and.b32  	%r328, %r327, 8388607;
	or.b32  	%r329, %r328, 1065353216;
	mov.b32 	 %f859, %r329;
	shr.u32 	%r330, %r327, 23;
	cvt.rn.f32.u32	%f860, %r330;
	add.f32 	%f861, %f857, %f860;
	setp.gt.f32	%p93, %f859, 0f3FB504F3;
	mul.f32 	%f862, %f859, 0f3F000000;
	add.f32 	%f863, %f861, 0f3F800000;
	selp.f32	%f864, %f862, %f859, %p93;
	selp.f32	%f865, %f863, %f861, %p93;
	add.f32 	%f866, %f864, 0fBF800000;
	add.f32 	%f852, %f864, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f851,%f852;
	// inline asm
	add.f32 	%f867, %f866, %f866;
	mul.f32 	%f868, %f851, %f867;
	mul.f32 	%f869, %f868, %f868;
	fma.rn.f32 	%f872, %f789, %f869, %f788;
	fma.rn.f32 	%f874, %f872, %f869, %f791;
	mul.rn.f32 	%f875, %f874, %f869;
	mul.rn.f32 	%f876, %f875, %f868;
	sub.f32 	%f877, %f866, %f868;
	neg.f32 	%f878, %f868;
	add.f32 	%f879, %f877, %f877;
	fma.rn.f32 	%f880, %f878, %f866, %f879;
	mul.rn.f32 	%f881, %f851, %f880;
	add.f32 	%f882, %f876, %f868;
	sub.f32 	%f883, %f868, %f882;
	add.f32 	%f884, %f876, %f883;
	add.f32 	%f885, %f881, %f884;
	add.f32 	%f886, %f882, %f885;
	sub.f32 	%f887, %f882, %f886;
	add.f32 	%f888, %f885, %f887;
	mul.rn.f32 	%f890, %f865, %f807;
	mul.rn.f32 	%f892, %f865, %f809;
	add.f32 	%f893, %f890, %f886;
	sub.f32 	%f894, %f890, %f893;
	add.f32 	%f895, %f886, %f894;
	add.f32 	%f896, %f888, %f895;
	add.f32 	%f897, %f892, %f896;
	add.f32 	%f898, %f893, %f897;
	sub.f32 	%f899, %f893, %f898;
	add.f32 	%f900, %f897, %f899;
	mov.f32 	%f901, 0f3EE8BA2E;
	mul.rn.f32 	%f902, %f901, %f898;
	neg.f32 	%f903, %f902;
	fma.rn.f32 	%f904, %f901, %f898, %f903;
	fma.rn.f32 	%f905, %f901, %f900, %f904;
	fma.rn.f32 	%f907, %f1475, %f898, %f905;
	add.rn.f32 	%f908, %f902, %f907;
	neg.f32 	%f909, %f908;
	add.rn.f32 	%f910, %f902, %f909;
	add.rn.f32 	%f911, %f910, %f907;
	mov.b32 	 %r331, %f908;
	setp.eq.s32	%p94, %r331, 1118925336;
	add.s32 	%r332, %r331, -1;
	mov.b32 	 %f912, %r332;
	add.f32 	%f913, %f911, 0f37000000;
	selp.f32	%f914, %f912, %f908, %p94;
	selp.f32	%f229, %f913, %f911, %p94;
	mul.f32 	%f915, %f914, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f916, %f915;
	fma.rn.f32 	%f918, %f916, %f834, %f914;
	fma.rn.f32 	%f920, %f916, %f836, %f918;
	mul.f32 	%f921, %f920, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f922, %f921;
	add.f32 	%f923, %f916, 0f00000000;
	ex2.approx.f32 	%f924, %f923;
	mul.f32 	%f925, %f922, %f924;
	setp.lt.f32	%p95, %f914, 0fC2D20000;
	selp.f32	%f926, 0f00000000, %f925, %p95;
	setp.gt.f32	%p96, %f914, 0f42D20000;
	selp.f32	%f1457, 0f7F800000, %f926, %p96;
	setp.eq.f32	%p97, %f1457, 0f7F800000;
	@%p97 bra 	BB0_88;

	fma.rn.f32 	%f1457, %f1457, %f229, %f1457;

BB0_88:
	setp.lt.f32	%p98, %f1453, 0f00000000;
	setp.eq.f32	%p99, %f227, 0f3F800000;
	and.pred  	%p2, %p98, %p99;
	mov.b32 	 %r333, %f1457;
	xor.b32  	%r334, %r333, -2147483648;
	mov.b32 	 %f927, %r334;
	selp.f32	%f1459, %f927, %f1457, %p2;
	setp.eq.f32	%p100, %f1453, 0f00000000;
	@%p100 bra 	BB0_91;
	bra.uni 	BB0_89;

BB0_91:
	add.f32 	%f930, %f1453, %f1453;
	selp.f32	%f1459, %f930, 0f00000000, %p99;
	bra.uni 	BB0_92;

BB0_159:
	mov.u64 	%rd244, image_HDR;
	cvta.global.u64 	%rd239, %rd244;
	mov.u32 	%r431, 8;
	mov.u64 	%rd243, 0;
	// inline asm
	call (%rd238), _rt_buffer_get_64, (%rd239, %r105, %r431, %rd25, %rd26, %rd243, %rd243);
	// inline asm
	mov.f32 	%f1386, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs116, %f1386;}

	// inline asm
	mov.u16 	%rs117, 0;
	st.v4.u16 	[%rd238], {%rs116, %rs116, %rs116, %rs117};

BB0_160:
	ld.global.u32 	%r432, [additive];
	setp.eq.s32	%p175, %r432, 0;
	@%p175 bra 	BB0_162;

	mov.u64 	%rd257, image_RNM0;
	cvta.global.u64 	%rd246, %rd257;
	mov.u32 	%r436, 8;
	mov.u64 	%rd256, 0;
	// inline asm
	call (%rd245), _rt_buffer_get_64, (%rd246, %r105, %r436, %rd25, %rd26, %rd256, %rd256);
	// inline asm
	ld.v4.u16 	{%rs124, %rs125, %rs126, %rs127}, [%rd245];
	// inline asm
	{  cvt.f32.f16 %f1387, %rs124;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1388, %rs125;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1389, %rs126;}

	// inline asm
	// inline asm
	call (%rd251), _rt_buffer_get_64, (%rd246, %r105, %r436, %rd25, %rd26, %rd256, %rd256);
	// inline asm
	add.f32 	%f1390, %f1387, 0f00000000;
	add.f32 	%f1391, %f1388, 0f00000000;
	add.f32 	%f1392, %f1389, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs123, %f1392;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs122, %f1391;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs121, %f1390;}

	// inline asm
	mov.u16 	%rs128, 0;
	st.v4.u16 	[%rd251], {%rs121, %rs122, %rs123, %rs128};
	bra.uni 	BB0_163;

BB0_162:
	mov.u64 	%rd264, image_RNM0;
	cvta.global.u64 	%rd259, %rd264;
	mov.u32 	%r438, 8;
	mov.u64 	%rd263, 0;
	// inline asm
	call (%rd258), _rt_buffer_get_64, (%rd259, %r105, %r438, %rd25, %rd26, %rd263, %rd263);
	// inline asm
	mov.f32 	%f1393, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs129, %f1393;}

	// inline asm
	mov.u16 	%rs130, 0;
	st.v4.u16 	[%rd258], {%rs129, %rs129, %rs129, %rs130};

BB0_163:
	ld.global.u32 	%r439, [additive];
	setp.eq.s32	%p176, %r439, 0;
	@%p176 bra 	BB0_165;

	mov.u64 	%rd277, image_RNM1;
	cvta.global.u64 	%rd266, %rd277;
	mov.u32 	%r443, 8;
	mov.u64 	%rd276, 0;
	// inline asm
	call (%rd265), _rt_buffer_get_64, (%rd266, %r105, %r443, %rd25, %rd26, %rd276, %rd276);
	// inline asm
	ld.v4.u16 	{%rs137, %rs138, %rs139, %rs140}, [%rd265];
	// inline asm
	{  cvt.f32.f16 %f1394, %rs137;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1395, %rs138;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1396, %rs139;}

	// inline asm
	// inline asm
	call (%rd271), _rt_buffer_get_64, (%rd266, %r105, %r443, %rd25, %rd26, %rd276, %rd276);
	// inline asm
	add.f32 	%f1397, %f1394, 0f00000000;
	add.f32 	%f1398, %f1395, 0f00000000;
	add.f32 	%f1399, %f1396, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs136, %f1399;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs135, %f1398;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs134, %f1397;}

	// inline asm
	mov.u16 	%rs141, 0;
	st.v4.u16 	[%rd271], {%rs134, %rs135, %rs136, %rs141};
	bra.uni 	BB0_166;

BB0_165:
	mov.u64 	%rd284, image_RNM1;
	cvta.global.u64 	%rd279, %rd284;
	mov.u32 	%r445, 8;
	mov.u64 	%rd283, 0;
	// inline asm
	call (%rd278), _rt_buffer_get_64, (%rd279, %r105, %r445, %rd25, %rd26, %rd283, %rd283);
	// inline asm
	mov.f32 	%f1400, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs142, %f1400;}

	// inline asm
	mov.u16 	%rs143, 0;
	st.v4.u16 	[%rd278], {%rs142, %rs142, %rs142, %rs143};

BB0_166:
	ld.global.u32 	%r446, [additive];
	setp.eq.s32	%p177, %r446, 0;
	@%p177 bra 	BB0_168;

	mov.u64 	%rd297, image_RNM2;
	cvta.global.u64 	%rd286, %rd297;
	mov.u32 	%r450, 8;
	mov.u64 	%rd296, 0;
	// inline asm
	call (%rd285), _rt_buffer_get_64, (%rd286, %r105, %r450, %rd25, %rd26, %rd296, %rd296);
	// inline asm
	ld.v4.u16 	{%rs150, %rs151, %rs152, %rs153}, [%rd285];
	// inline asm
	{  cvt.f32.f16 %f1401, %rs150;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1402, %rs151;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1403, %rs152;}

	// inline asm
	// inline asm
	call (%rd291), _rt_buffer_get_64, (%rd286, %r105, %r450, %rd25, %rd26, %rd296, %rd296);
	// inline asm
	add.f32 	%f1404, %f1401, 0f00000000;
	add.f32 	%f1405, %f1402, 0f00000000;
	add.f32 	%f1406, %f1403, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs149, %f1406;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs148, %f1405;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs147, %f1404;}

	// inline asm
	mov.u16 	%rs154, 0;
	st.v4.u16 	[%rd291], {%rs147, %rs148, %rs149, %rs154};
	bra.uni 	BB0_169;

BB0_168:
	mov.u64 	%rd304, image_RNM2;
	cvta.global.u64 	%rd299, %rd304;
	mov.u32 	%r452, 8;
	mov.u64 	%rd303, 0;
	// inline asm
	call (%rd298), _rt_buffer_get_64, (%rd299, %r105, %r452, %rd25, %rd26, %rd303, %rd303);
	// inline asm
	mov.f32 	%f1407, 0f00000000;
	// inline asm
	{  cvt.rn.f16.f32 %rs155, %f1407;}

	// inline asm
	mov.u16 	%rs156, 0;
	st.v4.u16 	[%rd298], {%rs155, %rs155, %rs155, %rs156};
	bra.uni 	BB0_169;

BB0_89:
	setp.geu.f32	%p101, %f1453, 0f00000000;
	@%p101 bra 	BB0_92;

	cvt.rzi.f32.f32	%f929, %f901;
	setp.neu.f32	%p102, %f929, 0f3EE8BA2E;
	selp.f32	%f1459, 0f7FFFFFFF, %f1459, %p102;

BB0_92:
	add.f32 	%f931, %f228, 0f3EE8BA2E;
	mov.b32 	 %r335, %f931;
	setp.lt.s32	%p104, %r335, 2139095040;
	@%p104 bra 	BB0_97;

	setp.gtu.f32	%p105, %f228, 0f7F800000;
	@%p105 bra 	BB0_96;
	bra.uni 	BB0_94;

BB0_96:
	add.f32 	%f1459, %f1453, 0f3EE8BA2E;
	bra.uni 	BB0_97;

BB0_94:
	setp.neu.f32	%p106, %f228, 0f7F800000;
	@%p106 bra 	BB0_97;

	selp.f32	%f1459, 0fFF800000, 0f7F800000, %p2;

BB0_97:
	mul.f32 	%f932, %f1459, 0f437F0000;
	setp.eq.f32	%p107, %f1453, 0f3F800000;
	selp.f32	%f933, 0f437F0000, %f932, %p107;
	cvt.rzi.u32.f32	%r336, %f933;
	cvt.u16.u32	%rs13, %r336;
	mov.u16 	%rs14, 255;
	st.v2.u8 	[%rd96], {%rs13, %rs14};
	ld.global.u32 	%r493, [imageEnabled];

BB0_98:
	and.b32  	%r337, %r493, 1;
	setp.eq.b32	%p108, %r337, 1;
	@!%p108 bra 	BB0_133;
	bra.uni 	BB0_99;

BB0_99:
	mov.f32 	%f936, 0f3E666666;
	cvt.rzi.f32.f32	%f937, %f936;
	fma.rn.f32 	%f938, %f937, 0fC0000000, 0f3EE66666;
	abs.f32 	%f240, %f938;
	abs.f32 	%f241, %f207;
	setp.lt.f32	%p109, %f241, 0f00800000;
	mul.f32 	%f939, %f241, 0f4B800000;
	selp.f32	%f940, 0fC3170000, 0fC2FE0000, %p109;
	selp.f32	%f941, %f939, %f241, %p109;
	mov.b32 	 %r338, %f941;
	and.b32  	%r339, %r338, 8388607;
	or.b32  	%r340, %r339, 1065353216;
	mov.b32 	 %f942, %r340;
	shr.u32 	%r341, %r338, 23;
	cvt.rn.f32.u32	%f943, %r341;
	add.f32 	%f944, %f940, %f943;
	setp.gt.f32	%p110, %f942, 0f3FB504F3;
	mul.f32 	%f945, %f942, 0f3F000000;
	add.f32 	%f946, %f944, 0f3F800000;
	selp.f32	%f947, %f945, %f942, %p110;
	selp.f32	%f948, %f946, %f944, %p110;
	add.f32 	%f949, %f947, 0fBF800000;
	add.f32 	%f935, %f947, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f934,%f935;
	// inline asm
	add.f32 	%f950, %f949, %f949;
	mul.f32 	%f951, %f934, %f950;
	mul.f32 	%f952, %f951, %f951;
	fma.rn.f32 	%f955, %f789, %f952, %f788;
	fma.rn.f32 	%f957, %f955, %f952, %f791;
	mul.rn.f32 	%f958, %f957, %f952;
	mul.rn.f32 	%f959, %f958, %f951;
	sub.f32 	%f960, %f949, %f951;
	neg.f32 	%f961, %f951;
	add.f32 	%f962, %f960, %f960;
	fma.rn.f32 	%f963, %f961, %f949, %f962;
	mul.rn.f32 	%f964, %f934, %f963;
	add.f32 	%f965, %f959, %f951;
	sub.f32 	%f966, %f951, %f965;
	add.f32 	%f967, %f959, %f966;
	add.f32 	%f968, %f964, %f967;
	add.f32 	%f969, %f965, %f968;
	sub.f32 	%f970, %f965, %f969;
	add.f32 	%f971, %f968, %f970;
	mul.rn.f32 	%f973, %f948, %f807;
	mul.rn.f32 	%f975, %f948, %f809;
	add.f32 	%f976, %f973, %f969;
	sub.f32 	%f977, %f973, %f976;
	add.f32 	%f978, %f969, %f977;
	add.f32 	%f979, %f971, %f978;
	add.f32 	%f980, %f975, %f979;
	add.f32 	%f981, %f976, %f980;
	sub.f32 	%f982, %f976, %f981;
	add.f32 	%f983, %f980, %f982;
	mov.f32 	%f984, 0f3EE66666;
	mul.rn.f32 	%f985, %f984, %f981;
	neg.f32 	%f986, %f985;
	fma.rn.f32 	%f987, %f984, %f981, %f986;
	fma.rn.f32 	%f988, %f984, %f983, %f987;
	fma.rn.f32 	%f990, %f1475, %f981, %f988;
	add.rn.f32 	%f991, %f985, %f990;
	neg.f32 	%f992, %f991;
	add.rn.f32 	%f993, %f985, %f992;
	add.rn.f32 	%f994, %f993, %f990;
	mov.b32 	 %r342, %f991;
	setp.eq.s32	%p111, %r342, 1118925336;
	add.s32 	%r343, %r342, -1;
	mov.b32 	 %f995, %r343;
	add.f32 	%f996, %f994, 0f37000000;
	selp.f32	%f997, %f995, %f991, %p111;
	selp.f32	%f242, %f996, %f994, %p111;
	mul.f32 	%f998, %f997, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f999, %f998;
	fma.rn.f32 	%f1001, %f999, %f834, %f997;
	fma.rn.f32 	%f1003, %f999, %f836, %f1001;
	mul.f32 	%f1004, %f1003, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1005, %f1004;
	add.f32 	%f1006, %f999, 0f00000000;
	ex2.approx.f32 	%f1007, %f1006;
	mul.f32 	%f1008, %f1005, %f1007;
	setp.lt.f32	%p112, %f997, 0fC2D20000;
	selp.f32	%f1009, 0f00000000, %f1008, %p112;
	setp.gt.f32	%p113, %f997, 0f42D20000;
	selp.f32	%f1460, 0f7F800000, %f1009, %p113;
	setp.eq.f32	%p114, %f1460, 0f7F800000;
	@%p114 bra 	BB0_101;

	fma.rn.f32 	%f1460, %f1460, %f242, %f1460;

BB0_101:
	setp.lt.f32	%p115, %f207, 0f00000000;
	setp.eq.f32	%p116, %f240, 0f3F800000;
	and.pred  	%p3, %p115, %p116;
	mov.b32 	 %r344, %f1460;
	xor.b32  	%r345, %r344, -2147483648;
	mov.b32 	 %f1010, %r345;
	selp.f32	%f1462, %f1010, %f1460, %p3;
	setp.eq.f32	%p117, %f207, 0f00000000;
	@%p117 bra 	BB0_104;
	bra.uni 	BB0_102;

BB0_104:
	add.f32 	%f1013, %f207, %f207;
	selp.f32	%f1462, %f1013, 0f00000000, %p116;
	bra.uni 	BB0_105;

BB0_102:
	setp.geu.f32	%p118, %f207, 0f00000000;
	@%p118 bra 	BB0_105;

	cvt.rzi.f32.f32	%f1012, %f984;
	setp.neu.f32	%p119, %f1012, 0f3EE66666;
	selp.f32	%f1462, 0f7FFFFFFF, %f1462, %p119;

BB0_105:
	add.f32 	%f1014, %f241, 0f3EE66666;
	mov.b32 	 %r346, %f1014;
	setp.lt.s32	%p121, %r346, 2139095040;
	@%p121 bra 	BB0_110;

	setp.gtu.f32	%p122, %f241, 0f7F800000;
	@%p122 bra 	BB0_109;
	bra.uni 	BB0_107;

BB0_109:
	add.f32 	%f1462, %f207, 0f3EE66666;
	bra.uni 	BB0_110;

BB0_107:
	setp.neu.f32	%p123, %f241, 0f7F800000;
	@%p123 bra 	BB0_110;

	selp.f32	%f1462, 0fFF800000, 0f7F800000, %p3;

BB0_110:
	setp.eq.f32	%p124, %f207, 0f3F800000;
	selp.f32	%f253, 0f3F800000, %f1462, %p124;
	abs.f32 	%f254, %f208;
	setp.lt.f32	%p125, %f254, 0f00800000;
	mul.f32 	%f1017, %f254, 0f4B800000;
	selp.f32	%f1018, 0fC3170000, 0fC2FE0000, %p125;
	selp.f32	%f1019, %f1017, %f254, %p125;
	mov.b32 	 %r347, %f1019;
	and.b32  	%r348, %r347, 8388607;
	or.b32  	%r349, %r348, 1065353216;
	mov.b32 	 %f1020, %r349;
	shr.u32 	%r350, %r347, 23;
	cvt.rn.f32.u32	%f1021, %r350;
	add.f32 	%f1022, %f1018, %f1021;
	setp.gt.f32	%p126, %f1020, 0f3FB504F3;
	mul.f32 	%f1023, %f1020, 0f3F000000;
	add.f32 	%f1024, %f1022, 0f3F800000;
	selp.f32	%f1025, %f1023, %f1020, %p126;
	selp.f32	%f1026, %f1024, %f1022, %p126;
	add.f32 	%f1027, %f1025, 0fBF800000;
	add.f32 	%f1016, %f1025, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1015,%f1016;
	// inline asm
	add.f32 	%f1028, %f1027, %f1027;
	mul.f32 	%f1029, %f1015, %f1028;
	mul.f32 	%f1030, %f1029, %f1029;
	fma.rn.f32 	%f1033, %f789, %f1030, %f788;
	fma.rn.f32 	%f1035, %f1033, %f1030, %f791;
	mul.rn.f32 	%f1036, %f1035, %f1030;
	mul.rn.f32 	%f1037, %f1036, %f1029;
	sub.f32 	%f1038, %f1027, %f1029;
	neg.f32 	%f1039, %f1029;
	add.f32 	%f1040, %f1038, %f1038;
	fma.rn.f32 	%f1041, %f1039, %f1027, %f1040;
	mul.rn.f32 	%f1042, %f1015, %f1041;
	add.f32 	%f1043, %f1037, %f1029;
	sub.f32 	%f1044, %f1029, %f1043;
	add.f32 	%f1045, %f1037, %f1044;
	add.f32 	%f1046, %f1042, %f1045;
	add.f32 	%f1047, %f1043, %f1046;
	sub.f32 	%f1048, %f1043, %f1047;
	add.f32 	%f1049, %f1046, %f1048;
	mul.rn.f32 	%f1051, %f1026, %f807;
	mul.rn.f32 	%f1053, %f1026, %f809;
	add.f32 	%f1054, %f1051, %f1047;
	sub.f32 	%f1055, %f1051, %f1054;
	add.f32 	%f1056, %f1047, %f1055;
	add.f32 	%f1057, %f1049, %f1056;
	add.f32 	%f1058, %f1053, %f1057;
	add.f32 	%f1059, %f1054, %f1058;
	sub.f32 	%f1060, %f1054, %f1059;
	add.f32 	%f1061, %f1058, %f1060;
	mul.rn.f32 	%f1063, %f984, %f1059;
	neg.f32 	%f1064, %f1063;
	fma.rn.f32 	%f1065, %f984, %f1059, %f1064;
	fma.rn.f32 	%f1066, %f984, %f1061, %f1065;
	fma.rn.f32 	%f1068, %f1475, %f1059, %f1066;
	add.rn.f32 	%f1069, %f1063, %f1068;
	neg.f32 	%f1070, %f1069;
	add.rn.f32 	%f1071, %f1063, %f1070;
	add.rn.f32 	%f1072, %f1071, %f1068;
	mov.b32 	 %r351, %f1069;
	setp.eq.s32	%p127, %r351, 1118925336;
	add.s32 	%r352, %r351, -1;
	mov.b32 	 %f1073, %r352;
	add.f32 	%f1074, %f1072, 0f37000000;
	selp.f32	%f1075, %f1073, %f1069, %p127;
	selp.f32	%f255, %f1074, %f1072, %p127;
	mul.f32 	%f1076, %f1075, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1077, %f1076;
	fma.rn.f32 	%f1079, %f1077, %f834, %f1075;
	fma.rn.f32 	%f1081, %f1077, %f836, %f1079;
	mul.f32 	%f1082, %f1081, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1083, %f1082;
	add.f32 	%f1084, %f1077, 0f00000000;
	ex2.approx.f32 	%f1085, %f1084;
	mul.f32 	%f1086, %f1083, %f1085;
	setp.lt.f32	%p128, %f1075, 0fC2D20000;
	selp.f32	%f1087, 0f00000000, %f1086, %p128;
	setp.gt.f32	%p129, %f1075, 0f42D20000;
	selp.f32	%f1463, 0f7F800000, %f1087, %p129;
	setp.eq.f32	%p130, %f1463, 0f7F800000;
	@%p130 bra 	BB0_112;

	fma.rn.f32 	%f1463, %f1463, %f255, %f1463;

BB0_112:
	setp.lt.f32	%p131, %f208, 0f00000000;
	and.pred  	%p4, %p131, %p116;
	mov.b32 	 %r353, %f1463;
	xor.b32  	%r354, %r353, -2147483648;
	mov.b32 	 %f1088, %r354;
	selp.f32	%f1465, %f1088, %f1463, %p4;
	setp.eq.f32	%p133, %f208, 0f00000000;
	@%p133 bra 	BB0_115;
	bra.uni 	BB0_113;

BB0_115:
	add.f32 	%f1091, %f208, %f208;
	selp.f32	%f1465, %f1091, 0f00000000, %p116;
	bra.uni 	BB0_116;

BB0_113:
	setp.geu.f32	%p134, %f208, 0f00000000;
	@%p134 bra 	BB0_116;

	cvt.rzi.f32.f32	%f1090, %f984;
	setp.neu.f32	%p135, %f1090, 0f3EE66666;
	selp.f32	%f1465, 0f7FFFFFFF, %f1465, %p135;

BB0_116:
	add.f32 	%f1092, %f254, 0f3EE66666;
	mov.b32 	 %r355, %f1092;
	setp.lt.s32	%p137, %r355, 2139095040;
	@%p137 bra 	BB0_121;

	setp.gtu.f32	%p138, %f254, 0f7F800000;
	@%p138 bra 	BB0_120;
	bra.uni 	BB0_118;

BB0_120:
	add.f32 	%f1465, %f208, 0f3EE66666;
	bra.uni 	BB0_121;

BB0_118:
	setp.neu.f32	%p139, %f254, 0f7F800000;
	@%p139 bra 	BB0_121;

	selp.f32	%f1465, 0fFF800000, 0f7F800000, %p4;

BB0_121:
	setp.eq.f32	%p140, %f208, 0f3F800000;
	selp.f32	%f266, 0f3F800000, %f1465, %p140;
	abs.f32 	%f267, %f209;
	setp.lt.f32	%p141, %f267, 0f00800000;
	mul.f32 	%f1095, %f267, 0f4B800000;
	selp.f32	%f1096, 0fC3170000, 0fC2FE0000, %p141;
	selp.f32	%f1097, %f1095, %f267, %p141;
	mov.b32 	 %r356, %f1097;
	and.b32  	%r357, %r356, 8388607;
	or.b32  	%r358, %r357, 1065353216;
	mov.b32 	 %f1098, %r358;
	shr.u32 	%r359, %r356, 23;
	cvt.rn.f32.u32	%f1099, %r359;
	add.f32 	%f1100, %f1096, %f1099;
	setp.gt.f32	%p142, %f1098, 0f3FB504F3;
	mul.f32 	%f1101, %f1098, 0f3F000000;
	add.f32 	%f1102, %f1100, 0f3F800000;
	selp.f32	%f1103, %f1101, %f1098, %p142;
	selp.f32	%f1104, %f1102, %f1100, %p142;
	add.f32 	%f1105, %f1103, 0fBF800000;
	add.f32 	%f1094, %f1103, 0f3F800000;
	// inline asm
	rcp.approx.ftz.f32 %f1093,%f1094;
	// inline asm
	add.f32 	%f1106, %f1105, %f1105;
	mul.f32 	%f1107, %f1093, %f1106;
	mul.f32 	%f1108, %f1107, %f1107;
	fma.rn.f32 	%f1111, %f789, %f1108, %f788;
	fma.rn.f32 	%f1113, %f1111, %f1108, %f791;
	mul.rn.f32 	%f1114, %f1113, %f1108;
	mul.rn.f32 	%f1115, %f1114, %f1107;
	sub.f32 	%f1116, %f1105, %f1107;
	neg.f32 	%f1117, %f1107;
	add.f32 	%f1118, %f1116, %f1116;
	fma.rn.f32 	%f1119, %f1117, %f1105, %f1118;
	mul.rn.f32 	%f1120, %f1093, %f1119;
	add.f32 	%f1121, %f1115, %f1107;
	sub.f32 	%f1122, %f1107, %f1121;
	add.f32 	%f1123, %f1115, %f1122;
	add.f32 	%f1124, %f1120, %f1123;
	add.f32 	%f1125, %f1121, %f1124;
	sub.f32 	%f1126, %f1121, %f1125;
	add.f32 	%f1127, %f1124, %f1126;
	mul.rn.f32 	%f1129, %f1104, %f807;
	mul.rn.f32 	%f1131, %f1104, %f809;
	add.f32 	%f1132, %f1129, %f1125;
	sub.f32 	%f1133, %f1129, %f1132;
	add.f32 	%f1134, %f1125, %f1133;
	add.f32 	%f1135, %f1127, %f1134;
	add.f32 	%f1136, %f1131, %f1135;
	add.f32 	%f1137, %f1132, %f1136;
	sub.f32 	%f1138, %f1132, %f1137;
	add.f32 	%f1139, %f1136, %f1138;
	mul.rn.f32 	%f1141, %f984, %f1137;
	neg.f32 	%f1142, %f1141;
	fma.rn.f32 	%f1143, %f984, %f1137, %f1142;
	fma.rn.f32 	%f1144, %f984, %f1139, %f1143;
	fma.rn.f32 	%f1146, %f1475, %f1137, %f1144;
	add.rn.f32 	%f1147, %f1141, %f1146;
	neg.f32 	%f1148, %f1147;
	add.rn.f32 	%f1149, %f1141, %f1148;
	add.rn.f32 	%f1150, %f1149, %f1146;
	mov.b32 	 %r360, %f1147;
	setp.eq.s32	%p143, %r360, 1118925336;
	add.s32 	%r361, %r360, -1;
	mov.b32 	 %f1151, %r361;
	add.f32 	%f1152, %f1150, 0f37000000;
	selp.f32	%f1153, %f1151, %f1147, %p143;
	selp.f32	%f268, %f1152, %f1150, %p143;
	mul.f32 	%f1154, %f1153, 0f3FB8AA3B;
	cvt.rzi.f32.f32	%f1155, %f1154;
	fma.rn.f32 	%f1157, %f1155, %f834, %f1153;
	fma.rn.f32 	%f1159, %f1155, %f836, %f1157;
	mul.f32 	%f1160, %f1159, 0f3FB8AA3B;
	ex2.approx.ftz.f32 	%f1161, %f1160;
	add.f32 	%f1162, %f1155, 0f00000000;
	ex2.approx.f32 	%f1163, %f1162;
	mul.f32 	%f1164, %f1161, %f1163;
	setp.lt.f32	%p144, %f1153, 0fC2D20000;
	selp.f32	%f1165, 0f00000000, %f1164, %p144;
	setp.gt.f32	%p145, %f1153, 0f42D20000;
	selp.f32	%f1466, 0f7F800000, %f1165, %p145;
	setp.eq.f32	%p146, %f1466, 0f7F800000;
	@%p146 bra 	BB0_123;

	fma.rn.f32 	%f1466, %f1466, %f268, %f1466;

BB0_123:
	setp.lt.f32	%p147, %f209, 0f00000000;
	and.pred  	%p5, %p147, %p116;
	mov.b32 	 %r362, %f1466;
	xor.b32  	%r363, %r362, -2147483648;
	mov.b32 	 %f1166, %r363;
	selp.f32	%f1468, %f1166, %f1466, %p5;
	setp.eq.f32	%p149, %f209, 0f00000000;
	@%p149 bra 	BB0_126;
	bra.uni 	BB0_124;

BB0_126:
	add.f32 	%f1169, %f209, %f209;
	selp.f32	%f1468, %f1169, 0f00000000, %p116;
	bra.uni 	BB0_127;

BB0_124:
	setp.geu.f32	%p150, %f209, 0f00000000;
	@%p150 bra 	BB0_127;

	cvt.rzi.f32.f32	%f1168, %f984;
	setp.neu.f32	%p151, %f1168, 0f3EE66666;
	selp.f32	%f1468, 0f7FFFFFFF, %f1468, %p151;

BB0_127:
	add.f32 	%f1170, %f267, 0f3EE66666;
	mov.b32 	 %r364, %f1170;
	setp.lt.s32	%p153, %r364, 2139095040;
	@%p153 bra 	BB0_132;

	setp.gtu.f32	%p154, %f267, 0f7F800000;
	@%p154 bra 	BB0_131;
	bra.uni 	BB0_129;

BB0_131:
	add.f32 	%f1468, %f209, 0f3EE66666;
	bra.uni 	BB0_132;

BB0_129:
	setp.neu.f32	%p155, %f267, 0f7F800000;
	@%p155 bra 	BB0_132;

	selp.f32	%f1468, 0fFF800000, 0f7F800000, %p5;

BB0_132:
	setp.eq.f32	%p156, %f209, 0f3F800000;
	selp.f32	%f1171, 0f3F800000, %f1468, %p156;
	cvt.u64.u32	%rd106, %r3;
	cvt.u64.u32	%rd105, %r2;
	mov.u64 	%rd109, image;
	cvta.global.u64 	%rd104, %rd109;
	// inline asm
	call (%rd103), _rt_buffer_get_64, (%rd104, %r105, %r106, %rd105, %rd106, %rd32, %rd32);
	// inline asm
	cvt.sat.f32.f32	%f1172, %f1171;
	mul.f32 	%f1173, %f1172, 0f437FFD71;
	cvt.rzi.u32.f32	%r367, %f1173;
	cvt.sat.f32.f32	%f1174, %f266;
	mul.f32 	%f1175, %f1174, 0f437FFD71;
	cvt.rzi.u32.f32	%r368, %f1175;
	cvt.sat.f32.f32	%f1176, %f253;
	mul.f32 	%f1177, %f1176, 0f437FFD71;
	cvt.rzi.u32.f32	%r369, %f1177;
	cvt.u16.u32	%rs15, %r367;
	cvt.u16.u32	%rs16, %r369;
	cvt.u16.u32	%rs17, %r368;
	mov.u16 	%rs18, 255;
	st.v4.u8 	[%rd103], {%rs15, %rs17, %rs16, %rs18};
	ld.global.u32 	%r493, [imageEnabled];

BB0_133:
	and.b32  	%r370, %r493, 4;
	setp.eq.s32	%p157, %r370, 0;
	@%p157 bra 	BB0_137;

	ld.global.u32 	%r371, [additive];
	setp.eq.s32	%p158, %r371, 0;
	cvt.u64.u32	%rd18, %r2;
	cvt.u64.u32	%rd19, %r3;
	mov.f32 	%f1178, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs19, %f1178;}

	// inline asm
	@%p158 bra 	BB0_136;

	mov.u64 	%rd122, image_HDR;
	cvta.global.u64 	%rd111, %rd122;
	mov.u32 	%r375, 8;
	// inline asm
	call (%rd110), _rt_buffer_get_64, (%rd111, %r105, %r375, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs26, %rs27, %rs28, %rs29}, [%rd110];
	// inline asm
	{  cvt.f32.f16 %f1179, %rs26;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1180, %rs27;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1181, %rs28;}

	// inline asm
	// inline asm
	call (%rd116), _rt_buffer_get_64, (%rd111, %r105, %r375, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	add.f32 	%f1182, %f207, %f1179;
	add.f32 	%f1183, %f208, %f1180;
	add.f32 	%f1184, %f209, %f1181;
	// inline asm
	{  cvt.rn.f16.f32 %rs25, %f1184;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs24, %f1183;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs23, %f1182;}

	// inline asm
	st.v4.u16 	[%rd116], {%rs23, %rs24, %rs25, %rs19};
	bra.uni 	BB0_137;

BB0_136:
	mov.u64 	%rd129, image_HDR;
	cvta.global.u64 	%rd124, %rd129;
	mov.u32 	%r377, 8;
	// inline asm
	call (%rd123), _rt_buffer_get_64, (%rd124, %r105, %r377, %rd18, %rd19, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs32, %f209;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs31, %f208;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs30, %f207;}

	// inline asm
	st.v4.u16 	[%rd123], {%rs30, %rs31, %rs32, %rs19};

BB0_137:
	ld.global.v2.u32 	{%r380, %r381}, [pixelID];
	cvt.u64.u32	%rd132, %r380;
	cvt.u64.u32	%rd133, %r381;
	mov.u64 	%rd136, uvtangent;
	cvta.global.u64 	%rd131, %rd136;
	// inline asm
	call (%rd130), _rt_buffer_get_64, (%rd131, %r105, %r106, %rd132, %rd133, %rd32, %rd32);
	// inline asm
	ld.u32 	%r94, [%rd130];
	shr.u32 	%r95, %r94, 16;
	cvt.u16.u32	%rs33, %r95;
	and.b16  	%rs34, %rs33, 255;
	cvt.u16.u32	%rs35, %r94;
	or.b16  	%rs36, %rs35, %rs34;
	setp.eq.s16	%p159, %rs36, 0;
	mov.f32 	%f1469, %f1475;
	mov.f32 	%f1470, %f1475;
	mov.f32 	%f1471, %f1475;
	@%p159 bra 	BB0_139;

	ld.u8 	%rs37, [%rd130+1];
	and.b16  	%rs39, %rs35, 255;
	cvt.rn.f32.u16	%f1191, %rs39;
	div.rn.f32 	%f1192, %f1191, 0f437F0000;
	fma.rn.f32 	%f1193, %f1192, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1194, %rs37;
	div.rn.f32 	%f1195, %f1194, 0f437F0000;
	fma.rn.f32 	%f1196, %f1195, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1197, %rs34;
	div.rn.f32 	%f1198, %f1197, 0f437F0000;
	fma.rn.f32 	%f1199, %f1198, 0f40000000, 0fBF800000;
	mul.f32 	%f1200, %f1196, %f1196;
	fma.rn.f32 	%f1201, %f1193, %f1193, %f1200;
	fma.rn.f32 	%f1202, %f1199, %f1199, %f1201;
	sqrt.rn.f32 	%f1203, %f1202;
	rcp.rn.f32 	%f1204, %f1203;
	mul.f32 	%f1469, %f1193, %f1204;
	mul.f32 	%f1470, %f1196, %f1204;
	mul.f32 	%f1471, %f1199, %f1204;

BB0_139:
	mul.f32 	%f1208, %f1416, %f1470;
	mul.f32 	%f1209, %f1415, %f1471;
	sub.f32 	%f1210, %f1209, %f1208;
	mul.f32 	%f1211, %f1414, %f1471;
	mul.f32 	%f1212, %f1416, %f1469;
	sub.f32 	%f1213, %f1212, %f1211;
	mul.f32 	%f1214, %f1415, %f1469;
	mul.f32 	%f1215, %f1414, %f1470;
	sub.f32 	%f1216, %f1215, %f1214;
	setp.lt.u32	%p160, %r94, 16777216;
	selp.f32	%f1217, 0fBF800000, 0f3F800000, %p160;
	mul.f32 	%f1218, %f1210, %f1217;
	mul.f32 	%f1219, %f1213, %f1217;
	mul.f32 	%f1220, %f1216, %f1217;
	mul.f32 	%f1221, %f1218, 0f00000000;
	mul.f32 	%f1222, %f1219, 0f00000000;
	mul.f32 	%f1223, %f1220, 0f00000000;
	fma.rn.f32 	%f1224, %f1469, 0f3F5105EC, %f1221;
	fma.rn.f32 	%f1225, %f1470, 0f3F5105EC, %f1222;
	fma.rn.f32 	%f1226, %f1471, 0f3F5105EC, %f1223;
	mul.f32 	%f285, %f1414, 0f3F13CD3A;
	add.f32 	%f286, %f285, %f1224;
	mul.f32 	%f287, %f1415, 0f3F13CD3A;
	add.f32 	%f288, %f287, %f1225;
	mul.f32 	%f289, %f1416, 0f3F13CD3A;
	add.f32 	%f290, %f289, %f1226;
	ld.global.v2.u32 	{%r386, %r387}, [pixelID];
	cvt.u64.u32	%rd139, %r386;
	cvt.u64.u32	%rd140, %r387;
	// inline asm
	call (%rd137), _rt_buffer_get_64, (%rd131, %r105, %r106, %rd139, %rd140, %rd32, %rd32);
	// inline asm
	ld.u32 	%r96, [%rd137];
	shr.u32 	%r97, %r96, 16;
	cvt.u16.u32	%rs42, %r97;
	and.b16  	%rs43, %rs42, 255;
	cvt.u16.u32	%rs44, %r96;
	or.b16  	%rs45, %rs44, %rs43;
	setp.eq.s16	%p161, %rs45, 0;
	mov.f32 	%f1472, %f1475;
	mov.f32 	%f1473, %f1475;
	mov.f32 	%f1474, %f1475;
	@%p161 bra 	BB0_141;

	ld.u8 	%rs46, [%rd137+1];
	and.b16  	%rs48, %rs44, 255;
	cvt.rn.f32.u16	%f1227, %rs48;
	div.rn.f32 	%f1228, %f1227, 0f437F0000;
	fma.rn.f32 	%f1229, %f1228, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1230, %rs46;
	div.rn.f32 	%f1231, %f1230, 0f437F0000;
	fma.rn.f32 	%f1232, %f1231, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1233, %rs43;
	div.rn.f32 	%f1234, %f1233, 0f437F0000;
	fma.rn.f32 	%f1235, %f1234, 0f40000000, 0fBF800000;
	mul.f32 	%f1236, %f1232, %f1232;
	fma.rn.f32 	%f1237, %f1229, %f1229, %f1236;
	fma.rn.f32 	%f1238, %f1235, %f1235, %f1237;
	sqrt.rn.f32 	%f1239, %f1238;
	rcp.rn.f32 	%f1240, %f1239;
	mul.f32 	%f1472, %f1229, %f1240;
	mul.f32 	%f1473, %f1232, %f1240;
	mul.f32 	%f1474, %f1235, %f1240;

BB0_141:
	mul.f32 	%f1244, %f1416, %f1473;
	mul.f32 	%f1245, %f1415, %f1474;
	sub.f32 	%f1246, %f1245, %f1244;
	mul.f32 	%f1247, %f1414, %f1474;
	mul.f32 	%f1248, %f1416, %f1472;
	sub.f32 	%f1249, %f1248, %f1247;
	mul.f32 	%f1250, %f1415, %f1472;
	mul.f32 	%f1251, %f1414, %f1473;
	sub.f32 	%f1252, %f1251, %f1250;
	setp.lt.u32	%p162, %r96, 16777216;
	selp.f32	%f1253, 0fBF800000, 0f3F800000, %p162;
	mul.f32 	%f1254, %f1246, %f1253;
	mul.f32 	%f1255, %f1249, %f1253;
	mul.f32 	%f1256, %f1252, %f1253;
	mul.f32 	%f1257, %f1254, 0f3F3504F3;
	mul.f32 	%f1258, %f1255, 0f3F3504F3;
	mul.f32 	%f1259, %f1256, 0f3F3504F3;
	fma.rn.f32 	%f1260, %f1472, 0fBED105EC, %f1257;
	fma.rn.f32 	%f1261, %f1473, 0fBED105EC, %f1258;
	fma.rn.f32 	%f1262, %f1474, 0fBED105EC, %f1259;
	add.f32 	%f297, %f285, %f1260;
	add.f32 	%f298, %f287, %f1261;
	add.f32 	%f299, %f289, %f1262;
	ld.global.v2.u32 	{%r392, %r393}, [pixelID];
	cvt.u64.u32	%rd146, %r392;
	cvt.u64.u32	%rd147, %r393;
	// inline asm
	call (%rd144), _rt_buffer_get_64, (%rd131, %r105, %r106, %rd146, %rd147, %rd32, %rd32);
	// inline asm
	ld.u32 	%r98, [%rd144];
	shr.u32 	%r99, %r98, 16;
	cvt.u16.u32	%rs51, %r99;
	and.b16  	%rs52, %rs51, 255;
	cvt.u16.u32	%rs53, %r98;
	or.b16  	%rs54, %rs53, %rs52;
	setp.eq.s16	%p163, %rs54, 0;
	mov.f32 	%f1476, %f1475;
	mov.f32 	%f1477, %f1475;
	@%p163 bra 	BB0_143;

	ld.u8 	%rs55, [%rd144+1];
	and.b16  	%rs57, %rs53, 255;
	cvt.rn.f32.u16	%f1263, %rs57;
	div.rn.f32 	%f1264, %f1263, 0f437F0000;
	fma.rn.f32 	%f1265, %f1264, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1266, %rs55;
	div.rn.f32 	%f1267, %f1266, 0f437F0000;
	fma.rn.f32 	%f1268, %f1267, 0f40000000, 0fBF800000;
	cvt.rn.f32.u16	%f1269, %rs52;
	div.rn.f32 	%f1270, %f1269, 0f437F0000;
	fma.rn.f32 	%f1271, %f1270, 0f40000000, 0fBF800000;
	mul.f32 	%f1272, %f1268, %f1268;
	fma.rn.f32 	%f1273, %f1265, %f1265, %f1272;
	fma.rn.f32 	%f1274, %f1271, %f1271, %f1273;
	sqrt.rn.f32 	%f1275, %f1274;
	rcp.rn.f32 	%f1276, %f1275;
	mul.f32 	%f1475, %f1265, %f1276;
	mul.f32 	%f1476, %f1268, %f1276;
	mul.f32 	%f1477, %f1271, %f1276;

BB0_143:
	mul.f32 	%f1278, %f1416, %f1476;
	mul.f32 	%f1279, %f1415, %f1477;
	sub.f32 	%f1280, %f1279, %f1278;
	mul.f32 	%f1281, %f1414, %f1477;
	mul.f32 	%f1282, %f1416, %f1475;
	sub.f32 	%f1283, %f1282, %f1281;
	mul.f32 	%f1284, %f1415, %f1475;
	mul.f32 	%f1285, %f1414, %f1476;
	sub.f32 	%f1286, %f1285, %f1284;
	setp.lt.u32	%p164, %r98, 16777216;
	selp.f32	%f1287, 0fBF800000, 0f3F800000, %p164;
	mul.f32 	%f1288, %f1280, %f1287;
	mul.f32 	%f1289, %f1283, %f1287;
	mul.f32 	%f1290, %f1286, %f1287;
	mul.f32 	%f1291, %f1288, 0fBF3504F3;
	mul.f32 	%f1292, %f1289, 0fBF3504F3;
	mul.f32 	%f1293, %f1290, 0fBF3504F3;
	fma.rn.f32 	%f1294, %f1475, 0fBED105EC, %f1291;
	fma.rn.f32 	%f1295, %f1476, 0fBED105EC, %f1292;
	fma.rn.f32 	%f1296, %f1477, 0fBED105EC, %f1293;
	add.f32 	%f1297, %f285, %f1294;
	add.f32 	%f1298, %f287, %f1295;
	add.f32 	%f1299, %f289, %f1296;
	ld.global.f32 	%f1300, [directDir];
	mul.f32 	%f1301, %f286, %f1300;
	ld.global.f32 	%f1302, [directDir+4];
	mul.f32 	%f1303, %f288, %f1302;
	neg.f32 	%f1304, %f1303;
	sub.f32 	%f1305, %f1304, %f1301;
	ld.global.f32 	%f1306, [directDir+8];
	mul.f32 	%f1307, %f290, %f1306;
	sub.f32 	%f1308, %f1305, %f1307;
	cvt.sat.f32.f32	%f1309, %f1308;
	mul.f32 	%f1310, %f224, %f1309;
	mul.f32 	%f1311, %f225, %f1309;
	mul.f32 	%f1312, %f226, %f1309;
	mul.f32 	%f1313, %f297, %f1300;
	mul.f32 	%f1314, %f298, %f1302;
	neg.f32 	%f1315, %f1314;
	sub.f32 	%f1316, %f1315, %f1313;
	mul.f32 	%f1317, %f299, %f1306;
	sub.f32 	%f1318, %f1316, %f1317;
	cvt.sat.f32.f32	%f1319, %f1318;
	mul.f32 	%f1320, %f224, %f1319;
	mul.f32 	%f1321, %f225, %f1319;
	mul.f32 	%f1322, %f226, %f1319;
	mul.f32 	%f1323, %f1297, %f1300;
	mul.f32 	%f1324, %f1298, %f1302;
	neg.f32 	%f1325, %f1324;
	sub.f32 	%f1326, %f1325, %f1323;
	mul.f32 	%f1327, %f1299, %f1306;
	sub.f32 	%f1328, %f1326, %f1327;
	cvt.sat.f32.f32	%f1329, %f1328;
	mul.f32 	%f1330, %f224, %f1329;
	mul.f32 	%f1331, %f225, %f1329;
	mul.f32 	%f1332, %f226, %f1329;
	add.f32 	%f1333, %f1310, %f1320;
	add.f32 	%f1334, %f1311, %f1321;
	add.f32 	%f1335, %f1312, %f1322;
	add.f32 	%f1336, %f1333, %f1330;
	add.f32 	%f1337, %f1334, %f1331;
	add.f32 	%f1338, %f1335, %f1332;
	mul.f32 	%f1339, %f1336, 0f3F13CD3A;
	mul.f32 	%f1340, %f1337, 0f3F13CD3A;
	mul.f32 	%f1341, %f1338, 0f3F13CD3A;
	div.rn.f32 	%f1342, %f207, %f1339;
	div.rn.f32 	%f1343, %f208, %f1340;
	div.rn.f32 	%f1344, %f209, %f1341;
	setp.eq.f32	%p165, %f207, 0f00000000;
	selp.f32	%f1345, 0f00000000, %f1342, %p165;
	setp.eq.f32	%p166, %f208, 0f00000000;
	selp.f32	%f1346, 0f00000000, %f1343, %p166;
	setp.eq.f32	%p167, %f209, 0f00000000;
	selp.f32	%f1347, 0f00000000, %f1344, %p167;
	mul.f32 	%f306, %f1310, %f1345;
	mul.f32 	%f307, %f1311, %f1346;
	mul.f32 	%f308, %f1312, %f1347;
	mul.f32 	%f309, %f1320, %f1345;
	mul.f32 	%f310, %f1321, %f1346;
	mul.f32 	%f311, %f1322, %f1347;
	mul.f32 	%f312, %f1330, %f1345;
	mul.f32 	%f313, %f1331, %f1346;
	mul.f32 	%f314, %f1332, %f1347;
	ld.global.u32 	%r396, [additive];
	setp.eq.s32	%p168, %r396, 0;
	cvt.u64.u32	%rd23, %r2;
	cvt.u64.u32	%rd24, %r3;
	mov.f32 	%f1277, 0f3F800000;
	// inline asm
	{  cvt.rn.f16.f32 %rs60, %f1277;}

	// inline asm
	@%p168 bra 	BB0_145;

	mov.u64 	%rd163, image_RNM0;
	cvta.global.u64 	%rd152, %rd163;
	mov.u32 	%r400, 8;
	// inline asm
	call (%rd151), _rt_buffer_get_64, (%rd152, %r105, %r400, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs67, %rs68, %rs69, %rs70}, [%rd151];
	// inline asm
	{  cvt.f32.f16 %f1348, %rs67;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1349, %rs68;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1350, %rs69;}

	// inline asm
	// inline asm
	call (%rd157), _rt_buffer_get_64, (%rd152, %r105, %r400, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1351, %f306, %f1348;
	add.f32 	%f1352, %f307, %f1349;
	add.f32 	%f1353, %f308, %f1350;
	// inline asm
	{  cvt.rn.f16.f32 %rs66, %f1353;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs65, %f1352;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs64, %f1351;}

	// inline asm
	st.v4.u16 	[%rd157], {%rs64, %rs65, %rs66, %rs60};
	bra.uni 	BB0_146;

BB0_145:
	mov.u64 	%rd170, image_RNM0;
	cvta.global.u64 	%rd165, %rd170;
	mov.u32 	%r402, 8;
	// inline asm
	call (%rd164), _rt_buffer_get_64, (%rd165, %r105, %r402, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs73, %f308;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs72, %f307;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs71, %f306;}

	// inline asm
	st.v4.u16 	[%rd164], {%rs71, %rs72, %rs73, %rs60};

BB0_146:
	ld.global.u32 	%r403, [additive];
	setp.eq.s32	%p169, %r403, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs74, %f1277;}

	// inline asm
	@%p169 bra 	BB0_148;

	mov.u64 	%rd183, image_RNM1;
	cvta.global.u64 	%rd172, %rd183;
	mov.u32 	%r407, 8;
	// inline asm
	call (%rd171), _rt_buffer_get_64, (%rd172, %r105, %r407, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs81, %rs82, %rs83, %rs84}, [%rd171];
	// inline asm
	{  cvt.f32.f16 %f1358, %rs81;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1359, %rs82;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1360, %rs83;}

	// inline asm
	// inline asm
	call (%rd177), _rt_buffer_get_64, (%rd172, %r105, %r407, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1361, %f309, %f1358;
	add.f32 	%f1362, %f310, %f1359;
	add.f32 	%f1363, %f311, %f1360;
	// inline asm
	{  cvt.rn.f16.f32 %rs80, %f1363;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs79, %f1362;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs78, %f1361;}

	// inline asm
	st.v4.u16 	[%rd177], {%rs78, %rs79, %rs80, %rs74};
	bra.uni 	BB0_149;

BB0_148:
	mov.u64 	%rd190, image_RNM1;
	cvta.global.u64 	%rd185, %rd190;
	mov.u32 	%r409, 8;
	// inline asm
	call (%rd184), _rt_buffer_get_64, (%rd185, %r105, %r409, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs87, %f311;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs86, %f310;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs85, %f309;}

	// inline asm
	st.v4.u16 	[%rd184], {%rs85, %rs86, %rs87, %rs74};

BB0_149:
	ld.global.u32 	%r410, [additive];
	setp.eq.s32	%p170, %r410, 0;
	// inline asm
	{  cvt.rn.f16.f32 %rs88, %f1277;}

	// inline asm
	@%p170 bra 	BB0_151;

	mov.u64 	%rd203, image_RNM2;
	cvta.global.u64 	%rd192, %rd203;
	mov.u32 	%r414, 8;
	// inline asm
	call (%rd191), _rt_buffer_get_64, (%rd192, %r105, %r414, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	ld.v4.u16 	{%rs95, %rs96, %rs97, %rs98}, [%rd191];
	// inline asm
	{  cvt.f32.f16 %f1368, %rs95;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1369, %rs96;}

	// inline asm
	// inline asm
	{  cvt.f32.f16 %f1370, %rs97;}

	// inline asm
	// inline asm
	call (%rd197), _rt_buffer_get_64, (%rd192, %r105, %r414, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	add.f32 	%f1371, %f312, %f1368;
	add.f32 	%f1372, %f313, %f1369;
	add.f32 	%f1373, %f314, %f1370;
	// inline asm
	{  cvt.rn.f16.f32 %rs94, %f1373;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs93, %f1372;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs92, %f1371;}

	// inline asm
	st.v4.u16 	[%rd197], {%rs92, %rs93, %rs94, %rs88};
	bra.uni 	BB0_169;

BB0_151:
	mov.u64 	%rd210, image_RNM2;
	cvta.global.u64 	%rd205, %rd210;
	mov.u32 	%r416, 8;
	// inline asm
	call (%rd204), _rt_buffer_get_64, (%rd205, %r105, %r416, %rd23, %rd24, %rd32, %rd32);
	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs101, %f314;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs100, %f313;}

	// inline asm
	// inline asm
	{  cvt.rn.f16.f32 %rs99, %f312;}

	// inline asm
	st.v4.u16 	[%rd204], {%rs99, %rs100, %rs101, %rs88};

BB0_169:
	ret;
}


